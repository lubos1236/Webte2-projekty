{
  "version": 3,
  "sources": ["../../latex.js/node_modules/he/he.js", "../../latex.js/src/types.ls", "../../latex.js/src/symbols.ls", "../../latex.js/src/documentclasses/base.ls", "../../latex.js/src/documentclasses/article.ls", "../../latex.js/src/documentclasses/report.ls", "../../latex.js/src/documentclasses/book.ls", "../../latex.js/src/latex-parser.pegjs.js", "../../latex.js/src/documentclasses/index.js", "../../latex.js/src/packages/xcolor.ls", "../../latex.js/src/packages/color.ls", "../../latex.js/src/packages/echo.ls", "../../latex.js/src/packages/gensymb.ls", "../../latex.js/src/packages/graphicx.ls", "../../latex.js/src/packages/index.js", "../../latex.js/src/packages/graphics.ls", "../../latex.js/src/packages/hyperref.ls", "../../latex.js/src/packages/latexsym.ls", "../../latex.js/src/packages/multicol.ls", "../../latex.js/src/packages/stix.ls", "../../latex.js/src/packages/textcomp.ls", "../../latex.js/src/packages/textgreek.ls", "../../latex.js/node_modules/lodash/_freeGlobal.js", "../../latex.js/node_modules/lodash/_root.js", "../../latex.js/node_modules/lodash/_Symbol.js", "../../latex.js/node_modules/lodash/_getRawTag.js", "../../latex.js/node_modules/lodash/_objectToString.js", "../../latex.js/node_modules/lodash/_baseGetTag.js", "../../latex.js/node_modules/lodash/isObject.js", "../../latex.js/node_modules/lodash/isFunction.js", "../../latex.js/node_modules/lodash/_isMasked.js", "../../latex.js/node_modules/lodash/_coreJsData.js", "../../latex.js/node_modules/lodash/_toSource.js", "../../latex.js/node_modules/lodash/_baseIsNative.js", "../../latex.js/node_modules/lodash/_getValue.js", "../../latex.js/node_modules/lodash/_getNative.js", "../../latex.js/node_modules/lodash/_defineProperty.js", "../../latex.js/node_modules/lodash/_baseAssignValue.js", "../../latex.js/node_modules/lodash/eq.js", "../../latex.js/node_modules/lodash/_assignValue.js", "../../latex.js/node_modules/lodash/_copyObject.js", "../../latex.js/node_modules/lodash/identity.js", "../../latex.js/node_modules/lodash/_apply.js", "../../latex.js/node_modules/lodash/_overRest.js", "../../latex.js/node_modules/lodash/constant.js", "../../latex.js/node_modules/lodash/_baseSetToString.js", "../../latex.js/node_modules/lodash/_shortOut.js", "../../latex.js/node_modules/lodash/_setToString.js", "../../latex.js/node_modules/lodash/_baseRest.js", "../../latex.js/node_modules/lodash/isLength.js", "../../latex.js/node_modules/lodash/isArrayLike.js", "../../latex.js/node_modules/lodash/_isIndex.js", "../../latex.js/node_modules/lodash/_isIterateeCall.js", "../../latex.js/node_modules/lodash/_createAssigner.js", "../../latex.js/node_modules/lodash/_isPrototype.js", "../../latex.js/node_modules/lodash/_baseTimes.js", "../../latex.js/node_modules/lodash/isObjectLike.js", "../../latex.js/node_modules/lodash/_baseIsArguments.js", "../../latex.js/node_modules/lodash/isArguments.js", "../../latex.js/node_modules/lodash/isArray.js", "../../latex.js/node_modules/lodash/stubFalse.js", "../../latex.js/node_modules/lodash/isBuffer.js", "../../latex.js/node_modules/lodash/_baseIsTypedArray.js", "../../latex.js/node_modules/lodash/_baseUnary.js", "../../latex.js/node_modules/lodash/_nodeUtil.js", "../../latex.js/node_modules/lodash/isTypedArray.js", "../../latex.js/node_modules/lodash/_arrayLikeKeys.js", "../../latex.js/node_modules/lodash/_overArg.js", "../../latex.js/node_modules/lodash/_nativeKeys.js", "../../latex.js/node_modules/lodash/_baseKeys.js", "../../latex.js/node_modules/lodash/keys.js", "../../latex.js/node_modules/lodash/assign.js", "../../latex.js/node_modules/lodash/_nativeKeysIn.js", "../../latex.js/node_modules/lodash/_baseKeysIn.js", "../../latex.js/node_modules/lodash/keysIn.js", "../../latex.js/src/latex.ltx.ls", "../../latex.js/src/generator.ls", "../../latex.js/node_modules/lodash/assignIn.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/utils/methods.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/utils/utils.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/utils/window.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/Base.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/utils/adopter.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/regex.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/Color.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/class.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/css.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/data.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/Point.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/Matrix.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/parser.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/Box.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/List.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/selector.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/event.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/EventTarget.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/SVGArray.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/attr.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Dom.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Element.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Container.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Defs.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Shape.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/circled.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Fragment.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Gradient.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Pattern.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Image.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/PointArray.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Line.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Marker.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/animation/Controller.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/utils/pathParser.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/types/PathArray.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/animation/Morphable.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Path.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/poly.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Polygon.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Polyline.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Rect.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/animation/Queue.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/animation/Animator.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/animation/Timeline.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/animation/Runner.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Svg.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Symbol.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/textable.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Text.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Tspan.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Circle.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/modules/core/containerGeometry.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/G.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/A.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Mask.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Stop.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Style.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/TextPath.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/elements/Use.js", "../../latex.js/node_modules/@svgdotjs/svg.js/src/main.js", "../../latex.js/node_modules/katex/dist/katex.mjs", "../../latex.js/node_modules/hypher/lib/hypher.js", "../../latex.js/node_modules/hyphenation.en-us/lib/en-us.js", "../../latex.js/node_modules/lodash/_arrayPush.js", "../../latex.js/node_modules/lodash/_isFlattenable.js", "../../latex.js/node_modules/lodash/_baseFlatten.js", "../../latex.js/node_modules/lodash/flattenDeep.js", "../../latex.js/node_modules/lodash/compact.js", "../../latex.js/src/html-generator.ls", "../../latex.js/src/latex.component.mjs"],
  "sourcesContent": ["/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n", "# This class manages lengths. A length is immutable.\n# Internally, maximum precision is used by storing absolute lengths in sp.\n#\n# We need the Length class per generator, so scope it\nexport makeLengthClass = (generator) -> class\n    # TODO: test: Length = generator.Length\n    g = generator\n\n    # conceptually private\n    _value: 0\n    _unit: \"\"\n\n    # all units in TeX sp\n    unitsSp = new Map([\n        * \"sp\"  1\n        * \"pt\"  65536\n        * \"bp\"  65536 * 72.27/72        # 1 bp is the non-traditional pt\n        * \"pc\"  65536 * 12\n        * \"dd\"  65536 * 1238/1157\n        * \"cc\"  65536 * 1238/1157 * 12\n        * \"in\"  65536 * 72.27\n        * \"px\"  65536 * 72.27/96        # 1 px is 1/96 in\n        * \"mm\"  65536 * 7227/2540\n        * \"cm\"  65536 * 7227/254\n    ])\n\n    # zero class constant\n    @zero = new @@(0, \"sp\")\n\n    # CTOR\n    (value, unit) ->\n        g.error \"Length CTOR: value needs to be a number!\" if not typeof value == \"number\"\n\n        @_value = value\n        @_unit = unit\n\n        # if not relative/unknown unit, convert to sp\n        if unitsSp.has unit\n            @_value = value * unitsSp.get unit\n            @_unit = \"sp\"\n\n\n    # length as string (converted to px if not relative), rounded to global precision\n    value:~ ->\n        if @_unit == \"sp\"\n            (g.round @_value / unitsSp.get \"px\") + \"px\"\n        else\n            g.round(@_value) + @_unit\n\n    # value in px (throw error if relative), rounded to global precision\n    px:~ ->\n        if @_unit == \"sp\"\n            g.round @_value / unitsSp.get \"px\"\n        else\n            g.error \"Length.px() called on relative length!\"\n\n    # unitless value, unless relative/unknown unit\n    pxpct:~ ->\n        if @_unit == \"sp\"\n            g.round @_value / unitsSp.get \"px\"\n        else\n            g.round(@_value) + @_unit\n\n\n    unit:~ -> @_unit\n\n\n    # compare this length to another length, return -1, 0, 1 if this is smaller, equal, greater\n    cmp: (l) ->\n        g.error \"Length.cmp(): incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        return -1 if @_value < l._value\n        return  0 if @_value == l._value\n        return  1\n\n\n    # add another length to this length and return the new length\n    add: (l) ->\n        g.error \"Length.add(): incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        new g.Length @_value + l._value, @_unit\n\n    # subtract another length from this length\n    sub: (l) ->\n        g.error \"Length.sub: incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        new g.Length @_value - l._value, @_unit\n\n    # multiply this length with a scalar\n    mul: (s) ->\n        new g.Length @_value * s, @_unit\n\n    # divide this length by a scalar\n    div: (s) ->\n        new g.Length @_value / s, @_unit\n\n    # return the arithmetic absolute length\n    abs: ->\n        new g.Length Math.abs(@_value), @_unit\n\n    # get the ratio of this length to another length\n    ratio: (l) ->\n        g.error \"Length.ratio: incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        @_value / l._value\n\n    # calculate the L2 norm of this and another length\n    norm: (l) ->\n        g.error \"Length.norm: incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        new g.Length Math.sqrt(@_value**2 + l._value**2), @_unit\n\n\n    @min = ->\n        Array.from(&).reduce (a, b) ->\n            if a.cmp(b) < 0 then a else b\n\n    @max = ->\n        Array.from(&).reduce (a, b) ->\n            if a.cmp(b) > 0 then a else b\n\n\n# a position vector (from origin to point)\nexport class Vector\n\n    _x: null # Length\n    _y: null # Length\n\n\n    # CTOR: x and y can be Lengths TODO: or unitless coordinates?\n    (x, y) ->\n        @_x = x\n        @_y = y\n\n\n    x:~ -> @_x\n    y:~ -> @_y\n\n\n    add: (v) ->\n        new Vector @_x.add(v.x), @_y.add(v.y)\n\n    sub: (v) ->\n        new Vector @_x.sub(v.x), @_y.sub(v.y)\n\n    mul: (s) ->\n        new Vector @_x.mul(s), @_y.mul(s)\n\n    # shift the start point of the vector along its direction to shorten (l < 0) or lengthen (l > 0) the vector\n    # and return another position vector that will point to the new start of the vector\n    shift_start: (l) ->\n        if @_x.unit != @_y.unit\n            throw new Error \"Vector.shift_start: incompatible lengths! (#{@_x.unit} and #{@_y.unit})\"\n\n        # l^2 = x^2 + y^2\n        #\n        # y = m*x\n        # x = y/m\n        # m = y/x\n        #\n        #  => l^2 = x^2 + x^2 * m^2   =   x^2 * (1 + m^2)\n        #  => l^2 = y^2/m^2 + y^2     =   y^2 * (1 + 1/m^2)\n        #\n        #  => x = l/sqrt(1 + m^2)\n        #  => y = l/sqrt(1 + 1/m^2)\n\n        x = @_x._value\n        y = @_y._value\n\n        msq  = Math.sqrt 1 + y*y / (x*x)\n        imsq = Math.sqrt 1 + x*x / (y*y)\n\n        dir_x = if x < 0 then -1 else 1\n        dir_y = if y < 0 then -1 else 1\n\n        # new start point of arrow is at l distance in direction m from origin\n        if x != 0 and y != 0\n            sx = l.div(msq).mul -dir_x\n            sy = l.div(imsq).mul -dir_y\n        else if y == 0\n            sx = l.mul -dir_x\n            sy = @_y.mul 0\n        else\n            sx = @_x.mul 0\n            sy = l.mul -dir_y\n\n        new Vector sx, sy\n\n\n    shift_end: (l) ->\n        if @_x.unit != @_y.unit\n            throw new Error \"Vector.shift_end: incompatible lengths! (#{@_x.unit} and #{@_y.unit})\"\n\n        x = @_x._value\n        y = @_y._value\n\n        # shorten vector by half the arrow head length\n        msq  = Math.sqrt 1 + y*y / (x*x)\n        imsq = Math.sqrt 1 + x*x / (y*y)\n\n        dir_x = if x < 0 then -1 else 1\n        dir_y = if y < 0 then -1 else 1\n\n        if x != 0 and y != 0\n            ex = @_x.add(l.div(msq).mul dir_x)\n            ey = @_y.add(l.div(imsq).mul dir_y)\n        else if y == 0\n            ex = @_x.add(l.mul dir_x)\n            ey = @_y\n        else\n            ex = @_x\n            ey = @_y.add(l.mul dir_y)\n\n        new Vector ex, ey\n\n\n    # calculate length of vector; returns an instance of Length\n    norm: ->\n        @_x.norm @_y\n", "import 'he'\n\nexport ligatures = new Map([\n    * 'ff'                  he.decode '&fflig;'     #     U+FB00\n    * 'ffi'                 he.decode '&ffilig;'    #     U+FB03\n    * 'ffl'                 he.decode '&ffllig;'    #     U+FB04\n    * 'fi'                  he.decode '&filig;'     #     U+FB01\n    * 'fl'                  he.decode '&fllig;'     #     U+FB02\n    * '``'                  he.decode '&ldquo;'     # “   U+201C\n    * \"''\"                  he.decode '&rdquo;'     # ”   U+201D\n    * '!´'                  he.decode '&iexcl;'     #     U+00A1\n    * '?´'                  he.decode '&iquest;'    #     U+00BF\n    * '--'                  he.decode '&ndash;'     #     U+2013\n    * '---'                 he.decode '&mdash;'     #     U+2014\n\n    * '<<'                  he.decode '&laquo;'     #     U+00AB\n    * '>>'                  he.decode '&raquo;'     #     U+00BB\n\n    # defined by german\n    * '\"`'                  he.decode '&bdquo;'     # „   U+201E  \\quotedblbase\n    * '\"\\''                 he.decode '&ldquo;'     # “   U+201C  \\textquotedblleft\n])\n\nexport diacritics = new Map([\n    * \\b                    ['\\u0332', '\\u005F']        # _  first: combining char, second: standalone char\n    * \\c                    ['\\u0327', '\\u00B8']        # ¸\n    * \\d                    ['\\u0323', '\\u200B \\u0323'] #\n    * \\H                    ['\\u030B', '\\u02DD']        # ˝\n    * \\k                    ['\\u0328', '\\u02DB']        # ˛\n    * \\r                    ['\\u030A', '\\u02DA']        # ˚\n    * \\t                    ['\\u0361', '\\u200B \\u0361'] #\n    * \\u                    ['\\u0306', '\\u02D8']        # ˘\n    * \\v                    ['\\u030C', '\\u02C7']        # ˇ\n    * \\\"                    ['\\u0308', '\\u00A8']        # ¨\n    * \\~                    ['\\u0303', '\\u007E']        # ~\n    * \\^                    ['\\u0302', '\\u005E']        # ^\n    * \\`                    ['\\u0300', '\\u0060']        # `\n    * \\'                    ['\\u0301', '\\u00B4']        # ´\n    * \\=                    ['\\u0304', '\\u00AF']        # ¯\n    * \\.                    ['\\u0307', '\\u02D9']        # ˙\n])\n\n# tuenc.def (LuaLaTeX, XeLaTeX; (PDF)LaTeX would use t1enc.def, ot1enc.def, etc. and need textcomp.sty)\nexport symbols = new Map([\n    # spaces\n    * \\space                ' '\n    * \\nobreakspace         he.decode '&nbsp;'      #     U+00A0   ~\n    * \\thinspace            he.decode '&thinsp;'    #     U+2009\n    * \\enspace              he.decode '&ensp;'      #     U+2002   (en quad: U+2000)\n    * \\enskip               he.decode '&ensp;'\n    * \\quad                 he.decode '&emsp;'      #     U+2003   (em quad: U+2001)\n    * \\qquad                he.decode '&emsp;'*2\n\n    * \\textvisiblespace     he.decode '&blank;'     # ␣   U+2423\n    * \\textcompwordmark     he.decode '&zwnj;'      #     U+200C\n\n    # basic latin\n    * \\textdollar           '$'                     #     U+0024    \\$\n    * \\$                    '$'\n    * \\slash                he.decode '&sol;'       #     U+002F\n    * \\textless             '<'                     #     U+003C\n    * \\textgreater          '>'                     #     U+003E\n    * \\textbackslash        '\\u005C'                #     U+005C\n    * \\textasciicircum      '^'                     #     U+005E    \\^{}\n    * \\textunderscore       '_'                     #     U+005F    \\_\n    * \\_                    '_'\n    * \\lbrack               '['                     #     U+005B\n    * \\rbrack               ']'                     #     U+005D\n    * \\textbraceleft        '{'                     #     U+007B    \\{\n    * \\{                    '{'\n    * \\textbraceright       '}'                     #     U+007D    \\}\n    * \\}                    '}'\n    * \\textasciitilde       '˜'                     #     U+007E    \\~{}\n\n    # non-ASCII letters\n    * \\AA                   '\\u00C5'                # Å\n    * \\aa                   '\\u00E5'                # å\n    * \\AE                   he.decode '&AElig;'     # Æ   U+00C6\n    * \\ae                   he.decode '&aelig;'     # æ   U+00E6\n    * \\OE                   he.decode '&OElig;'     # Œ   U+0152\n    * \\oe                   he.decode '&oelig;'     # œ   U+0153\n    * \\DH                   he.decode '&ETH;'       # Ð   U+00D0\n    * \\dh                   he.decode '&eth;'       # ð   U+00F0\n    * \\DJ                   he.decode '&Dstrok;'    # Đ   U+0110\n    * \\dj                   he.decode '&dstrok;'    # đ   U+0111\n    * \\NG                   he.decode '&ENG;'       # Ŋ   U+014A\n    * \\ng                   he.decode '&eng;'       # ŋ   U+014B\n    * \\TH                   he.decode '&THORN;'     # Þ   U+00DE\n    * \\th                   he.decode '&thorn;'     # þ   U+00FE\n    * \\O                    he.decode '&Oslash;'    # Ø   U+00D8\n    * \\o                    he.decode '&oslash;'    # ø   U+00F8\n    * \\i                    he.decode '&imath;'     # ı   U+0131\n    * \\j                    he.decode '&jmath;'     # ȷ   U+0237\n    * \\L                    he.decode '&Lstrok;'    # Ł   U+0141\n    * \\l                    he.decode '&lstrok;'    # ł   U+0142\n    * \\IJ                   he.decode '&IJlig;'     # Ĳ   U+0132\n    * \\ij                   he.decode '&ijlig;'     # ĳ   U+0133\n    * \\SS                   '\\u1E9E'                # ẞ\n    * \\ss                   he.decode '&szlig;'     # ß   U+00DF\n\n    # quotes\n    * \\textquotesingle      \"'\"                     # '   U+0027\n    * \\textquoteleft        he.decode '&lsquo;'     # ‘   U+2018    \\lq\n    * \\lq                   he.decode '&lsquo;'\n    * \\textquoteright       he.decode '&rsquo;'     # ’   U+2019    \\rq\n    * \\rq                   he.decode '&rsquo;'\n    * \\textquotedbl         he.decode '&quot;'      # \"   U+0022\n    * \\textquotedblleft     he.decode '&ldquo;'     # “   U+201C\n    * \\textquotedblright    he.decode '&rdquo;'     # ”   U+201D\n    * \\quotesinglbase       he.decode '&sbquo;'     # ‚   U+201A\n    * \\quotedblbase         he.decode '&bdquo;'     # „   U+201E\n    * \\guillemotleft        he.decode '&laquo;'     # «   U+00AB\n    * \\guillemotright       he.decode '&raquo;'     # »   U+00BB\n    * \\guilsinglleft        he.decode '&lsaquo;'    # ‹   U+2039\n    * \\guilsinglright       he.decode '&rsaquo;'    # ›   U+203A\n\n    # diacritics\n    * \\textasciigrave       '\\u0060'                # `\n    * \\textgravedbl         '\\u02F5'                # ˵\n    * \\textasciidieresis    he.decode '&die;'       # ¨   U+00A8\n    * \\textasciiacute       he.decode '&acute;'     # ´   U+00B4\n    * \\textacutedbl         he.decode '&dblac;'     # ˝   U+02DD\n    * \\textasciimacron      he.decode '&macr;'      # ¯   U+00AF\n    * \\textasciicaron       he.decode '&caron;'     # ˇ   U+02C7\n    * \\textasciibreve       he.decode '&breve;'     # ˘   U+02D8\n    * \\texttildelow         '\\u02F7'                # ˷\n\n    # punctuation\n    * \\textendash           he.decode '&ndash;'     # –   U+2013\n    * \\textemdash           he.decode '&mdash;'     # —   U+2014\n    * \\textellipsis         he.decode '&hellip;'    # …   U+2026    \\dots, \\ldots\n    * \\dots                 he.decode '&hellip;'\n    * \\ldots                he.decode '&hellip;'\n    * \\textbullet           he.decode '&bull;'      # •   U+2022\n    * \\textopenbullet       '\\u25E6'                # ◦\n    * \\textperiodcentered   he.decode '&middot;'    # ·   U+00B7\n    * \\textdagger           he.decode '&dagger;'    # †   U+2020    \\dag\n    * \\dag                  he.decode '&dagger;'\n    * \\textdaggerdbl        he.decode '&Dagger;'    # ‡   U+2021    \\ddag\n    * \\ddag                 he.decode '&Dagger;'\n    * \\textexclamdown       he.decode '&iexcl;'     # ¡   U+00A1\n    * \\textquestiondown     he.decode '&iquest;'    # ¿   U+00BF\n    * \\textinterrobang      '\\u203D'                # ‽\n    * \\textinterrobangdown  '\\u2E18'                # ⸘\n\n    * \\textsection          he.decode '&sect;'      # §   U+00A7    \\S\n    * \\S                    he.decode '&sect;'\n    * \\textparagraph        he.decode '&para;'      # ¶   U+00B6    \\P\n    * \\P                    he.decode '&para;'\n    * \\textblank            '\\u2422'                # ␢\n\n    # delimiters\n    * \\textlquill           '\\u2045'                # ⁅\n    * \\textrquill           '\\u2046'                # ⁆\n    * \\textlangle           '\\u2329'                # 〈\n    * \\textrangle           '\\u232A'                # 〉\n    * \\textlbrackdbl        '\\u301A'                # 〚\n    * \\textrbrackdbl        '\\u301B'                # 〛\n\n    # legal symbols\n    * \\textcopyright        he.decode '&copy;'      # ©   U+00A9    \\copyright\n    * \\copyright            he.decode '&copy;'\n    * \\textregistered       he.decode '&reg;'       # ®   U+00AE\n    * \\textcircledP         he.decode '&copysr;'    # ℗   U+2117\n    * \\textservicemark      '\\u2120'                # ℠\n    * \\texttrademark        he.decode '&trade;'     # ™   U+2122\n\n    # genealogical\n    * \\textmarried          '\\u26AD'                # ⚭\n    * \\textdivorced         '\\u26AE'                # ⚮\n\n    # misc\n    * \\textordfeminine      he.decode '&ordf;'      # ª   U+00AA\n    * \\textordmasculine     he.decode '&ordm;'      # º   U+00BA\n\n    * \\textdegree           he.decode '&deg;'       # °   U+00B0\n    * \\textmu               he.decode '&micro;'     # µ   U+00B5\n\n    * \\textbar              '\\u007C'                # |\n    * \\textbardbl           he.decode '&Vert;'      # ‖   U+2016\n    * \\textbrokenbar        he.decode '&brvbar;'    # ¦   U+00A6\n\n    * \\textreferencemark    '\\u203B'                # ※\n    * \\textdiscount         '\\u2052'                # ⁒\n    * \\textcelsius          '\\u2103'                # ℃   U+2103\n    * \\textnumero           he.decode '&numero;'    # №   U+2116\n    * \\textrecipe           he.decode '&rx;'        # ℞   U+211E\n    * \\textestimated        '\\u212E'                # ℮\n    * \\textbigcircle        he.decode '&xcirc;'     # ◯   U+25EF\n    * \\textmusicalnote      he.decode '&sung;'      # ♪   U+266A\n\n    * \\textohm              '\\u2126'                # Ω\n    * \\textmho              '\\u2127'                # ℧\n\n\n    # arrows\n    * \\textleftarrow        he.decode '&larr;'      # ←   U+2190\n    * \\textuparrow          he.decode '&uarr;'      # ↑   U+2191\n    * \\textrightarrow       he.decode '&rarr;'      # →   U+2192\n    * \\textdownarrow        he.decode '&darr;'      # ↓   U+2193\n\n    # math symbols\n    * \\textperthousand      he.decode '&permil;'    # ‰   U+2030\n    * \\textpertenthousand   '\\u2031'                # ‱\n    * \\textonehalf          he.decode '&frac12;'    # ½   U+00BD\n    * \\textthreequarters    he.decode '&frac34;'    # ¾   U+00BE\n    * \\textonequarter       he.decode '&frac14;'    # ¼   U+00BC\n    * \\textfractionsolidus  he.decode '&frasl;'     # ⁄   U+2044\n    * \\textdiv              he.decode '&divide;'    # ÷   U+00F7\n    * \\texttimes            he.decode '&times;'     # ×   U+00D7\n    * \\textminus            he.decode '&minus;'     # −   U+2212\n    * \\textasteriskcentered he.decode '&lowast;'    # ∗   U+2217\n    * \\textpm               he.decode '&plusmn;'    # ±   U+00B1\n    * \\textsurd             he.decode '&radic;'     # √   U+221A\n    * \\textlnot             he.decode '&not;'       # ¬   U+00AC\n    * \\textonesuperior      he.decode '&sup1;'      # ¹   U+00B9\n    * \\texttwosuperior      he.decode '&sup2;'      # ²   U+00B2\n    * \\textthreesuperior    he.decode '&sup3;'      # ³   U+00B3\n\n    # currencies\n    * \\texteuro             he.decode '&euro;'      # €   U+20AC\n    * \\textcent             he.decode '&cent;'      # ¢   U+00A2\n    * \\textsterling         he.decode '&pound;'     # £   U+00A3    \\pounds\n    * \\pounds               he.decode '&pound;'\n    * \\textbaht             '\\u0E3F'                # ฿\n    * \\textcolonmonetary    '\\u20A1'                # ₡\n    * \\textcurrency         '\\u00A4'                # ¤\n    * \\textdong             '\\u20AB'                # ₫\n    * \\textflorin           '\\u0192'                # ƒ\n    * \\textlira             '\\u20A4'                # ₤\n    * \\textnaira            '\\u20A6'                # ₦\n    * \\textpeso             '\\u20B1'                # ₱\n    * \\textwon              '\\u20A9'                # ₩\n    * \\textyen              '\\u00A5'                # ¥\n])\n", "'use strict'\n\n# base class for all standard documentclasses\n#\nexport class Base\n\n    args = @args = {}\n\n    # class options\n    options: new Map\n\n    # CTOR\n    (generator, options) ->\n\n        @g = generator\n        @options = options if options\n\n        @g.newCounter \\part\n        @g.newCounter \\section\n        @g.newCounter \\subsection       \\section\n        @g.newCounter \\subsubsection    \\subsection\n        @g.newCounter \\paragraph        \\subsubsection\n        @g.newCounter \\subparagraph     \\paragraph\n\n        @g.newCounter \\figure\n        @g.newCounter \\table\n\n\n\n        # default: letterpaper, 10pt, onecolumn, oneside\n\n        @g.setLength \\paperheight       new @g.Length 11, \"in\"\n        @g.setLength \\paperwidth        new @g.Length 8.5, \"in\"\n        @g.setLength \\@@size            new @g.Length 10, \"pt\"\n\n        @options.forEach (v, k) ~>\n            switch k\n            | \"oneside\" =>\n            | \"twoside\" =>      # twoside doesn't make sense in single-page HTML\n\n            | \"onecolumn\" =>    # TODO\n            | \"twocolumn\" =>\n\n            | \"titlepage\" =>    # TODO\n            | \"notitlepage\" =>\n\n            | \"fleqn\" =>\n            | \"leqno\" =>\n\n            | \"a4paper\" =>\n                @g.setLength \\paperheight   new @g.Length 297, \"mm\"\n                @g.setLength \\paperwidth    new @g.Length 210, \"mm\"\n            | \"a5paper\" =>\n                @g.setLength \\paperheight   new @g.Length 210, \"mm\"\n                @g.setLength \\paperwidth    new @g.Length 148, \"mm\"\n            | \"b5paper\" =>\n                @g.setLength \\paperheight   new @g.Length 250, \"mm\"\n                @g.setLength \\paperwidth    new @g.Length 176, \"mm\"\n            | \"letterpaper\" =>\n                @g.setLength \\paperheight   new @g.Length 11, \"in\"\n                @g.setLength \\paperwidth    new @g.Length 8.5, \"in\"\n            | \"legalpaper\" =>\n                @g.setLength \\paperheight   new @g.Length 14, \"in\"\n                @g.setLength \\paperwidth    new @g.Length 8.5, \"in\"\n            | \"executivepaper\" =>\n                @g.setLength \\paperheight   new @g.Length 10.5, \"in\"\n                @g.setLength \\paperwidth    new @g.Length 7.25, \"in\"\n            | \"landscape\" =>\n                tmp = @g.length \\paperheight\n                @g.setLength \\paperheight   @g.length \\paperwidth\n                @g.setLength \\paperwidth    tmp\n\n            | otherwise =>\n                # check if a point size was given -> set font size\n                value = parseFloat k\n                if value != NaN and k.endsWith \"pt\" and String(value) == k.substring 0, k.length - 2\n                    @g.setLength \\@@size new @g.Length value, \"pt\"\n\n\n\n        ## textwidth\n\n        pt345 = new @g.Length 345, \"pt\"\n        inch = new @g.Length 1, \"in\"\n\n        textwidth = @g.length(\\paperwidth).sub(inch.mul 2)\n        if textwidth.cmp(pt345) == 1\n            textwidth = pt345\n\n        @g.setLength \\textwidth textwidth\n\n\n        ## margins\n\n        @g.setLength \\marginparsep new @g.Length 11, \"pt\"\n        @g.setLength \\marginparpush new @g.Length 5, \"pt\"\n\n        # in px\n        margins = @g.length(\\paperwidth).sub @g.length(\\textwidth)\n        oddsidemargin = margins.mul(0.5).sub(inch)\n        marginparwidth = margins.mul(0.5).sub(@g.length(\\marginparsep)).sub(inch.mul 0.8)\n        if marginparwidth.cmp(inch.mul(2)) == 1\n            marginparwidth = inch.mul(2)\n\n        @g.setLength \\oddsidemargin oddsidemargin\n        @g.setLength \\marginparwidth marginparwidth\n\n        # \\evensidemargin = \\paperwidth - 2in - \\textwidth - \\oddsidemargin\n        # \\@settopoint\\evensidemargin\n\n\n\n    \\contentsname       :-> [ \"Contents\" ]\n    \\listfigurename     :-> [ \"List of Figures\" ]\n    \\listtablename      :-> [ \"List of Tables\" ]\n\n    \\partname           :-> [ \"Part\" ]\n\n    \\figurename         :-> [ \"Figure\" ]\n    \\tablename          :-> [ \"Table\" ]\n\n    \\appendixname       :-> [ \"Appendix\" ]\n    \\indexname          :-> [ \"Index\" ]\n\n\n    ##############\n    # sectioning #\n    ##############\n\n    args\n     ..\\part =          \\\n     ..\\section =       \\\n     ..\\subsection =    \\\n     ..\\subsubsection = \\\n     ..\\paragraph =     \\\n     ..\\subparagraph =  <[ V s X o? g ]>\n\n\n    \\part               : (s, toc, ttl) -> [ @g.startsection \\part,           0, s, toc, ttl ]\n    \\section            : (s, toc, ttl) -> [ @g.startsection \\section,        1, s, toc, ttl ]\n    \\subsection         : (s, toc, ttl) -> [ @g.startsection \\subsection,     2, s, toc, ttl ]\n    \\subsubsection      : (s, toc, ttl) -> [ @g.startsection \\subsubsection,  3, s, toc, ttl ]\n    \\paragraph          : (s, toc, ttl) -> [ @g.startsection \\paragraph,      4, s, toc, ttl ]\n    \\subparagraph       : (s, toc, ttl) -> [ @g.startsection \\subparagraph,   5, s, toc, ttl ]\n\n\n    \\thepart            :-> [ @g.Roman @g.counter \\part ]\n    \\thesection         :-> [ @g.arabic @g.counter \\section ]\n    \\thesubsection      :-> @thesection!       ++ \".\" + @g.arabic @g.counter \\subsection\n    \\thesubsubsection   :-> @thesubsection!    ++ \".\" + @g.arabic @g.counter \\subsubsection\n    \\theparagraph       :-> @thesubsubsection! ++ \".\" + @g.arabic @g.counter \\paragraph\n    \\thesubparagraph    :-> @theparagraph!     ++ \".\" + @g.arabic @g.counter \\subparagraph\n\n\n    # title\n\n    args.\\maketitle =   <[ V ]>\n\n    \\maketitle          :->\n        @g.setTitle @_title\n\n        title = @g.create @g.title, @_title\n        author = @g.create @g.author, @_author\n        date = @g.create @g.date, if @_date then that else @g.macro \\today\n\n        maketitle = @g.create @g.list, [\n            @g.createVSpace new @g.Length 2, \"em\"\n            title\n            @g.createVSpace new @g.Length 1.5, \"em\"\n            author\n            @g.createVSpace new @g.Length 1, \"em\"\n            date\n            @g.createVSpace new @g.Length 1.5, \"em\"\n        ], \"center\"\n\n\n        # reset footnote back to 0\n        @g.setCounter \\footnote 0\n\n        # reset - maketitle can only be used once\n        @_title = null\n        @_author = null\n        @_date = null\n        @_thanks = null\n\n        @\\title = @\\author = @\\date = @\\thanks = @\\and = @\\maketitle = !->\n\n        [ maketitle ]\n", "import\n    './base': { Base }\n\n\nexport class Article extends Base\n\n    # public static\n    @css = \"css/article.css\"\n\n\n    # CTOR\n    (generator, options) ->\n        super ...\n\n        @g.setCounter \\secnumdepth  3\n        @g.setCounter \\tocdepth     3\n\n\n    args = @args = Base.args\n\n    \\refname            :-> [ \"References\" ]\n\n\n    # toc\n\n    args.\\tableofcontents = <[ V ]>\n    \\tableofcontents    : -> @section(true, undefined, @g.macro(\\contentsname)) ++ [ @g._toc ]\n\n\n    args.\\abstract =    <[ V ]>\n\n    \\abstract           :->\n        # onecolumn, no titlepage\n        @g.setFontSize \"small\"\n\n        # TODO use center env directly instead...\n        @g.enterGroup!\n        @g.setFontWeight(\"bf\")\n        head = @g.create @g.list, @g.macro(\"abstractname\"), \"center\"\n        @g.exitGroup!\n\n        [ head ] ++ @quotation!\n\n    \\endabstract        :!-> @endquotation!\n\n\n    args.\\appendix =    <[ V ]>\n\n    \\appendix           :!->\n        @g.setCounter \\section 0\n        @g.setCounter \\subsection 0\n        @[\\thesection] = -> [ @g.Alph @g.counter \\section ]\n", "import\n    './base': { Base }\n\n\nexport class Report extends Base\n\n    # public static\n    @css = \"css/book.css\"\n\n\n    # CTOR\n    (generator, options) ->\n        super ...\n\n        @g.newCounter \\chapter\n        @g.addToReset \\section      \\chapter\n\n        @g.setCounter \\secnumdepth  2\n        @g.setCounter \\tocdepth     2\n\n        @g.addToReset \\figure       \\chapter\n        @g.addToReset \\table        \\chapter\n        @g.addToReset \\footnote     \\chapter\n\n\n\n    \\chaptername        :-> [ \"Chapter\" ]\n    \\bibname            :-> [ \"Bibliography\" ]\n\n    args = @args = Base.args\n\n    args\n     ..\\part =          \\\n     ..\\chapter =       <[ V s X o? g ]>\n\n    \\part               : (s, toc, ttl) -> [ @g.startsection \\part,          -1, s, toc, ttl ]\n    \\chapter            : (s, toc, ttl) -> [ @g.startsection \\chapter,        0, s, toc, ttl ]\n\n\n    \\thechapter         :-> [ @g.arabic @g.counter \\chapter ]\n    \\thesection         :-> @thechapter! ++ \".\" + @g.arabic @g.counter \\section\n\n    \\thefigure          :-> (if @g.counter(\\chapter) > 0 then @thechapter! ++ \".\" else []) ++ @g.arabic @g.counter \\figure\n    \\thetable           :-> (if @g.counter(\\chapter) > 0 then @thechapter! ++ \".\" else []) ++ @g.arabic @g.counter \\table\n\n\n    # toc\n\n    args.\\tableofcontents = <[ V ]>\n    \\tableofcontents    : -> @chapter(true, undefined, @g.macro(\\contentsname)) ++ [ @g._toc ]\n\n\n    args.\\abstract =    <[ V ]>\n\n    \\abstract           :->\n        # onecolumn, no titlepage\n        @g.setFontSize \"small\"\n\n        # TODO use center env directly instead...\n        @g.enterGroup!\n        @g.setFontWeight(\"bf\")\n        head = @g.create @g.list, @g.macro(\"abstractname\"), \"center\"\n        @g.exitGroup!\n\n        [ head ] ++ @quotation!\n\n    \\endabstract        :!-> @endquotation!\n\n\n    args.\\appendix =    <[ V ]>\n\n    \\appendix           :!->\n        @g.setCounter \\chapter 0\n        @g.setCounter \\section 0\n        @[\\chaptername] = @[\\appendixname]\n        @[\\thechapter] = -> [ @g.Alph @g.counter \\chapter ]\n", "import\n    './report': { Report }\n\n\n# book in LaTeX has no abstract\n\nexport class Book extends Report\n\n    # public static\n    @css = \"css/book.css\"\n\n\n    # CTOR\n    (generator, options) ->\n        super ...\n\n        @[\\@mainmatter] = true\n\n\n    args = @args = Report.args\n\n    args\n     ..\\part =          \\\n     ..\\chapter =       <[ V s X o? g ]>\n\n    \\chapter            : (s, toc, ttl) -> [ @g.startsection \\chapter, 0, (s or not @\"@mainmatter\"), toc, ttl ]\n\n\n    args\n     ..\\frontmatter =   \\\n     ..\\mainmatter =    \\\n     ..\\backmatter =    <[ V ]>\n\n    \\frontmatter        :!-> @[\\@mainmatter] = false\n    \\mainmatter         :!-> @[\\@mainmatter] = true\n    \\backmatter         :!-> @[\\@mainmatter] = false\n", "module.exports = /*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { latex: peg$parselatex },\n        peg$startRuleFunction  = peg$parselatex,\n\n        peg$c0 = function() { error(\"expected \\\\begin{document}\") },\n        peg$c1 = function() { error(\"\\\\end{document} missing\") },\n        peg$c2 = peg$anyExpectation(),\n        peg$c3 = function() { return g; },\n        peg$c4 = function() { g.macro(\"documentclass\", [null, g.documentClass, null]); return true; },\n        peg$c5 = \"document\",\n        peg$c6 = peg$literalExpectation(\"document\", false),\n        peg$c7 = function() { g.startBalanced(); g.enterGroup(); return true; },\n        peg$c8 = function(pars) {\n                g.exitGroup();\n                g.isBalanced() || error(\"groups need to be balanced!\");\n                var l = g.endBalanced();\n                // this error should be impossible, it's just to be safe\n                l == 1 && g.isBalanced() || error(\"grammar error: \" + l + \" levels of balancing are remaining, or the last level is unbalanced!\");\n\n                g.createDocument(pars);\n                g.logUndefinedRefs();\n                return g;\n            },\n        peg$c9 = function(bb, n, txt, be) {\n                bb.length > 0 && g.break();\n                var p = g.create(g.par, txt, n ? \"noindent\" : \"\");\n                be && g.break();\n                return p;\n            },\n        peg$c10 = function() { return g.create(g.linebreak); },\n        peg$c11 = function() { return undefined; },\n        peg$c12 = function() { return g.createText(g.sp); },\n        peg$c13 = peg$otherExpectation(\"text\"),\n        peg$c14 = function(p) { return g.createText(p.join(\"\")); },\n        peg$c15 = function(m) { return m; },\n        peg$c16 = function() { g.enterGroup(true); return true; },\n        peg$c17 = function(s) { return g.createText(s); },\n        peg$c18 = function() { if (!g.isBalanced()) { g.exitGroup(); return true; } },\n        peg$c19 = peg$otherExpectation(\"primitive\"),\n        peg$c20 = function() { return g.sp; },\n        peg$c21 = function(b) { return !g.isBalanced() },\n        peg$c22 = function(b) { return b; },\n        peg$c23 = function(e) { return e; },\n        peg$c24 = function(m) { g.break(); return m; },\n        peg$c25 = function(id) { return g.isPreamble(id); },\n        peg$c26 = function(id) { return g.isVmode(id); },\n        peg$c27 = function(id) { return g.isHmode(id); },\n        peg$c28 = function(id) { return g.isHVmode(id); },\n        peg$c29 = function(id) { return g.isHmode(id) || g.isHVmode(id); },\n        peg$c30 = function(name) { if (g.hasMacro(name)) { g.beginArgs(name); return true; } },\n        peg$c31 = function(name) {\n                var args = g.parsedArgs();\n                g.endArgs();\n                return g.createFragment(g.macro(name, args));\n            },\n        peg$c32 = function(m) { error(\"macro only allowed in preamble: \" + m); },\n        peg$c33 = function(m) { error(\"unknown macro: \\\\\" + m); },\n        peg$c34 = peg$otherExpectation(\"identifier\"),\n        peg$c35 = /^[\\-$&_\\/@]/,\n        peg$c36 = peg$classExpectation([\"-\", \"$\", \"&\", \"_\", \"/\", \"@\"], false, false),\n        peg$c37 = /^[=,]/,\n        peg$c38 = peg$classExpectation([\"=\", \",\"], false, false),\n        peg$c39 = peg$otherExpectation(\"key=value\"),\n        peg$c40 = \"=\",\n        peg$c41 = peg$literalExpectation(\"=\", false),\n        peg$c42 = function(k) { error(\"value expected\") },\n        peg$c43 = function(k, v) { return v.trim(); },\n        peg$c44 = function(k, v) { return [k.trim(), v == null ? true : v ]; },\n        peg$c45 = function() { return g.nextArg(\"X\") },\n        peg$c46 = function() { g.preExecMacro(); },\n        peg$c47 = function() { return g.nextArg(\"g\") },\n        peg$c48 = function() { g.argError(\"group argument expected\") },\n        peg$c49 = function(a) { g.addParsedArg(a); },\n        peg$c50 = function() { return g.nextArg(\"hg\") },\n        peg$c51 = function() { return g.nextArg(\"h\") },\n        peg$c52 = function() { g.argError(\"horizontal material expected\") },\n        peg$c53 = function(h) { g.addParsedArg(h); },\n        peg$c54 = function() { return g.nextArg(\"o?\") },\n        peg$c55 = function(o) { g.addParsedArg(o); },\n        peg$c56 = function() { return g.nextArg(\"i\") },\n        peg$c57 = function() { g.argError(\"id group argument expected\") },\n        peg$c58 = function(i) { g.addParsedArg(i); },\n        peg$c59 = function() { return g.nextArg(\"ie\") },\n        peg$c60 = function() { g.argError(\"id or empty group arg expected\") },\n        peg$c61 = function() { return g.nextArg(\"i?\") },\n        peg$c62 = function() { return g.nextArg(\"k\") },\n        peg$c63 = function() { g.argError(\"key group argument expected\") },\n        peg$c64 = function(k) { g.addParsedArg(k); },\n        peg$c65 = function() { return g.nextArg(\"k?\") },\n        peg$c66 = function() { return g.nextArg(\"kv?\") },\n        peg$c67 = function() { return g.nextArg(\"csv\") },\n        peg$c68 = function() { g.argError(\"comma-sep. values group expected\") },\n        peg$c69 = function(v) { g.addParsedArg(v); },\n        peg$c70 = function() { return g.nextArg(\"n\") },\n        peg$c71 = function() { g.argError(\"num group argument expected\") },\n        peg$c72 = function(n) { g.addParsedArg(n); },\n        peg$c73 = function() { return g.nextArg(\"n?\") },\n        peg$c74 = function() { return g.nextArg(\"l\") },\n        peg$c75 = function() { g.argError(\"length group argument expected\") },\n        peg$c76 = function(l) { g.addParsedArg(l); },\n        peg$c77 = function() { return g.nextArg(\"lg?\") },\n        peg$c78 = function() { return g.nextArg(\"l?\") },\n        peg$c79 = function() { return g.nextArg(\"m\") },\n        peg$c80 = function() { g.argError(\"macro group argument expected\") },\n        peg$c81 = function(m) { g.addParsedArg(m); },\n        peg$c82 = function() { return g.nextArg(\"u\") },\n        peg$c83 = function() { g.argError(\"url group argument expected\") },\n        peg$c84 = function(u) { g.addParsedArg(u); },\n        peg$c85 = function() { return g.nextArg(\"c\") },\n        peg$c86 = function() { g.argError(\"color group expected\") },\n        peg$c87 = function(c) { g.addParsedArg(c); },\n        peg$c88 = function() { return g.nextArg(\"c-ml\") },\n        peg$c89 = function() { g.argError(\"color model list expected\") },\n        peg$c90 = function() { return g.nextArg(\"c-ml?\") },\n        peg$c91 = function() { return g.nextArg(\"c-ssp\") },\n        peg$c92 = function() { g.argError(\"color set spec expected\") },\n        peg$c93 = function() { return g.nextArg(\"c-spl\") },\n        peg$c94 = function() { g.argError(\"color spec list expected\") },\n        peg$c95 = function() { return g.nextArg(\"cl\") },\n        peg$c96 = function() { g.argError(\"coordinate/length group expected\") },\n        peg$c97 = function() { return g.nextArg(\"cl?\") },\n        peg$c98 = function() { return g.nextArg(\"v\") },\n        peg$c99 = function() { g.argError(\"coordinate pair expected\") },\n        peg$c100 = function() { return g.nextArg(\"v?\") },\n        peg$c101 = function() { return g.nextArg(\"cols\") },\n        peg$c102 = function() { g.argError(\"column specification missing\") },\n        peg$c103 = function() { return g.nextArg(\"is\") },\n        peg$c104 = function() { return g.nextArg(\"items\") },\n        peg$c105 = function() { return g.nextArg(\"enumitems\") },\n        peg$c106 = function() { return g.selectArgsBranch(\"[\") },\n        peg$c107 = function() { return g.selectArgsBranch(\"{\") /* requirement in pegjs: balance } */ },\n        peg$c108 = function() { return g.nextArg(\"s\") },\n        peg$c109 = \"*\",\n        peg$c110 = peg$literalExpectation(\"*\", false),\n        peg$c111 = function(s) { g.addParsedArg(!!s); return !!s; },\n        peg$c112 = function(id) { return id; },\n        peg$c113 = function(k) { return k; },\n        peg$c114 = \",\",\n        peg$c115 = peg$literalExpectation(\",\", false),\n        peg$c116 = function() {return null;},\n        peg$c117 = function(kv) {return kv;},\n        peg$c118 = function(kv_list) {\n                                return new Map(kv_list.filter(kv => kv != null));\n                            },\n        peg$c119 = function(v) {return v.trim();},\n        peg$c120 = function(v_list) {\n                                return v_list.filter(v => v != null);\n                            },\n        peg$c121 = \"sp\",\n        peg$c122 = peg$literalExpectation(\"sp\", false),\n        peg$c123 = \"pt\",\n        peg$c124 = peg$literalExpectation(\"pt\", false),\n        peg$c125 = \"px\",\n        peg$c126 = peg$literalExpectation(\"px\", false),\n        peg$c127 = \"dd\",\n        peg$c128 = peg$literalExpectation(\"dd\", false),\n        peg$c129 = \"mm\",\n        peg$c130 = peg$literalExpectation(\"mm\", false),\n        peg$c131 = \"pc\",\n        peg$c132 = peg$literalExpectation(\"pc\", false),\n        peg$c133 = \"cc\",\n        peg$c134 = peg$literalExpectation(\"cc\", false),\n        peg$c135 = \"cm\",\n        peg$c136 = peg$literalExpectation(\"cm\", false),\n        peg$c137 = \"in\",\n        peg$c138 = peg$literalExpectation(\"in\", false),\n        peg$c139 = \"ex\",\n        peg$c140 = peg$literalExpectation(\"ex\", false),\n        peg$c141 = \"em\",\n        peg$c142 = peg$literalExpectation(\"em\", false),\n        peg$c143 = function(u) { return u; },\n        peg$c144 = function(l, u) { return new g.Length(l, u); },\n        peg$c145 = function(l) { return l; },\n        peg$c146 = function(n) { return n; },\n        peg$c147 = function() { return f; },\n        peg$c148 = function(f) { return g.length(\"unitlength\").mul(f) },\n        peg$c149 = function(c) { return c; },\n        peg$c150 = \"(\",\n        peg$c151 = peg$literalExpectation(\"(\", false),\n        peg$c152 = \")\",\n        peg$c153 = peg$literalExpectation(\")\", false),\n        peg$c154 = function(x, y) { return new Vector(x, y); },\n        peg$c155 = \"%\",\n        peg$c156 = peg$literalExpectation(\"%\", false),\n        peg$c157 = function(p) { return p; },\n        peg$c158 = /^[\\-._~:\\/?#[\\]@!$&()*+,;=]/,\n        peg$c159 = peg$classExpectation([\"-\", \".\", \"_\", \"~\", \":\", \"/\", \"?\", \"#\", \"[\", \"]\", \"@\", \"!\", \"$\", \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\"], false, false),\n        peg$c160 = \"'\",\n        peg$c161 = peg$literalExpectation(\"'\", false),\n        peg$c162 = function() { error(\"illegal char in url given\"); },\n        peg$c163 = function(c) {return c;},\n        peg$c164 = function(url) { return url.join(\"\"); },\n        peg$c165 = function() { g.enterGroup(); g.startBalanced(); return true; },\n        peg$c166 = function(s, p) {\n                                g.isBalanced() || error(\"groups inside an argument need to be balanced!\");\n                                g.endBalanced();\n                                g.exitGroup();\n\n                                s != undefined && p.unshift(g.createText(s));\n                                return g.createFragment(p);\n                            },\n        peg$c167 = function(l) { return g.createFragment(l); },\n        peg$c168 = function(s, h) {\n                                g.isBalanced() || error(\"groups inside an argument need to be balanced!\");\n                                g.endBalanced();\n                                g.exitGroup();\n                                return g.createFragment(g.createText(s), h);\n                            },\n        peg$c169 = function(p) { return g.isBalanced(); },\n        peg$c170 = function(p) {\n                                g.isBalanced() || error(\"groups inside an optional argument need to be balanced!\");\n                                g.endBalanced();\n                                g.exitGroup();\n                                return g.createFragment(p);\n                            },\n        peg$c171 = \"value\",\n        peg$c172 = peg$literalExpectation(\"value\", false),\n        peg$c173 = \"real\",\n        peg$c174 = peg$literalExpectation(\"real\", false),\n        peg$c175 = function(f) { return f; },\n        peg$c176 = function(expr) { return expr; },\n        peg$c177 = function(c) { return g.counter(c); },\n        peg$c178 = \"+\",\n        peg$c179 = peg$literalExpectation(\"+\", false),\n        peg$c180 = \"-\",\n        peg$c181 = peg$literalExpectation(\"-\", false),\n        peg$c182 = function(s, n) { return s == \"-\" ? -n : n; },\n        peg$c183 = \"/\",\n        peg$c184 = peg$literalExpectation(\"/\", false),\n        peg$c185 = function(head, tail) {\n                            var result = head, i;\n\n                            for (i = 0; i < tail.length; i++) {\n                                if (tail[i][1] === \"*\") { result = Math.trunc(result * tail[i][3]); }\n                                if (tail[i][1] === \"/\") { result = Math.trunc(result / tail[i][3]); }\n                            }\n\n                            return Math.trunc(result);\n                        },\n        peg$c186 = function(head, tail) {\n                            var result = head, i;\n\n                            for (i = 0; i < tail.length; i++) {\n                                if (tail[i][1] === \"+\") { result += tail[i][3]; }\n                                if (tail[i][1] === \"-\") { result -= tail[i][3]; }\n                            }\n\n                            return result;\n                        },\n        peg$c187 = function(ml) { return ml; },\n        peg$c188 = function(cssp) { return cssp; },\n        peg$c189 = function(csl) { return csl; },\n        peg$c190 = \":\",\n        peg$c191 = peg$literalExpectation(\":\", false),\n        peg$c192 = \";\",\n        peg$c193 = peg$literalExpectation(\";\", false),\n        peg$c194 = \"!\",\n        peg$c195 = peg$literalExpectation(\"!\", false),\n        peg$c196 = \">\",\n        peg$c197 = peg$literalExpectation(\">\", false),\n        peg$c198 = \"wheel\",\n        peg$c199 = peg$literalExpectation(\"wheel\", false),\n        peg$c200 = \"twheel\",\n        peg$c201 = peg$literalExpectation(\"twheel\", false),\n        peg$c202 = function(m) { return m.length % 2 == 0; },\n        peg$c203 = \".\",\n        peg$c204 = peg$literalExpectation(\".\", false),\n        peg$c205 = \"!!\",\n        peg$c206 = peg$literalExpectation(\"!!\", false),\n        peg$c207 = \"[\",\n        peg$c208 = peg$literalExpectation(\"[\", false),\n        peg$c209 = \"]\",\n        peg$c210 = peg$literalExpectation(\"]\", false),\n        peg$c211 = \"rgb\",\n        peg$c212 = peg$literalExpectation(\"rgb\", false),\n        peg$c213 = \"cmyk\",\n        peg$c214 = peg$literalExpectation(\"cmyk\", false),\n        peg$c215 = \"cmy\",\n        peg$c216 = peg$literalExpectation(\"cmy\", false),\n        peg$c217 = \"hsb\",\n        peg$c218 = peg$literalExpectation(\"hsb\", false),\n        peg$c219 = \"gray\",\n        peg$c220 = peg$literalExpectation(\"gray\", false),\n        peg$c221 = \"RBG\",\n        peg$c222 = peg$literalExpectation(\"RBG\", false),\n        peg$c223 = \"HTML\",\n        peg$c224 = peg$literalExpectation(\"HTML\", false),\n        peg$c225 = \"HSB\",\n        peg$c226 = peg$literalExpectation(\"HSB\", false),\n        peg$c227 = \"Gray\",\n        peg$c228 = peg$literalExpectation(\"Gray\", false),\n        peg$c229 = \"Hsb\",\n        peg$c230 = peg$literalExpectation(\"Hsb\", false),\n        peg$c231 = \"tHsb\",\n        peg$c232 = peg$literalExpectation(\"tHsb\", false),\n        peg$c233 = \"wave\",\n        peg$c234 = peg$literalExpectation(\"wave\", false),\n        peg$c235 = \"named\",\n        peg$c236 = peg$literalExpectation(\"named\", false),\n        peg$c237 = \"ps\",\n        peg$c238 = peg$literalExpectation(\"ps\", false),\n        peg$c239 = function(core, cm, cml) {\n                            if (core) core = core[0];\n\n                            var list = [ cm ];\n                            cml.forEach(m => list.push(m[1]));\n\n                            return {\n                                core: core,\n                                models: list\n                            }\n                        },\n        peg$c240 = function(f, fl) { var list = [ f ]; fl.forEach(f => list.push(f[1])); return list; },\n        peg$c241 = function(cs, csl) {\n                            var list = [ cs ];\n                            csl.forEach(s => list.push(s[1]));\n                            return list;\n                        },\n        peg$c242 = function(n, s, sl) {\n                            var list = [ { name: n, speclist: s } ];\n\n                            sl.forEach(s => list.push({\n                                name: s[2],\n                                speclist: s[4]\n                            }));\n\n                            return list;\n                        },\n        peg$c243 = function(s, _c, _s) { return Array.isArray(_c) ? _c.concat(_s) : [_c].concat(_s); },\n        peg$c244 = function(s, c) {\n                return c.reduce(function(a, b) { return a.concat(b); }, s)\n            },\n        peg$c245 = \"l\",\n        peg$c246 = peg$literalExpectation(\"l\", false),\n        peg$c247 = \"c\",\n        peg$c248 = peg$literalExpectation(\"c\", false),\n        peg$c249 = \"r\",\n        peg$c250 = peg$literalExpectation(\"r\", false),\n        peg$c251 = \"p\",\n        peg$c252 = peg$literalExpectation(\"p\", false),\n        peg$c253 = function(c) {\n                return c;\n            },\n        peg$c254 = function(reps, c) {\n                var result = []\n                for (var i = 0; i < reps; i++) {\n                    result = result.concat(c.slice())\n                }\n                return result\n            },\n        peg$c255 = \"|\",\n        peg$c256 = peg$literalExpectation(\"|\", false),\n        peg$c257 = \"@\",\n        peg$c258 = peg$literalExpectation(\"@\", false),\n        peg$c259 = function(a) { return a; },\n        peg$c260 = function(s) {\n                return {\n                    type: \"separator\",\n                    content: s\n                }\n            },\n        peg$c261 = \"vspace\",\n        peg$c262 = peg$literalExpectation(\"vspace\", false),\n        peg$c263 = function(l) { return g.createVSpaceInline(l); },\n        peg$c264 = function(l) { return g.createVSpace(l); },\n        peg$c265 = \"small\",\n        peg$c266 = peg$literalExpectation(\"small\", false),\n        peg$c267 = \"med\",\n        peg$c268 = peg$literalExpectation(\"med\", false),\n        peg$c269 = \"big\",\n        peg$c270 = peg$literalExpectation(\"big\", false),\n        peg$c271 = \"skip\",\n        peg$c272 = peg$literalExpectation(\"skip\", false),\n        peg$c273 = function(s) { return g.createVSpaceSkipInline(s + \"skip\"); },\n        peg$c274 = function(s) { return g.createVSpaceSkip(s + \"skip\"); },\n        peg$c275 = \"verb\",\n        peg$c276 = peg$literalExpectation(\"verb\", false),\n        peg$c277 = function(s, b, t) { return b == t; },\n        peg$c278 = function(s, b, v, e) {\n                                b == e || error(\"\\\\verb is missing its end delimiter: \" + b);\n                                if (s)\n                                    v = v.replace(/ /g, g.visp);\n\n                                return g.create(g.verb, g.createVerbatim(v, true));\n                            },\n        peg$c279 = peg$otherExpectation(\"\\\\begin\"),\n        peg$c280 = function(id) { g.begin(id); return id; },\n        peg$c281 = function(id, s) {\n                return { id, end: id + (s ? \"*\" : \"\") };\n            },\n        peg$c282 = peg$otherExpectation(\"\\\\end\"),\n        peg$c283 = function(id, s) {\n                return id + (s ? \"*\" : \"\");\n            },\n        peg$c284 = function(id) { return g.macro(id.id, g.endArgs()); },\n        peg$c285 = function(id, node, s) {return g.createText(s); },\n        peg$c286 = function(id, node, sb, p, end_id, s) {return g.createText(s); },\n        peg$c287 = function(id, node, sb, p, end_id, se) {\n                var end = g.end(id.end, end_id);\n\n                // if nodes are created by macro, add content as children to the last element\n                // if node is a text node, just add it\n                // potential spaces after \\begin and \\end have to be added explicitely\n\n                var pf = g.createFragment(p);\n                if (pf && node && node.length > 0 && node[node.length - 1].nodeType === 1) {\n                    node[node.length - 1].appendChild(sb);\n                    node[node.length - 1].appendChild(pf);\n                    return g.createFragment(node, end, se);\n                }\n\n                return g.createFragment(node, sb, pf, end, se);     // use pf, fragments in p are now empty!!\n            },\n        peg$c288 = function(id) { g.break(); },\n        peg$c289 = function(id, node, p, end_id) {\n                var end = g.end(id.end, end_id);\n\n                // if nodes are created by macro, add content as children to the last element\n                // if node is a text node, just add it\n\n                var pf = g.createFragment(p);\n                if (pf && node && node.length > 0 && node[node.length - 1].nodeType === 1) {\n                    node[node.length - 1].appendChild(pf);\n                    return g.createFragment(node, end);\n                }\n                return g.createFragment(node, pf, end);\n            },\n        peg$c290 = \"item\",\n        peg$c291 = peg$literalExpectation(\"item\", false),\n        peg$c292 = function() { g.break(); },\n        peg$c293 = function(og) { return og; },\n        peg$c294 = function(label, p) { return p; },\n        peg$c295 = function(label, pars) {\n                    return {\n                        label: label,\n                        text: g.createFragment(pars)\n                    };\n                },\n        peg$c296 = function(label) {\n                    // null is no opt_group (\\item ...)\n                    // undefined is an empty one (\\item[] ...)\n                    if (label === null) {\n                        var itemCounter = \"enum\" + g.roman(g.counter(\"@enumdepth\"));\n                        var itemId = \"item-\" + g.nextId();\n                        g.stepCounter(itemCounter);\n                        g.refCounter(itemCounter, itemId);\n                        return {\n                            id:   itemId,\n                            node: g.macro(\"label\" + itemCounter)\n                        };\n                    }\n                    return {\n                        id: undefined,\n                        node: label\n                    };\n                },\n        peg$c297 = peg$otherExpectation(\"comment environment\"),\n        peg$c298 = \"\\\\begin\",\n        peg$c299 = peg$literalExpectation(\"\\\\begin\", false),\n        peg$c300 = \"{comment}\",\n        peg$c301 = peg$literalExpectation(\"{comment}\", false),\n        peg$c302 = function() { g.break(); return undefined; },\n        peg$c303 = \"\\\\end\",\n        peg$c304 = peg$literalExpectation(\"\\\\end\", false),\n        peg$c305 = function(m) { return g.parseMath(m, false); },\n        peg$c306 = function(m) { return g.parseMath(m, true); },\n        peg$c307 = \"begin\",\n        peg$c308 = peg$literalExpectation(\"begin\", false),\n        peg$c309 = function() {},\n        peg$c310 = \"end\",\n        peg$c311 = peg$literalExpectation(\"end\", false),\n        peg$c312 = \"par\",\n        peg$c313 = peg$literalExpectation(\"par\", false),\n        peg$c314 = \"noindent\",\n        peg$c315 = peg$literalExpectation(\"noindent\", false),\n        peg$c316 = \"plus\",\n        peg$c317 = peg$literalExpectation(\"plus\", false),\n        peg$c318 = \"minus\",\n        peg$c319 = peg$literalExpectation(\"minus\", false),\n        peg$c320 = \"endinput\",\n        peg$c321 = peg$literalExpectation(\"endinput\", false),\n        peg$c322 = \"\\\\\",\n        peg$c323 = peg$literalExpectation(\"\\\\\", false),\n        peg$c324 = \"{\",\n        peg$c325 = peg$literalExpectation(\"{\", false),\n        peg$c326 = \"}\",\n        peg$c327 = peg$literalExpectation(\"}\", false),\n        peg$c328 = peg$otherExpectation(\"math\"),\n        peg$c329 = \"$\",\n        peg$c330 = peg$literalExpectation(\"$\", false),\n        peg$c331 = \"&\",\n        peg$c332 = peg$literalExpectation(\"&\", false),\n        peg$c333 = peg$otherExpectation(\"parameter\"),\n        peg$c334 = \"#\",\n        peg$c335 = peg$literalExpectation(\"#\", false),\n        peg$c336 = \"^\",\n        peg$c337 = peg$literalExpectation(\"^\", false),\n        peg$c338 = \"_\",\n        peg$c339 = peg$literalExpectation(\"_\", false),\n        peg$c340 = \"\\0\",\n        peg$c341 = peg$literalExpectation(\"\\0\", false),\n        peg$c342 = peg$otherExpectation(\"EOF\"),\n        peg$c343 = peg$otherExpectation(\"newline\"),\n        peg$c344 = \"\\n\",\n        peg$c345 = peg$literalExpectation(\"\\n\", false),\n        peg$c346 = \"\\r\\n\",\n        peg$c347 = peg$literalExpectation(\"\\r\\n\", false),\n        peg$c348 = \"\\r\",\n        peg$c349 = peg$literalExpectation(\"\\r\", false),\n        peg$c350 = \"\\u2028\",\n        peg$c351 = peg$literalExpectation(\"\\u2028\", false),\n        peg$c352 = \"\\u2029\",\n        peg$c353 = peg$literalExpectation(\"\\u2029\", false),\n        peg$c354 = peg$otherExpectation(\"whitespace\"),\n        peg$c355 = /^[ \\t]/,\n        peg$c356 = peg$classExpectation([\" \", \"\\t\"], false, false),\n        peg$c357 = peg$otherExpectation(\"comment\"),\n        peg$c358 = peg$otherExpectation(\"spaces\"),\n        peg$c359 = function() { return g.brsp; },\n        peg$c360 = peg$otherExpectation(\"control space\"),\n        peg$c361 = peg$otherExpectation(\"non-brk space\"),\n        peg$c362 = \"~\",\n        peg$c363 = peg$literalExpectation(\"~\", false),\n        peg$c364 = function() { return g.nbsp; },\n        peg$c365 = peg$otherExpectation(\"paragraph break\"),\n        peg$c366 = function() { return true; },\n        peg$c367 = peg$otherExpectation(\"linebreak\"),\n        peg$c368 = function(l) {return l;},\n        peg$c369 = function(l) {\n                                          if (l) return g.createBreakSpace(l);\n                                          else   return g.create(g.linebreak);\n                                      },\n        peg$c370 = \"put\",\n        peg$c371 = peg$literalExpectation(\"put\", false),\n        peg$c372 = \"newline\",\n        peg$c373 = peg$literalExpectation(\"newline\", false),\n        peg$c374 = peg$otherExpectation(\"letter\"),\n        peg$c375 = /^[a-z]/i,\n        peg$c376 = peg$classExpectation([[\"a\", \"z\"]], false, true),\n        peg$c377 = function(c) { return g.character(c); },\n        peg$c378 = peg$otherExpectation(\"digit\"),\n        peg$c379 = /^[0-9]/,\n        peg$c380 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c381 = function(n) { return g.character(n); },\n        peg$c382 = peg$otherExpectation(\"punctuation\"),\n        peg$c383 = /^[.,;:*\\/()!?=+<>]/,\n        peg$c384 = peg$classExpectation([\".\", \",\", \";\", \":\", \"*\", \"/\", \"(\", \")\", \"!\", \"?\", \"=\", \"+\", \"<\", \">\"], false, false),\n        peg$c385 = function(p) { return g.character(p); },\n        peg$c386 = peg$otherExpectation(\"quotes\"),\n        peg$c387 = /^[`']/,\n        peg$c388 = peg$classExpectation([\"`\", \"'\"], false, false),\n        peg$c389 = function(q) { return g.textquote(q); },\n        peg$c390 = peg$otherExpectation(\"left bracket\"),\n        peg$c391 = function(b) { return g.character(b); },\n        peg$c392 = peg$otherExpectation(\"right bracket\"),\n        peg$c393 = peg$otherExpectation(\"utf8 char\"),\n        peg$c394 = function(u) { return g.character(u); },\n        peg$c395 = peg$otherExpectation(\"hyphen\"),\n        peg$c396 = function() { return g.hyphen(); },\n        peg$c397 = peg$otherExpectation(\"ligature\"),\n        peg$c398 = \"ffi\",\n        peg$c399 = peg$literalExpectation(\"ffi\", false),\n        peg$c400 = \"ffl\",\n        peg$c401 = peg$literalExpectation(\"ffl\", false),\n        peg$c402 = \"ff\",\n        peg$c403 = peg$literalExpectation(\"ff\", false),\n        peg$c404 = \"fi\",\n        peg$c405 = peg$literalExpectation(\"fi\", false),\n        peg$c406 = \"fl\",\n        peg$c407 = peg$literalExpectation(\"fl\", false),\n        peg$c408 = \"---\",\n        peg$c409 = peg$literalExpectation(\"---\", false),\n        peg$c410 = \"--\",\n        peg$c411 = peg$literalExpectation(\"--\", false),\n        peg$c412 = \"``\",\n        peg$c413 = peg$literalExpectation(\"``\", false),\n        peg$c414 = \"''\",\n        peg$c415 = peg$literalExpectation(\"''\", false),\n        peg$c416 = \"!\\xB4\",\n        peg$c417 = peg$literalExpectation(\"!\\xB4\", false),\n        peg$c418 = \"?\\xB4\",\n        peg$c419 = peg$literalExpectation(\"?\\xB4\", false),\n        peg$c420 = \"<<\",\n        peg$c421 = peg$literalExpectation(\"<<\", false),\n        peg$c422 = \">>\",\n        peg$c423 = peg$literalExpectation(\">>\", false),\n        peg$c424 = function(l) { return g.ligature(l); },\n        peg$c425 = peg$otherExpectation(\"control symbol\"),\n        peg$c426 = /^[$%#&{}_\\-,\\/@]/,\n        peg$c427 = peg$classExpectation([\"$\", \"%\", \"#\", \"&\", \"{\", \"}\", \"_\", \"-\", \",\", \"/\", \"@\"], false, false),\n        peg$c428 = function(c) { return g.controlSymbol(c); },\n        peg$c429 = peg$otherExpectation(\"symbol macro\"),\n        peg$c430 = function(name) { return g.hasSymbol(name); },\n        peg$c431 = function(name) {\n                return g.symbol(name);\n            },\n        peg$c432 = peg$otherExpectation(\"diacritic macro\"),\n        peg$c433 = function(d) { return g.hasDiacritic(d); },\n        peg$c434 = function(d, c, s) { return g.diacritic(d, c) + (s ? s:\"\"); },\n        peg$c435 = function(d, c) { return g.diacritic(d, c); },\n        peg$c436 = function(d, c) {\n                return c;\n            },\n        peg$c437 = \"symbol\",\n        peg$c438 = peg$literalExpectation(\"symbol\", false),\n        peg$c439 = function(i) { return String.fromCharCode(i); },\n        peg$c440 = \"char\",\n        peg$c441 = peg$literalExpectation(\"char\", false),\n        peg$c442 = \"^^^^\",\n        peg$c443 = peg$literalExpectation(\"^^^^\", false),\n        peg$c444 = \"^^\",\n        peg$c445 = peg$literalExpectation(\"^^\", false),\n        peg$c446 = function(c) { c = c.charCodeAt(0);\n                                                                          return String.fromCharCode(c < 64 ? c + 64 : c - 64); },\n        peg$c447 = function(i) { return parseInt(i, 10); },\n        peg$c448 = function(o) { return parseInt(o, 8); },\n        peg$c449 = \"\\\"\",\n        peg$c450 = peg$literalExpectation(\"\\\"\", false),\n        peg$c451 = function(h) { return h; },\n        peg$c452 = peg$otherExpectation(\"8bit hex value\"),\n        peg$c453 = function(h) { return parseInt(h, 16); },\n        peg$c454 = peg$otherExpectation(\"16bit hex value\"),\n        peg$c455 = peg$otherExpectation(\"integer value\"),\n        peg$c456 = peg$otherExpectation(\"octal value\"),\n        peg$c457 = /^[0-7]/,\n        peg$c458 = peg$classExpectation([[\"0\", \"7\"]], false, false),\n        peg$c459 = peg$otherExpectation(\"hex digit\"),\n        peg$c460 = /^[a-f0-9]/i,\n        peg$c461 = peg$classExpectation([[\"a\", \"f\"], [\"0\", \"9\"]], false, true),\n        peg$c462 = peg$otherExpectation(\"float value\"),\n        peg$c463 = /^[+\\-]/,\n        peg$c464 = peg$classExpectation([\"+\", \"-\"], false, false),\n        peg$c465 = function(f) { return parseFloat(f); },\n        peg$c466 = \"the\",\n        peg$c467 = peg$literalExpectation(\"the\", false),\n        peg$c468 = function(c) { return g.hasCounter(c);},\n        peg$c469 = function(c) { return g.createText(\"\" + g.counter(c)); },\n        peg$c470 = function(id) { return g.theLength(id); },\n        peg$c471 = function(t) { return t; },\n        peg$c472 = \"showthe\",\n        peg$c473 = peg$literalExpectation(\"showthe\", false),\n        peg$c474 = function(c) { console.log(g.counter(c)); },\n        peg$c475 = function(l) { console.log(g.length(l)); },\n        peg$c476 = \"message\",\n        peg$c477 = peg$literalExpectation(\"message\", false),\n        peg$c478 = function(m) { console.log(m.textContent); },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parselatex() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parsewith_preamble();\n      peg$silentFails--;\n      if (s2 !== peg$FAILED) {\n        peg$currPos = s1;\n        s1 = void 0;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseescape();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseis_hvmode();\n            peg$silentFails--;\n            if (s7 !== peg$FAILED) {\n              peg$currPos = s6;\n              s6 = void 0;\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseis_preamble();\n              peg$silentFails--;\n              if (s7 !== peg$FAILED) {\n                peg$currPos = s6;\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemacro();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_all_space();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseescape();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseis_hvmode();\n              peg$silentFails--;\n              if (s7 !== peg$FAILED) {\n                peg$currPos = s6;\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$parseis_preamble();\n                peg$silentFails--;\n                if (s7 !== peg$FAILED) {\n                  peg$currPos = s6;\n                  s6 = void 0;\n                } else {\n                  s6 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsemacro();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_all_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_doc();\n            if (s4 === peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s4 = peg$c0();\n              if (s4) {\n                s4 = void 0;\n              } else {\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsedocument();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_doc();\n                if (s6 === peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s6 = peg$c1();\n                  if (s6) {\n                    s6 = void 0;\n                  } else {\n                    s6 = peg$FAILED;\n                  }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  if (input.length > peg$currPos) {\n                    s8 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                  }\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (input.length > peg$currPos) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseEOF();\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c3();\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parsewith_preamble();\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n          s1 = void 0;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s2 = peg$c4();\n          if (s2) {\n            s2 = void 0;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsedocument();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseEOF();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c3();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsewith_preamble() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parseis_preamble();\n          peg$silentFails--;\n          if (s4 !== peg$FAILED) {\n            peg$currPos = s3;\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_doc() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c5) {\n                s5 = peg$c5;\n                peg$currPos += 8;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  s1 = [s1, s2, s3, s4, s5, s6];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_doc() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseend();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c5) {\n                s5 = peg$c5;\n                peg$currPos += 8;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  s1 = [s1, s2, s3, s4, s5, s6];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsedocument() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s1 = peg$c7();\n      if (s1) {\n        s1 = void 0;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_all_space();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseparagraph();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseparagraph();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_all_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c8(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseparagraph() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$parsevmode_macro();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$parseescape();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenoindent();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsebreak();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          s4 = peg$parseescape();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsenoindent();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebreak();\n            if (s4 !== peg$FAILED) {\n              s3 = [s3, s4];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseskip_space();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$parseescape();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsenoindent();\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = null;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parsetext();\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parsetext();\n                }\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsebreak();\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c9(s1, s3, s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseparagraph_with_linebreak() {\n      var s0, s1;\n\n      s0 = peg$parsetext();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsevmode_macro();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsebreak();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseline() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parselinebreak();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsebreak();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetext();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsetext() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseligature();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseprimitive();\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsebreak();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsecomment();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s2;\n              s3 = peg$c11();\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseligature();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseprimitive();\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = peg$currPos;\n              peg$silentFails++;\n              s4 = peg$parsebreak();\n              peg$silentFails--;\n              if (s4 === peg$FAILED) {\n                s3 = void 0;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsecomment();\n                if (s4 !== peg$FAILED) {\n                  peg$savedPos = s2;\n                  s3 = peg$c11();\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parselinebreak();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$currPos;\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseunskip_macro();\n          peg$silentFails--;\n          if (s3 !== peg$FAILED) {\n            peg$currPos = s2;\n            s2 = void 0;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseskip_space();\n            if (s3 !== peg$FAILED) {\n              s2 = [s2, s3];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = null;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsehmode_macro();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c15(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsemath();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsebegin_group();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s2 = peg$c16();\n                if (s2) {\n                  s2 = void 0;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parsespace();\n                  if (s3 === peg$FAILED) {\n                    s3 = null;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseend_group();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s2 = peg$c18();\n                  if (s2) {\n                    s2 = void 0;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parsespace();\n                    if (s3 === peg$FAILED) {\n                      s3 = null;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c17(s3);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseprimitive() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$parsechar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsespace();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseunskip_macro();\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = void 0;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c20();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsehyphen();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsedigit();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsepunctuation();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsequotes();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseleft_br();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    s1 = peg$parseright_br();\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = peg$currPos;\n                      s2 = peg$c21(s1);\n                      if (s2) {\n                        s2 = void 0;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c22(s1);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parsenbsp();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parsectrl_space();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsediacritic();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parsectrl_sym();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parsesymbol();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parsecharsym();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseutf8_char();\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehv_macro() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parseis_hvmode();\n        peg$silentFails--;\n        if (s4 !== peg$FAILED) {\n          peg$currPos = s3;\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemacro();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$parselogging();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsehmode_macro() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$parsehv_macro();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parseis_hmode();\n          peg$silentFails--;\n          if (s4 !== peg$FAILED) {\n            peg$currPos = s3;\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsemacro();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s2;\n              s3 = peg$c15(s4);\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parseis_hmode_env();\n            peg$silentFails--;\n            if (s4 !== peg$FAILED) {\n              peg$currPos = s3;\n              s3 = void 0;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseh_environment();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c23(s4);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$parsenoindent();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parsesmbskip_hmode();\n                if (s2 === peg$FAILED) {\n                  s2 = peg$parsevspace_hmode();\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$parsethe();\n                    if (s2 === peg$FAILED) {\n                      s2 = peg$parseverb();\n                      if (s2 === peg$FAILED) {\n                        s2 = peg$currPos;\n                        s3 = peg$currPos;\n                        peg$silentFails++;\n                        s4 = peg$parseis_preamble();\n                        peg$silentFails--;\n                        if (s4 !== peg$FAILED) {\n                          peg$currPos = s3;\n                          s3 = void 0;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s4 = peg$parseonly_preamble();\n                          if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s2;\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 === peg$FAILED) {\n                          s2 = peg$currPos;\n                          s3 = peg$currPos;\n                          peg$silentFails++;\n                          s4 = peg$parsebegin();\n                          peg$silentFails--;\n                          if (s4 === peg$FAILED) {\n                            s3 = void 0;\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                          if (s3 !== peg$FAILED) {\n                            s4 = peg$currPos;\n                            peg$silentFails++;\n                            s5 = peg$parseend();\n                            peg$silentFails--;\n                            if (s5 === peg$FAILED) {\n                              s4 = void 0;\n                            } else {\n                              peg$currPos = s4;\n                              s4 = peg$FAILED;\n                            }\n                            if (s4 !== peg$FAILED) {\n                              s5 = peg$currPos;\n                              peg$silentFails++;\n                              s6 = peg$parseis_vmode();\n                              peg$silentFails--;\n                              if (s6 === peg$FAILED) {\n                                s5 = void 0;\n                              } else {\n                                peg$currPos = s5;\n                                s5 = peg$FAILED;\n                              }\n                              if (s5 !== peg$FAILED) {\n                                s6 = peg$parseunknown_macro();\n                                if (s6 !== peg$FAILED) {\n                                  s3 = [s3, s4, s5, s6];\n                                  s2 = s3;\n                                } else {\n                                  peg$currPos = s2;\n                                  s2 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s2;\n                                s2 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s2;\n                              s2 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsevmode_macro() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsehv_macro();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseskip_all_space();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseescape();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parseis_vmode();\n            peg$silentFails--;\n            if (s5 !== peg$FAILED) {\n              peg$currPos = s4;\n              s4 = void 0;\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemacro();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c24(s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parseis_vmode_env();\n              peg$silentFails--;\n              if (s5 !== peg$FAILED) {\n                peg$currPos = s4;\n                s4 = void 0;\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseenvironment();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c23(s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 === peg$FAILED) {\n                s3 = peg$parsevspace_vmode();\n                if (s3 === peg$FAILED) {\n                  s3 = peg$parsesmbskip_vmode();\n                }\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c15(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_preamble() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c25(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_vmode() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c26(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_hmode() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c27(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_hvmode() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c28(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_vmode_env() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseend();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseidentifier();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s4 = peg$c26(s3);\n            if (s4) {\n              s4 = void 0;\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_hmode_env() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseidentifier();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s4 = peg$c29(s3);\n            if (s4) {\n              s4 = void 0;\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemacro() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c30(s1);\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsemacro_args();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c31(s1);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseonly_preamble() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseunknown_macro() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c33(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsedigit();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsesp();\n          if (s2 === peg$FAILED) {\n            if (peg$c35.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = peg$currPos;\n              peg$silentFails++;\n              if (peg$c37.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n              }\n              peg$silentFails--;\n              if (s4 === peg$FAILED) {\n                s3 = void 0;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parseutf8_char();\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsedigit();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parsesp();\n              if (s2 === peg$FAILED) {\n                if (peg$c35.test(input.charAt(peg$currPos))) {\n                  s2 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                }\n                if (s2 === peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  peg$silentFails++;\n                  if (peg$c37.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                  }\n                  peg$silentFails--;\n                  if (s4 === peg$FAILED) {\n                    s3 = void 0;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parseutf8_char();\n                    if (s4 !== peg$FAILED) {\n                      s3 = [s3, s4];\n                      s2 = s3;\n                    } else {\n                      peg$currPos = s2;\n                      s2 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey_val() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsekey();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseskip_space();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c40;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsekey();\n              if (s6 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s6 = peg$c42(s1);\n                if (s6) {\n                  s6 = void 0;\n                } else {\n                  s6 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c43(s1, s6);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemacro_args() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = [];\n      s1 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s2 = peg$c45();\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s1;\n        s2 = peg$c46();\n      }\n      s1 = s2;\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsenextArgStar();\n        if (s1 === peg$FAILED) {\n          s1 = peg$currPos;\n          peg$savedPos = peg$currPos;\n          s2 = peg$c47();\n          if (s2) {\n            s2 = void 0;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsearg_group();\n            if (s3 === peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s3 = peg$c48();\n              if (s3) {\n                s3 = void 0;\n              } else {\n                s3 = peg$FAILED;\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c49(s3);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s2 = peg$c50();\n            if (s2) {\n              s2 = void 0;\n            } else {\n              s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsearg_hgroup();\n              if (s3 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s3 = peg$c48();\n                if (s3) {\n                  s3 = void 0;\n                } else {\n                  s3 = peg$FAILED;\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c49(s3);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$currPos;\n              peg$savedPos = peg$currPos;\n              s2 = peg$c51();\n              if (s2) {\n                s2 = void 0;\n              } else {\n                s2 = peg$FAILED;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsehorizontal();\n                if (s3 === peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s3 = peg$c52();\n                  if (s3) {\n                    s3 = void 0;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s1;\n                  s2 = peg$c53(s3);\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = peg$currPos;\n                peg$savedPos = peg$currPos;\n                s2 = peg$c54();\n                if (s2) {\n                  s2 = void 0;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parseopt_group();\n                  if (s3 === peg$FAILED) {\n                    s3 = null;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s1;\n                    s2 = peg$c55(s3);\n                    s1 = s2;\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = peg$currPos;\n                  peg$savedPos = peg$currPos;\n                  s2 = peg$c56();\n                  if (s2) {\n                    s2 = void 0;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parseid_group();\n                    if (s3 === peg$FAILED) {\n                      peg$savedPos = peg$currPos;\n                      s3 = peg$c57();\n                      if (s3) {\n                        s3 = void 0;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s1;\n                      s2 = peg$c58(s3);\n                      s1 = s2;\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = peg$currPos;\n                    peg$savedPos = peg$currPos;\n                    s2 = peg$c59();\n                    if (s2) {\n                      s2 = void 0;\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parseide_group();\n                      if (s3 === peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s3 = peg$c60();\n                        if (s3) {\n                          s3 = void 0;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        peg$savedPos = s1;\n                        s2 = peg$c58(s3);\n                        s1 = s2;\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = peg$currPos;\n                      peg$savedPos = peg$currPos;\n                      s2 = peg$c61();\n                      if (s2) {\n                        s2 = void 0;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 !== peg$FAILED) {\n                        s3 = peg$parseid_optgroup();\n                        if (s3 === peg$FAILED) {\n                          s3 = null;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          peg$savedPos = s1;\n                          s2 = peg$c58(s3);\n                          s1 = s2;\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = peg$currPos;\n                        peg$savedPos = peg$currPos;\n                        s2 = peg$c62();\n                        if (s2) {\n                          s2 = void 0;\n                        } else {\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          s3 = peg$parsekey_group();\n                          if (s3 === peg$FAILED) {\n                            peg$savedPos = peg$currPos;\n                            s3 = peg$c63();\n                            if (s3) {\n                              s3 = void 0;\n                            } else {\n                              s3 = peg$FAILED;\n                            }\n                          }\n                          if (s3 !== peg$FAILED) {\n                            peg$savedPos = s1;\n                            s2 = peg$c64(s3);\n                            s1 = s2;\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = peg$currPos;\n                          peg$savedPos = peg$currPos;\n                          s2 = peg$c65();\n                          if (s2) {\n                            s2 = void 0;\n                          } else {\n                            s2 = peg$FAILED;\n                          }\n                          if (s2 !== peg$FAILED) {\n                            s3 = peg$parsekey_optgroup();\n                            if (s3 === peg$FAILED) {\n                              s3 = null;\n                            }\n                            if (s3 !== peg$FAILED) {\n                              peg$savedPos = s1;\n                              s2 = peg$c64(s3);\n                              s1 = s2;\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = peg$currPos;\n                            peg$savedPos = peg$currPos;\n                            s2 = peg$c66();\n                            if (s2) {\n                              s2 = void 0;\n                            } else {\n                              s2 = peg$FAILED;\n                            }\n                            if (s2 !== peg$FAILED) {\n                              s3 = peg$parsekeyval_optgroup();\n                              if (s3 === peg$FAILED) {\n                                s3 = null;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                peg$savedPos = s1;\n                                s2 = peg$c64(s3);\n                                s1 = s2;\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = peg$currPos;\n                              peg$savedPos = peg$currPos;\n                              s2 = peg$c67();\n                              if (s2) {\n                                s2 = void 0;\n                              } else {\n                                s2 = peg$FAILED;\n                              }\n                              if (s2 !== peg$FAILED) {\n                                s3 = peg$parsecsv_group();\n                                if (s3 === peg$FAILED) {\n                                  peg$savedPos = peg$currPos;\n                                  s3 = peg$c68();\n                                  if (s3) {\n                                    s3 = void 0;\n                                  } else {\n                                    s3 = peg$FAILED;\n                                  }\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  peg$savedPos = s1;\n                                  s2 = peg$c69(s3);\n                                  s1 = s2;\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = peg$currPos;\n                                peg$savedPos = peg$currPos;\n                                s2 = peg$c70();\n                                if (s2) {\n                                  s2 = void 0;\n                                } else {\n                                  s2 = peg$FAILED;\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  s3 = peg$parseexpr_group();\n                                  if (s3 === peg$FAILED) {\n                                    peg$savedPos = peg$currPos;\n                                    s3 = peg$c71();\n                                    if (s3) {\n                                      s3 = void 0;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                    }\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    peg$savedPos = s1;\n                                    s2 = peg$c72(s3);\n                                    s1 = s2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = peg$currPos;\n                                  peg$savedPos = peg$currPos;\n                                  s2 = peg$c73();\n                                  if (s2) {\n                                    s2 = void 0;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    s3 = peg$parseexpr_optgroup();\n                                    if (s3 === peg$FAILED) {\n                                      s3 = null;\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      peg$savedPos = s1;\n                                      s2 = peg$c72(s3);\n                                      s1 = s2;\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = peg$currPos;\n                                    peg$savedPos = peg$currPos;\n                                    s2 = peg$c74();\n                                    if (s2) {\n                                      s2 = void 0;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      s3 = peg$parselength_group();\n                                      if (s3 === peg$FAILED) {\n                                        peg$savedPos = peg$currPos;\n                                        s3 = peg$c75();\n                                        if (s3) {\n                                          s3 = void 0;\n                                        } else {\n                                          s3 = peg$FAILED;\n                                        }\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        peg$savedPos = s1;\n                                        s2 = peg$c76(s3);\n                                        s1 = s2;\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = peg$currPos;\n                                      peg$savedPos = peg$currPos;\n                                      s2 = peg$c77();\n                                      if (s2) {\n                                        s2 = void 0;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        s3 = peg$parselength_group();\n                                        if (s3 === peg$FAILED) {\n                                          s3 = null;\n                                        }\n                                        if (s3 !== peg$FAILED) {\n                                          peg$savedPos = s1;\n                                          s2 = peg$c76(s3);\n                                          s1 = s2;\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = peg$currPos;\n                                        peg$savedPos = peg$currPos;\n                                        s2 = peg$c78();\n                                        if (s2) {\n                                          s2 = void 0;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          s3 = peg$parselength_optgroup();\n                                          if (s3 === peg$FAILED) {\n                                            s3 = null;\n                                          }\n                                          if (s3 !== peg$FAILED) {\n                                            peg$savedPos = s1;\n                                            s2 = peg$c76(s3);\n                                            s1 = s2;\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = peg$currPos;\n                                          peg$savedPos = peg$currPos;\n                                          s2 = peg$c79();\n                                          if (s2) {\n                                            s2 = void 0;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            s3 = peg$parsemacro_group();\n                                            if (s3 === peg$FAILED) {\n                                              peg$savedPos = peg$currPos;\n                                              s3 = peg$c80();\n                                              if (s3) {\n                                                s3 = void 0;\n                                              } else {\n                                                s3 = peg$FAILED;\n                                              }\n                                            }\n                                            if (s3 !== peg$FAILED) {\n                                              peg$savedPos = s1;\n                                              s2 = peg$c81(s3);\n                                              s1 = s2;\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = peg$currPos;\n                                            peg$savedPos = peg$currPos;\n                                            s2 = peg$c82();\n                                            if (s2) {\n                                              s2 = void 0;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              s3 = peg$parseurl_group();\n                                              if (s3 === peg$FAILED) {\n                                                peg$savedPos = peg$currPos;\n                                                s3 = peg$c83();\n                                                if (s3) {\n                                                  s3 = void 0;\n                                                } else {\n                                                  s3 = peg$FAILED;\n                                                }\n                                              }\n                                              if (s3 !== peg$FAILED) {\n                                                peg$savedPos = s1;\n                                                s2 = peg$c84(s3);\n                                                s1 = s2;\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = peg$currPos;\n                                              peg$savedPos = peg$currPos;\n                                              s2 = peg$c85();\n                                              if (s2) {\n                                                s2 = void 0;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                s3 = peg$parsecolor_group();\n                                                if (s3 === peg$FAILED) {\n                                                  peg$savedPos = peg$currPos;\n                                                  s3 = peg$c86();\n                                                  if (s3) {\n                                                    s3 = void 0;\n                                                  } else {\n                                                    s3 = peg$FAILED;\n                                                  }\n                                                }\n                                                if (s3 !== peg$FAILED) {\n                                                  peg$savedPos = s1;\n                                                  s2 = peg$c87(s3);\n                                                  s1 = s2;\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = peg$currPos;\n                                                peg$savedPos = peg$currPos;\n                                                s2 = peg$c88();\n                                                if (s2) {\n                                                  s2 = void 0;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  s3 = peg$parsecolor_modellist_group();\n                                                  if (s3 === peg$FAILED) {\n                                                    peg$savedPos = peg$currPos;\n                                                    s3 = peg$c89();\n                                                    if (s3) {\n                                                      s3 = void 0;\n                                                    } else {\n                                                      s3 = peg$FAILED;\n                                                    }\n                                                  }\n                                                  if (s3 !== peg$FAILED) {\n                                                    peg$savedPos = s1;\n                                                    s2 = peg$c87(s3);\n                                                    s1 = s2;\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = peg$currPos;\n                                                  peg$savedPos = peg$currPos;\n                                                  s2 = peg$c90();\n                                                  if (s2) {\n                                                    s2 = void 0;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    s3 = peg$parsecolor_modellist_optgroup();\n                                                    if (s3 === peg$FAILED) {\n                                                      s3 = null;\n                                                    }\n                                                    if (s3 !== peg$FAILED) {\n                                                      peg$savedPos = s1;\n                                                      s2 = peg$c87(s3);\n                                                      s1 = s2;\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = peg$currPos;\n                                                    peg$savedPos = peg$currPos;\n                                                    s2 = peg$c91();\n                                                    if (s2) {\n                                                      s2 = void 0;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      s3 = peg$parsecolor_setspec_group();\n                                                      if (s3 === peg$FAILED) {\n                                                        peg$savedPos = peg$currPos;\n                                                        s3 = peg$c92();\n                                                        if (s3) {\n                                                          s3 = void 0;\n                                                        } else {\n                                                          s3 = peg$FAILED;\n                                                        }\n                                                      }\n                                                      if (s3 !== peg$FAILED) {\n                                                        peg$savedPos = s1;\n                                                        s2 = peg$c87(s3);\n                                                        s1 = s2;\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                    if (s1 === peg$FAILED) {\n                                                      s1 = peg$currPos;\n                                                      peg$savedPos = peg$currPos;\n                                                      s2 = peg$c93();\n                                                      if (s2) {\n                                                        s2 = void 0;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                      }\n                                                      if (s2 !== peg$FAILED) {\n                                                        s3 = peg$parsecolor_speclist_group();\n                                                        if (s3 === peg$FAILED) {\n                                                          peg$savedPos = peg$currPos;\n                                                          s3 = peg$c94();\n                                                          if (s3) {\n                                                            s3 = void 0;\n                                                          } else {\n                                                            s3 = peg$FAILED;\n                                                          }\n                                                        }\n                                                        if (s3 !== peg$FAILED) {\n                                                          peg$savedPos = s1;\n                                                          s2 = peg$c87(s3);\n                                                          s1 = s2;\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                      if (s1 === peg$FAILED) {\n                                                        s1 = peg$currPos;\n                                                        peg$savedPos = peg$currPos;\n                                                        s2 = peg$c95();\n                                                        if (s2) {\n                                                          s2 = void 0;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                        }\n                                                        if (s2 !== peg$FAILED) {\n                                                          s3 = peg$parsecoord_group();\n                                                          if (s3 === peg$FAILED) {\n                                                            peg$savedPos = peg$currPos;\n                                                            s3 = peg$c96();\n                                                            if (s3) {\n                                                              s3 = void 0;\n                                                            } else {\n                                                              s3 = peg$FAILED;\n                                                            }\n                                                          }\n                                                          if (s3 !== peg$FAILED) {\n                                                            peg$savedPos = s1;\n                                                            s2 = peg$c87(s3);\n                                                            s1 = s2;\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                        if (s1 === peg$FAILED) {\n                                                          s1 = peg$currPos;\n                                                          peg$savedPos = peg$currPos;\n                                                          s2 = peg$c97();\n                                                          if (s2) {\n                                                            s2 = void 0;\n                                                          } else {\n                                                            s2 = peg$FAILED;\n                                                          }\n                                                          if (s2 !== peg$FAILED) {\n                                                            s3 = peg$parsecoord_optgroup();\n                                                            if (s3 === peg$FAILED) {\n                                                              s3 = null;\n                                                            }\n                                                            if (s3 !== peg$FAILED) {\n                                                              peg$savedPos = s1;\n                                                              s2 = peg$c87(s3);\n                                                              s1 = s2;\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                          if (s1 === peg$FAILED) {\n                                                            s1 = peg$currPos;\n                                                            peg$savedPos = peg$currPos;\n                                                            s2 = peg$c98();\n                                                            if (s2) {\n                                                              s2 = void 0;\n                                                            } else {\n                                                              s2 = peg$FAILED;\n                                                            }\n                                                            if (s2 !== peg$FAILED) {\n                                                              s3 = peg$parsevector();\n                                                              if (s3 === peg$FAILED) {\n                                                                peg$savedPos = peg$currPos;\n                                                                s3 = peg$c99();\n                                                                if (s3) {\n                                                                  s3 = void 0;\n                                                                } else {\n                                                                  s3 = peg$FAILED;\n                                                                }\n                                                              }\n                                                              if (s3 !== peg$FAILED) {\n                                                                peg$savedPos = s1;\n                                                                s2 = peg$c69(s3);\n                                                                s1 = s2;\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                            if (s1 === peg$FAILED) {\n                                                              s1 = peg$currPos;\n                                                              peg$savedPos = peg$currPos;\n                                                              s2 = peg$c100();\n                                                              if (s2) {\n                                                                s2 = void 0;\n                                                              } else {\n                                                                s2 = peg$FAILED;\n                                                              }\n                                                              if (s2 !== peg$FAILED) {\n                                                                s3 = peg$parsevector();\n                                                                if (s3 === peg$FAILED) {\n                                                                  s3 = null;\n                                                                }\n                                                                if (s3 !== peg$FAILED) {\n                                                                  peg$savedPos = s1;\n                                                                  s2 = peg$c69(s3);\n                                                                  s1 = s2;\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                              if (s1 === peg$FAILED) {\n                                                                s1 = peg$currPos;\n                                                                peg$savedPos = peg$currPos;\n                                                                s2 = peg$c101();\n                                                                if (s2) {\n                                                                  s2 = void 0;\n                                                                } else {\n                                                                  s2 = peg$FAILED;\n                                                                }\n                                                                if (s2 !== peg$FAILED) {\n                                                                  s3 = peg$parsecolumns();\n                                                                  if (s3 === peg$FAILED) {\n                                                                    peg$savedPos = peg$currPos;\n                                                                    s3 = peg$c102();\n                                                                    if (s3) {\n                                                                      s3 = void 0;\n                                                                    } else {\n                                                                      s3 = peg$FAILED;\n                                                                    }\n                                                                  }\n                                                                  if (s3 !== peg$FAILED) {\n                                                                    peg$savedPos = s1;\n                                                                    s2 = peg$c87(s3);\n                                                                    s1 = s2;\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                                if (s1 === peg$FAILED) {\n                                                                  s1 = peg$currPos;\n                                                                  peg$savedPos = peg$currPos;\n                                                                  s2 = peg$c103();\n                                                                  if (s2) {\n                                                                    s2 = void 0;\n                                                                  } else {\n                                                                    s2 = peg$FAILED;\n                                                                  }\n                                                                  if (s2 !== peg$FAILED) {\n                                                                    s3 = peg$parseskip_space();\n                                                                    if (s3 !== peg$FAILED) {\n                                                                      s2 = [s2, s3];\n                                                                      s1 = s2;\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                  if (s1 === peg$FAILED) {\n                                                                    s1 = peg$currPos;\n                                                                    peg$savedPos = peg$currPos;\n                                                                    s2 = peg$c104();\n                                                                    if (s2) {\n                                                                      s2 = void 0;\n                                                                    } else {\n                                                                      s2 = peg$FAILED;\n                                                                    }\n                                                                    if (s2 !== peg$FAILED) {\n                                                                      s3 = peg$parseitems();\n                                                                      if (s3 !== peg$FAILED) {\n                                                                        peg$savedPos = s1;\n                                                                        s2 = peg$c58(s3);\n                                                                        s1 = s2;\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                    if (s1 === peg$FAILED) {\n                                                                      s1 = peg$currPos;\n                                                                      peg$savedPos = peg$currPos;\n                                                                      s2 = peg$c105();\n                                                                      if (s2) {\n                                                                        s2 = void 0;\n                                                                      } else {\n                                                                        s2 = peg$FAILED;\n                                                                      }\n                                                                      if (s2 !== peg$FAILED) {\n                                                                        s3 = peg$parseenumitems();\n                                                                        if (s3 !== peg$FAILED) {\n                                                                          peg$savedPos = s1;\n                                                                          s2 = peg$c58(s3);\n                                                                          s1 = s2;\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                      if (s1 === peg$FAILED) {\n                                                                        s1 = peg$currPos;\n                                                                        s2 = peg$currPos;\n                                                                        peg$silentFails++;\n                                                                        s3 = peg$currPos;\n                                                                        s4 = peg$parseskip_space();\n                                                                        if (s4 !== peg$FAILED) {\n                                                                          s5 = peg$parsebegin_optgroup();\n                                                                          if (s5 !== peg$FAILED) {\n                                                                            s4 = [s4, s5];\n                                                                            s3 = s4;\n                                                                          } else {\n                                                                            peg$currPos = s3;\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                        } else {\n                                                                          peg$currPos = s3;\n                                                                          s3 = peg$FAILED;\n                                                                        }\n                                                                        peg$silentFails--;\n                                                                        if (s3 !== peg$FAILED) {\n                                                                          peg$currPos = s2;\n                                                                          s2 = void 0;\n                                                                        } else {\n                                                                          s2 = peg$FAILED;\n                                                                        }\n                                                                        if (s2 !== peg$FAILED) {\n                                                                          peg$savedPos = peg$currPos;\n                                                                          s3 = peg$c106();\n                                                                          if (s3) {\n                                                                            s3 = void 0;\n                                                                          } else {\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            s2 = [s2, s3];\n                                                                            s1 = s2;\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                        if (s1 === peg$FAILED) {\n                                                                          s1 = peg$currPos;\n                                                                          s2 = peg$currPos;\n                                                                          peg$silentFails++;\n                                                                          s3 = peg$currPos;\n                                                                          s4 = peg$parseskip_space();\n                                                                          if (s4 !== peg$FAILED) {\n                                                                            s5 = peg$parsebegin_group();\n                                                                            if (s5 !== peg$FAILED) {\n                                                                              s4 = [s4, s5];\n                                                                              s3 = s4;\n                                                                            } else {\n                                                                              peg$currPos = s3;\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s3;\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                          peg$silentFails--;\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            peg$currPos = s2;\n                                                                            s2 = void 0;\n                                                                          } else {\n                                                                            s2 = peg$FAILED;\n                                                                          }\n                                                                          if (s2 !== peg$FAILED) {\n                                                                            peg$savedPos = peg$currPos;\n                                                                            s3 = peg$c107();\n                                                                            if (s3) {\n                                                                              s3 = void 0;\n                                                                            } else {\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                            if (s3 !== peg$FAILED) {\n                                                                              s2 = [s2, s3];\n                                                                              s1 = s2;\n                                                                            } else {\n                                                                              peg$currPos = s1;\n                                                                              s1 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s2 = peg$c45();\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s1;\n          s2 = peg$c46();\n        }\n        s1 = s2;\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsenextArgStar();\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s2 = peg$c47();\n            if (s2) {\n              s2 = void 0;\n            } else {\n              s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsearg_group();\n              if (s3 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s3 = peg$c48();\n                if (s3) {\n                  s3 = void 0;\n                } else {\n                  s3 = peg$FAILED;\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c49(s3);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$currPos;\n              peg$savedPos = peg$currPos;\n              s2 = peg$c50();\n              if (s2) {\n                s2 = void 0;\n              } else {\n                s2 = peg$FAILED;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsearg_hgroup();\n                if (s3 === peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s3 = peg$c48();\n                  if (s3) {\n                    s3 = void 0;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s1;\n                  s2 = peg$c49(s3);\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = peg$currPos;\n                peg$savedPos = peg$currPos;\n                s2 = peg$c51();\n                if (s2) {\n                  s2 = void 0;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parsehorizontal();\n                  if (s3 === peg$FAILED) {\n                    peg$savedPos = peg$currPos;\n                    s3 = peg$c52();\n                    if (s3) {\n                      s3 = void 0;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s1;\n                    s2 = peg$c53(s3);\n                    s1 = s2;\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = peg$currPos;\n                  peg$savedPos = peg$currPos;\n                  s2 = peg$c54();\n                  if (s2) {\n                    s2 = void 0;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parseopt_group();\n                    if (s3 === peg$FAILED) {\n                      s3 = null;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s1;\n                      s2 = peg$c55(s3);\n                      s1 = s2;\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = peg$currPos;\n                    peg$savedPos = peg$currPos;\n                    s2 = peg$c56();\n                    if (s2) {\n                      s2 = void 0;\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parseid_group();\n                      if (s3 === peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s3 = peg$c57();\n                        if (s3) {\n                          s3 = void 0;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        peg$savedPos = s1;\n                        s2 = peg$c58(s3);\n                        s1 = s2;\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = peg$currPos;\n                      peg$savedPos = peg$currPos;\n                      s2 = peg$c59();\n                      if (s2) {\n                        s2 = void 0;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 !== peg$FAILED) {\n                        s3 = peg$parseide_group();\n                        if (s3 === peg$FAILED) {\n                          peg$savedPos = peg$currPos;\n                          s3 = peg$c60();\n                          if (s3) {\n                            s3 = void 0;\n                          } else {\n                            s3 = peg$FAILED;\n                          }\n                        }\n                        if (s3 !== peg$FAILED) {\n                          peg$savedPos = s1;\n                          s2 = peg$c58(s3);\n                          s1 = s2;\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = peg$currPos;\n                        peg$savedPos = peg$currPos;\n                        s2 = peg$c61();\n                        if (s2) {\n                          s2 = void 0;\n                        } else {\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          s3 = peg$parseid_optgroup();\n                          if (s3 === peg$FAILED) {\n                            s3 = null;\n                          }\n                          if (s3 !== peg$FAILED) {\n                            peg$savedPos = s1;\n                            s2 = peg$c58(s3);\n                            s1 = s2;\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = peg$currPos;\n                          peg$savedPos = peg$currPos;\n                          s2 = peg$c62();\n                          if (s2) {\n                            s2 = void 0;\n                          } else {\n                            s2 = peg$FAILED;\n                          }\n                          if (s2 !== peg$FAILED) {\n                            s3 = peg$parsekey_group();\n                            if (s3 === peg$FAILED) {\n                              peg$savedPos = peg$currPos;\n                              s3 = peg$c63();\n                              if (s3) {\n                                s3 = void 0;\n                              } else {\n                                s3 = peg$FAILED;\n                              }\n                            }\n                            if (s3 !== peg$FAILED) {\n                              peg$savedPos = s1;\n                              s2 = peg$c64(s3);\n                              s1 = s2;\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = peg$currPos;\n                            peg$savedPos = peg$currPos;\n                            s2 = peg$c65();\n                            if (s2) {\n                              s2 = void 0;\n                            } else {\n                              s2 = peg$FAILED;\n                            }\n                            if (s2 !== peg$FAILED) {\n                              s3 = peg$parsekey_optgroup();\n                              if (s3 === peg$FAILED) {\n                                s3 = null;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                peg$savedPos = s1;\n                                s2 = peg$c64(s3);\n                                s1 = s2;\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = peg$currPos;\n                              peg$savedPos = peg$currPos;\n                              s2 = peg$c66();\n                              if (s2) {\n                                s2 = void 0;\n                              } else {\n                                s2 = peg$FAILED;\n                              }\n                              if (s2 !== peg$FAILED) {\n                                s3 = peg$parsekeyval_optgroup();\n                                if (s3 === peg$FAILED) {\n                                  s3 = null;\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  peg$savedPos = s1;\n                                  s2 = peg$c64(s3);\n                                  s1 = s2;\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = peg$currPos;\n                                peg$savedPos = peg$currPos;\n                                s2 = peg$c67();\n                                if (s2) {\n                                  s2 = void 0;\n                                } else {\n                                  s2 = peg$FAILED;\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  s3 = peg$parsecsv_group();\n                                  if (s3 === peg$FAILED) {\n                                    peg$savedPos = peg$currPos;\n                                    s3 = peg$c68();\n                                    if (s3) {\n                                      s3 = void 0;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                    }\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    peg$savedPos = s1;\n                                    s2 = peg$c69(s3);\n                                    s1 = s2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = peg$currPos;\n                                  peg$savedPos = peg$currPos;\n                                  s2 = peg$c70();\n                                  if (s2) {\n                                    s2 = void 0;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    s3 = peg$parseexpr_group();\n                                    if (s3 === peg$FAILED) {\n                                      peg$savedPos = peg$currPos;\n                                      s3 = peg$c71();\n                                      if (s3) {\n                                        s3 = void 0;\n                                      } else {\n                                        s3 = peg$FAILED;\n                                      }\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      peg$savedPos = s1;\n                                      s2 = peg$c72(s3);\n                                      s1 = s2;\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = peg$currPos;\n                                    peg$savedPos = peg$currPos;\n                                    s2 = peg$c73();\n                                    if (s2) {\n                                      s2 = void 0;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      s3 = peg$parseexpr_optgroup();\n                                      if (s3 === peg$FAILED) {\n                                        s3 = null;\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        peg$savedPos = s1;\n                                        s2 = peg$c72(s3);\n                                        s1 = s2;\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = peg$currPos;\n                                      peg$savedPos = peg$currPos;\n                                      s2 = peg$c74();\n                                      if (s2) {\n                                        s2 = void 0;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        s3 = peg$parselength_group();\n                                        if (s3 === peg$FAILED) {\n                                          peg$savedPos = peg$currPos;\n                                          s3 = peg$c75();\n                                          if (s3) {\n                                            s3 = void 0;\n                                          } else {\n                                            s3 = peg$FAILED;\n                                          }\n                                        }\n                                        if (s3 !== peg$FAILED) {\n                                          peg$savedPos = s1;\n                                          s2 = peg$c76(s3);\n                                          s1 = s2;\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = peg$currPos;\n                                        peg$savedPos = peg$currPos;\n                                        s2 = peg$c77();\n                                        if (s2) {\n                                          s2 = void 0;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          s3 = peg$parselength_group();\n                                          if (s3 === peg$FAILED) {\n                                            s3 = null;\n                                          }\n                                          if (s3 !== peg$FAILED) {\n                                            peg$savedPos = s1;\n                                            s2 = peg$c76(s3);\n                                            s1 = s2;\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = peg$currPos;\n                                          peg$savedPos = peg$currPos;\n                                          s2 = peg$c78();\n                                          if (s2) {\n                                            s2 = void 0;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            s3 = peg$parselength_optgroup();\n                                            if (s3 === peg$FAILED) {\n                                              s3 = null;\n                                            }\n                                            if (s3 !== peg$FAILED) {\n                                              peg$savedPos = s1;\n                                              s2 = peg$c76(s3);\n                                              s1 = s2;\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = peg$currPos;\n                                            peg$savedPos = peg$currPos;\n                                            s2 = peg$c79();\n                                            if (s2) {\n                                              s2 = void 0;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              s3 = peg$parsemacro_group();\n                                              if (s3 === peg$FAILED) {\n                                                peg$savedPos = peg$currPos;\n                                                s3 = peg$c80();\n                                                if (s3) {\n                                                  s3 = void 0;\n                                                } else {\n                                                  s3 = peg$FAILED;\n                                                }\n                                              }\n                                              if (s3 !== peg$FAILED) {\n                                                peg$savedPos = s1;\n                                                s2 = peg$c81(s3);\n                                                s1 = s2;\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = peg$currPos;\n                                              peg$savedPos = peg$currPos;\n                                              s2 = peg$c82();\n                                              if (s2) {\n                                                s2 = void 0;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                s3 = peg$parseurl_group();\n                                                if (s3 === peg$FAILED) {\n                                                  peg$savedPos = peg$currPos;\n                                                  s3 = peg$c83();\n                                                  if (s3) {\n                                                    s3 = void 0;\n                                                  } else {\n                                                    s3 = peg$FAILED;\n                                                  }\n                                                }\n                                                if (s3 !== peg$FAILED) {\n                                                  peg$savedPos = s1;\n                                                  s2 = peg$c84(s3);\n                                                  s1 = s2;\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = peg$currPos;\n                                                peg$savedPos = peg$currPos;\n                                                s2 = peg$c85();\n                                                if (s2) {\n                                                  s2 = void 0;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  s3 = peg$parsecolor_group();\n                                                  if (s3 === peg$FAILED) {\n                                                    peg$savedPos = peg$currPos;\n                                                    s3 = peg$c86();\n                                                    if (s3) {\n                                                      s3 = void 0;\n                                                    } else {\n                                                      s3 = peg$FAILED;\n                                                    }\n                                                  }\n                                                  if (s3 !== peg$FAILED) {\n                                                    peg$savedPos = s1;\n                                                    s2 = peg$c87(s3);\n                                                    s1 = s2;\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = peg$currPos;\n                                                  peg$savedPos = peg$currPos;\n                                                  s2 = peg$c88();\n                                                  if (s2) {\n                                                    s2 = void 0;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    s3 = peg$parsecolor_modellist_group();\n                                                    if (s3 === peg$FAILED) {\n                                                      peg$savedPos = peg$currPos;\n                                                      s3 = peg$c89();\n                                                      if (s3) {\n                                                        s3 = void 0;\n                                                      } else {\n                                                        s3 = peg$FAILED;\n                                                      }\n                                                    }\n                                                    if (s3 !== peg$FAILED) {\n                                                      peg$savedPos = s1;\n                                                      s2 = peg$c87(s3);\n                                                      s1 = s2;\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = peg$currPos;\n                                                    peg$savedPos = peg$currPos;\n                                                    s2 = peg$c90();\n                                                    if (s2) {\n                                                      s2 = void 0;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      s3 = peg$parsecolor_modellist_optgroup();\n                                                      if (s3 === peg$FAILED) {\n                                                        s3 = null;\n                                                      }\n                                                      if (s3 !== peg$FAILED) {\n                                                        peg$savedPos = s1;\n                                                        s2 = peg$c87(s3);\n                                                        s1 = s2;\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                    if (s1 === peg$FAILED) {\n                                                      s1 = peg$currPos;\n                                                      peg$savedPos = peg$currPos;\n                                                      s2 = peg$c91();\n                                                      if (s2) {\n                                                        s2 = void 0;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                      }\n                                                      if (s2 !== peg$FAILED) {\n                                                        s3 = peg$parsecolor_setspec_group();\n                                                        if (s3 === peg$FAILED) {\n                                                          peg$savedPos = peg$currPos;\n                                                          s3 = peg$c92();\n                                                          if (s3) {\n                                                            s3 = void 0;\n                                                          } else {\n                                                            s3 = peg$FAILED;\n                                                          }\n                                                        }\n                                                        if (s3 !== peg$FAILED) {\n                                                          peg$savedPos = s1;\n                                                          s2 = peg$c87(s3);\n                                                          s1 = s2;\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                      if (s1 === peg$FAILED) {\n                                                        s1 = peg$currPos;\n                                                        peg$savedPos = peg$currPos;\n                                                        s2 = peg$c93();\n                                                        if (s2) {\n                                                          s2 = void 0;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                        }\n                                                        if (s2 !== peg$FAILED) {\n                                                          s3 = peg$parsecolor_speclist_group();\n                                                          if (s3 === peg$FAILED) {\n                                                            peg$savedPos = peg$currPos;\n                                                            s3 = peg$c94();\n                                                            if (s3) {\n                                                              s3 = void 0;\n                                                            } else {\n                                                              s3 = peg$FAILED;\n                                                            }\n                                                          }\n                                                          if (s3 !== peg$FAILED) {\n                                                            peg$savedPos = s1;\n                                                            s2 = peg$c87(s3);\n                                                            s1 = s2;\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                        if (s1 === peg$FAILED) {\n                                                          s1 = peg$currPos;\n                                                          peg$savedPos = peg$currPos;\n                                                          s2 = peg$c95();\n                                                          if (s2) {\n                                                            s2 = void 0;\n                                                          } else {\n                                                            s2 = peg$FAILED;\n                                                          }\n                                                          if (s2 !== peg$FAILED) {\n                                                            s3 = peg$parsecoord_group();\n                                                            if (s3 === peg$FAILED) {\n                                                              peg$savedPos = peg$currPos;\n                                                              s3 = peg$c96();\n                                                              if (s3) {\n                                                                s3 = void 0;\n                                                              } else {\n                                                                s3 = peg$FAILED;\n                                                              }\n                                                            }\n                                                            if (s3 !== peg$FAILED) {\n                                                              peg$savedPos = s1;\n                                                              s2 = peg$c87(s3);\n                                                              s1 = s2;\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                          if (s1 === peg$FAILED) {\n                                                            s1 = peg$currPos;\n                                                            peg$savedPos = peg$currPos;\n                                                            s2 = peg$c97();\n                                                            if (s2) {\n                                                              s2 = void 0;\n                                                            } else {\n                                                              s2 = peg$FAILED;\n                                                            }\n                                                            if (s2 !== peg$FAILED) {\n                                                              s3 = peg$parsecoord_optgroup();\n                                                              if (s3 === peg$FAILED) {\n                                                                s3 = null;\n                                                              }\n                                                              if (s3 !== peg$FAILED) {\n                                                                peg$savedPos = s1;\n                                                                s2 = peg$c87(s3);\n                                                                s1 = s2;\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                            if (s1 === peg$FAILED) {\n                                                              s1 = peg$currPos;\n                                                              peg$savedPos = peg$currPos;\n                                                              s2 = peg$c98();\n                                                              if (s2) {\n                                                                s2 = void 0;\n                                                              } else {\n                                                                s2 = peg$FAILED;\n                                                              }\n                                                              if (s2 !== peg$FAILED) {\n                                                                s3 = peg$parsevector();\n                                                                if (s3 === peg$FAILED) {\n                                                                  peg$savedPos = peg$currPos;\n                                                                  s3 = peg$c99();\n                                                                  if (s3) {\n                                                                    s3 = void 0;\n                                                                  } else {\n                                                                    s3 = peg$FAILED;\n                                                                  }\n                                                                }\n                                                                if (s3 !== peg$FAILED) {\n                                                                  peg$savedPos = s1;\n                                                                  s2 = peg$c69(s3);\n                                                                  s1 = s2;\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                              if (s1 === peg$FAILED) {\n                                                                s1 = peg$currPos;\n                                                                peg$savedPos = peg$currPos;\n                                                                s2 = peg$c100();\n                                                                if (s2) {\n                                                                  s2 = void 0;\n                                                                } else {\n                                                                  s2 = peg$FAILED;\n                                                                }\n                                                                if (s2 !== peg$FAILED) {\n                                                                  s3 = peg$parsevector();\n                                                                  if (s3 === peg$FAILED) {\n                                                                    s3 = null;\n                                                                  }\n                                                                  if (s3 !== peg$FAILED) {\n                                                                    peg$savedPos = s1;\n                                                                    s2 = peg$c69(s3);\n                                                                    s1 = s2;\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                                if (s1 === peg$FAILED) {\n                                                                  s1 = peg$currPos;\n                                                                  peg$savedPos = peg$currPos;\n                                                                  s2 = peg$c101();\n                                                                  if (s2) {\n                                                                    s2 = void 0;\n                                                                  } else {\n                                                                    s2 = peg$FAILED;\n                                                                  }\n                                                                  if (s2 !== peg$FAILED) {\n                                                                    s3 = peg$parsecolumns();\n                                                                    if (s3 === peg$FAILED) {\n                                                                      peg$savedPos = peg$currPos;\n                                                                      s3 = peg$c102();\n                                                                      if (s3) {\n                                                                        s3 = void 0;\n                                                                      } else {\n                                                                        s3 = peg$FAILED;\n                                                                      }\n                                                                    }\n                                                                    if (s3 !== peg$FAILED) {\n                                                                      peg$savedPos = s1;\n                                                                      s2 = peg$c87(s3);\n                                                                      s1 = s2;\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                  if (s1 === peg$FAILED) {\n                                                                    s1 = peg$currPos;\n                                                                    peg$savedPos = peg$currPos;\n                                                                    s2 = peg$c103();\n                                                                    if (s2) {\n                                                                      s2 = void 0;\n                                                                    } else {\n                                                                      s2 = peg$FAILED;\n                                                                    }\n                                                                    if (s2 !== peg$FAILED) {\n                                                                      s3 = peg$parseskip_space();\n                                                                      if (s3 !== peg$FAILED) {\n                                                                        s2 = [s2, s3];\n                                                                        s1 = s2;\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                    if (s1 === peg$FAILED) {\n                                                                      s1 = peg$currPos;\n                                                                      peg$savedPos = peg$currPos;\n                                                                      s2 = peg$c104();\n                                                                      if (s2) {\n                                                                        s2 = void 0;\n                                                                      } else {\n                                                                        s2 = peg$FAILED;\n                                                                      }\n                                                                      if (s2 !== peg$FAILED) {\n                                                                        s3 = peg$parseitems();\n                                                                        if (s3 !== peg$FAILED) {\n                                                                          peg$savedPos = s1;\n                                                                          s2 = peg$c58(s3);\n                                                                          s1 = s2;\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                      if (s1 === peg$FAILED) {\n                                                                        s1 = peg$currPos;\n                                                                        peg$savedPos = peg$currPos;\n                                                                        s2 = peg$c105();\n                                                                        if (s2) {\n                                                                          s2 = void 0;\n                                                                        } else {\n                                                                          s2 = peg$FAILED;\n                                                                        }\n                                                                        if (s2 !== peg$FAILED) {\n                                                                          s3 = peg$parseenumitems();\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            peg$savedPos = s1;\n                                                                            s2 = peg$c58(s3);\n                                                                            s1 = s2;\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                        if (s1 === peg$FAILED) {\n                                                                          s1 = peg$currPos;\n                                                                          s2 = peg$currPos;\n                                                                          peg$silentFails++;\n                                                                          s3 = peg$currPos;\n                                                                          s4 = peg$parseskip_space();\n                                                                          if (s4 !== peg$FAILED) {\n                                                                            s5 = peg$parsebegin_optgroup();\n                                                                            if (s5 !== peg$FAILED) {\n                                                                              s4 = [s4, s5];\n                                                                              s3 = s4;\n                                                                            } else {\n                                                                              peg$currPos = s3;\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s3;\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                          peg$silentFails--;\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            peg$currPos = s2;\n                                                                            s2 = void 0;\n                                                                          } else {\n                                                                            s2 = peg$FAILED;\n                                                                          }\n                                                                          if (s2 !== peg$FAILED) {\n                                                                            peg$savedPos = peg$currPos;\n                                                                            s3 = peg$c106();\n                                                                            if (s3) {\n                                                                              s3 = void 0;\n                                                                            } else {\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                            if (s3 !== peg$FAILED) {\n                                                                              s2 = [s2, s3];\n                                                                              s1 = s2;\n                                                                            } else {\n                                                                              peg$currPos = s1;\n                                                                              s1 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                          if (s1 === peg$FAILED) {\n                                                                            s1 = peg$currPos;\n                                                                            s2 = peg$currPos;\n                                                                            peg$silentFails++;\n                                                                            s3 = peg$currPos;\n                                                                            s4 = peg$parseskip_space();\n                                                                            if (s4 !== peg$FAILED) {\n                                                                              s5 = peg$parsebegin_group();\n                                                                              if (s5 !== peg$FAILED) {\n                                                                                s4 = [s4, s5];\n                                                                                s3 = s4;\n                                                                              } else {\n                                                                                peg$currPos = s3;\n                                                                                s3 = peg$FAILED;\n                                                                              }\n                                                                            } else {\n                                                                              peg$currPos = s3;\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                            peg$silentFails--;\n                                                                            if (s3 !== peg$FAILED) {\n                                                                              peg$currPos = s2;\n                                                                              s2 = void 0;\n                                                                            } else {\n                                                                              s2 = peg$FAILED;\n                                                                            }\n                                                                            if (s2 !== peg$FAILED) {\n                                                                              peg$savedPos = peg$currPos;\n                                                                              s3 = peg$c107();\n                                                                              if (s3) {\n                                                                                s3 = void 0;\n                                                                              } else {\n                                                                                s3 = peg$FAILED;\n                                                                              }\n                                                                              if (s3 !== peg$FAILED) {\n                                                                                s2 = [s2, s3];\n                                                                                s1 = s2;\n                                                                              } else {\n                                                                                peg$currPos = s1;\n                                                                                s1 = peg$FAILED;\n                                                                              }\n                                                                            } else {\n                                                                              peg$currPos = s1;\n                                                                              s1 = peg$FAILED;\n                                                                            }\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenextArgStar() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s1 = peg$c108();\n      if (s1) {\n        s1 = void 0;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c109;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c110); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c111(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseid_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseidentifier();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseide_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseidentifier();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemacro_group() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseescape();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseidentifier();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseend_group();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c112(s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseid_optgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseidentifier();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_optgroup();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsekey();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c113(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey_optgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsekey();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_optgroup();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c113(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekeyval_optgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parseskip_space();\n          if (s5 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s6 = peg$c114;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c116();\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsekey_val();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c117(s6);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c114;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c115); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c116();\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsekey_val();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c117(s6);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_optgroup();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c118(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecsv_group() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parseskip_space();\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s7 = peg$c114;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c115); }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c116();\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parseskip_space();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsekey();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c119(s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parseskip_space();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c114;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c116();\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsekey();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c119(s7);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c120(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength_unit() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c121) {\n          s2 = peg$c121;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c122); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c123) {\n            s2 = peg$c123;\n            peg$currPos += 2;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c124); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c125) {\n              s2 = peg$c125;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c126); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c127) {\n                s2 = peg$c127;\n                peg$currPos += 2;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c128); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c129) {\n                  s2 = peg$c129;\n                  peg$currPos += 2;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c130); }\n                }\n                if (s2 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c131) {\n                    s2 = peg$c131;\n                    peg$currPos += 2;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c132); }\n                  }\n                  if (s2 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c133) {\n                      s2 = peg$c133;\n                      peg$currPos += 2;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n                    }\n                    if (s2 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c135) {\n                        s2 = peg$c135;\n                        peg$currPos += 2;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c136); }\n                      }\n                      if (s2 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 2) === peg$c137) {\n                          s2 = peg$c137;\n                          peg$currPos += 2;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c138); }\n                        }\n                        if (s2 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c139) {\n                            s2 = peg$c139;\n                            peg$currPos += 2;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c140); }\n                          }\n                          if (s2 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 2) === peg$c141) {\n                              s2 = peg$c141;\n                              peg$currPos += 2;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c142); }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsechar();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c143(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefloat();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parselength_unit();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseplus();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefloat();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parselength_unit();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseminus();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsefloat();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parselength_unit();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c144(s1, s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength_group() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parselength();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_group();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c145(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength_optgroup() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parselength();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_optgroup();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c145(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseexpr_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenum_expr();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c146(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseexpr_optgroup() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenum_expr();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_optgroup();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c146(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefloat_group() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseend_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c147();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecoordinate() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parselength();\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parsefloat();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c148(s3);\n          }\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c149(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevector() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c150;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c151); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecoordinate();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c114;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsecoordinate();\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c154(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecoord_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecoordinate();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c149(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecoord_optgroup() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecoordinate();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_optgroup();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c149(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseurl_pct_encoded() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s4 = peg$c155;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c156); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehex();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsehex();\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c157(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseurl_char() {\n      var s0;\n\n      s0 = peg$parsechar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedigit();\n        if (s0 === peg$FAILED) {\n          if (peg$c158.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c159); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s0 = peg$c160;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c161); }\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseurl_pct_encoded();\n              if (s0 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s0 = peg$c162();\n                if (s0) {\n                  s0 = void 0;\n                } else {\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseurl_group() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$currPos;\n            s8 = peg$parseskip_space();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseend_group();\n              if (s9 !== peg$FAILED) {\n                s8 = [s8, s9];\n                s7 = s8;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseurl_char();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c163(s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$currPos;\n                s8 = peg$parseskip_space();\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseend_group();\n                  if (s9 !== peg$FAILED) {\n                    s8 = [s8, s9];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                peg$silentFails--;\n                if (s7 === peg$FAILED) {\n                  s6 = void 0;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseurl_char();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c163(s7);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c164(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsearg_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c165();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsespace();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseparagraph_with_linebreak();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseparagraph_with_linebreak();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c166(s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsehorizontal() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseline();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseline();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c167(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsearg_hgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c165();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsespace();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsehorizontal();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c168(s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseopt_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c165();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseparagraph_with_linebreak();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseparagraph_with_linebreak();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_optgroup();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s6 = peg$c169(s4);\n                if (s6) {\n                  s6 = void 0;\n                } else {\n                  s6 = peg$FAILED;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c170(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c171) {\n          s2 = peg$c171;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c172); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseid_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c149(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsereal() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c173) {\n          s2 = peg$c173;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c174); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsefloat();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseend_group();\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c175(s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_value() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c150;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c151); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenum_expr();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c152;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c153); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c176(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseinteger();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsereal();\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsevalue();\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c177(s1);\n            }\n            s0 = s1;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_factor() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c178;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c179); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c180;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c181); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenum_factor();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c182(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenum_value();\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_term() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenum_factor();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_space();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c109;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c110); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c183;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c184); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseskip_space();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenum_factor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_space();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s5 = peg$c109;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c110); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s5 = peg$c183;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c184); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseskip_space();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsenum_factor();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c185(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_expr() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenum_term();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parseskip_space();\n          if (s5 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s6 = peg$c178;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c179); }\n            }\n            if (s6 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s6 = peg$c180;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c181); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseskip_space();\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsenum_term();\n                if (s8 !== peg$FAILED) {\n                  s5 = [s5, s6, s7, s8];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 43) {\n                s6 = peg$c178;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c179); }\n              }\n              if (s6 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 45) {\n                  s6 = peg$c180;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c181); }\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseskip_space();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsenum_term();\n                  if (s8 !== peg$FAILED) {\n                    s5 = [s5, s6, s7, s8];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c186(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c149(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_modellist_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemodel_list();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c187(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_modellist_optgroup() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemodel_list();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_optgroup();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c187(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_setspec_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor_set_spec();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c188(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_speclist_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor_spec_list();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c189(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsec_ext_expr();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsec_expr();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsec_name();\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsefunc_expr();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefunc_expr();\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_ext_expr() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecore_model();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c114;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseint();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c190;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c191); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsec_expr();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c114;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c115); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsefloat();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s9 = peg$c192;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c193); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parsec_expr();\n                    if (s10 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 44) {\n                        s11 = peg$c114;\n                        peg$currPos++;\n                      } else {\n                        s11 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parsefloat();\n                        if (s12 !== peg$FAILED) {\n                          s9 = [s9, s10, s11, s12];\n                          s8 = s9;\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 59) {\n                      s9 = peg$c192;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c193); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsec_expr();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s11 = peg$c114;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsefloat();\n                          if (s12 !== peg$FAILED) {\n                            s9 = [s9, s10, s11, s12];\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s1 = [s1, s2, s3, s4, s5, s6, s7];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_expr() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsec_prefix();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsec_name();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsec_mix_expr();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsec_postfix();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_mix_expr() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c194;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c195); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsefloat();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 33) {\n            s5 = peg$c194;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c195); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsec_name();\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 33) {\n                s7 = peg$c194;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c195); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsefloat();\n                if (s8 !== peg$FAILED) {\n                  s5 = [s5, s6, s7, s8];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s5 = peg$c194;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c195); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsec_name();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 33) {\n                  s7 = peg$c194;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c195); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsefloat();\n                  if (s8 !== peg$FAILED) {\n                    s5 = [s5, s6, s7, s8];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s5 = peg$c194;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c195); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsec_name();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefunc_expr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefn();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s4 = peg$c114;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsefloat();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c114;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c115); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefloat();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefn() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s1 = peg$c196;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c197); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c198) {\n          s2 = peg$c198;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c199); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c200) {\n            s2 = peg$c200;\n            peg$currPos += 6;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c201); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_prefix() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c180;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c181); }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c180;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c181); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c202(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsec_name() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsedigit();\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsedigit();\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c203;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c204); }\n        }\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_postfix() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c205) {\n        s1 = peg$c205;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c206); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c178;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c179); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s3 = peg$c178;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c179); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s3 = peg$c207;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c208); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseint();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c209;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c210); }\n              }\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_model() {\n      var s0;\n\n      s0 = peg$parsecore_model();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseint_model();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedec_model();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsepseudo_model();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecore_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 3) === peg$c211) {\n        s0 = peg$c211;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c212); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c213) {\n          s0 = peg$c213;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c214); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c215) {\n            s0 = peg$c215;\n            peg$currPos += 3;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c216); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c217) {\n              s0 = peg$c217;\n              peg$currPos += 3;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c218); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c219) {\n                s0 = peg$c219;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c220); }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseint_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 3) === peg$c221) {\n        s0 = peg$c221;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c222); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c223) {\n          s0 = peg$c223;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c224); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c225) {\n            s0 = peg$c225;\n            peg$currPos += 3;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c226); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c227) {\n              s0 = peg$c227;\n              peg$currPos += 4;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c228); }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedec_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 3) === peg$c229) {\n        s0 = peg$c229;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c230); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c231) {\n          s0 = peg$c231;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c232); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c233) {\n            s0 = peg$c233;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c234); }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepseudo_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c235) {\n        s0 = peg$c235;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c236); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_type() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c235) {\n        s0 = peg$c235;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c236); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c237) {\n          s0 = peg$c237;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c238); }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemodel_list() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsecore_model();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c190;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c191); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolor_model();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c183;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c184); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsecolor_model();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c183;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c184); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecolor_model();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c239(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_spec() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefloat();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsesp();\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c114;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c115); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsefloat();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsesp();\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c114;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefloat();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c240(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsec_name();\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_spec_list() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecolor_spec();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s4 = peg$c183;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c184); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsecolor_spec();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s4 = peg$c183;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c184); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsecolor_spec();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c241(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_set_spec() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      s0 = peg$currPos;\n      s1 = peg$parsec_name();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c114;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor_spec_list();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 59) {\n              s6 = peg$c192;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c193); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseskip_space();\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsec_name();\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s9 = peg$c114;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parsecolor_spec_list();\n                    if (s10 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9, s10];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s6 = peg$c192;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c193); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseskip_space();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsec_name();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c114;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsecolor_spec_list();\n                      if (s10 !== peg$FAILED) {\n                        s6 = [s6, s7, s8, s9, s10];\n                        s5 = s6;\n                      } else {\n                        peg$currPos = s5;\n                        s5 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c242(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolumns() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_group();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsecolumn_separator();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecolumn_separator();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parsecolumn();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsecolumn_separator();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsecolumn_separator();\n            }\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c243(s2, s5, s6);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n              s5 = peg$parsecolumn();\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parsecolumn_separator();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parsecolumn_separator();\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c243(s2, s5, s6);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c244(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolumn() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 108) {\n        s1 = peg$c245;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c246); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 99) {\n          s1 = peg$c247;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c248); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 114) {\n            s1 = peg$c249;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c250); }\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 112) {\n              s2 = peg$c251;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c252); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parselength_group();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c145(s3);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c253(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s1 = peg$c109;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseexpr_group();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsecolumns();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c254(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolumn_separator() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s1 = peg$c255;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c256); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 64) {\n          s2 = peg$c257;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c258); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsearg_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c259(s3);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c260(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsevspace_hmode() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c261) {\n        s1 = peg$c261;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c262); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c109;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parselength_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c263(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevspace_vmode() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c261) {\n        s1 = peg$c261;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c262); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c109;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parselength_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c264(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsesmbskip_hmode() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c265) {\n        s2 = peg$c265;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c266); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c267) {\n          s2 = peg$c267;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c268); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c269) {\n            s2 = peg$c269;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c270); }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c271) {\n          s2 = peg$c271;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c272); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsechar();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c273(s1);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsesmbskip_vmode() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c265) {\n        s2 = peg$c265;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c266); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c267) {\n          s2 = peg$c267;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c268); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c269) {\n            s2 = peg$c269;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c270); }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c271) {\n          s2 = peg$c271;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c272); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsechar();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c274(s1);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseverb() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c275) {\n        s1 = peg$c275;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c276); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c109;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parsechar();\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = void 0;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$currPos;\n                s7 = [];\n                s8 = peg$currPos;\n                s9 = peg$currPos;\n                peg$silentFails++;\n                s10 = peg$parsenl();\n                peg$silentFails--;\n                if (s10 === peg$FAILED) {\n                  s9 = void 0;\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                if (s9 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s10 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                  }\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = peg$currPos;\n                    s11 = peg$c277(s2, s5, s10);\n                    if (s11) {\n                      s11 = peg$FAILED;\n                    } else {\n                      s11 = void 0;\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s9 = [s9, s10, s11];\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$currPos;\n                  s9 = peg$currPos;\n                  peg$silentFails++;\n                  s10 = peg$parsenl();\n                  peg$silentFails--;\n                  if (s10 === peg$FAILED) {\n                    s9 = void 0;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s10 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = peg$currPos;\n                      s11 = peg$c277(s2, s5, s10);\n                      if (s11) {\n                        s11 = peg$FAILED;\n                      } else {\n                        s11 = void 0;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s9 = [s9, s10, s11];\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s6 = input.substring(s6, peg$currPos);\n                } else {\n                  s6 = s7;\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s7 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c278(s2, s5, s6, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_env() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsebegin();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseidentifier();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c280(s4);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsenextArgStar();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_group();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c281(s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c279); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_env() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseend();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseidentifier();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s7 = peg$c109;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c110); }\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseend_group();\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c283(s5, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c282); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseh_environment() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_env();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemacro_args();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c2); }\n          }\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c284(s1);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parsespace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c285(s1, s3, s5);\n            }\n            s4 = s5;\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseparagraph_with_linebreak();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseparagraph_with_linebreak();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_env();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = peg$parsespace();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c286(s1, s3, s4, s5, s6, s8);\n                  }\n                  s7 = s8;\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c287(s1, s3, s4, s5, s6, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseenvironment() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_env();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c288(s1);\n        if (s2) {\n          s2 = peg$FAILED;\n        } else {\n          s2 = void 0;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemacro_args();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$currPos;\n            peg$silentFails++;\n            if (input.length > peg$currPos) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            peg$silentFails--;\n            if (s6 !== peg$FAILED) {\n              peg$currPos = s5;\n              s5 = void 0;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c284(s1);\n            }\n            s4 = s5;\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseparagraph();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseparagraph();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_env();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c289(s1, s4, s5, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseitem() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c290) {\n            s3 = peg$c290;\n            peg$currPos += 4;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c291); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parsechar();\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = void 0;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s5 = peg$c292();\n              if (s5) {\n                s5 = peg$FAILED;\n              } else {\n                s5 = void 0;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseopt_group();\n                if (s6 === peg$FAILED) {\n                  s6 = null;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_all_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c293(s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseitems() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseskip_all_space();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsehv_macro();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseitem();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          s7 = peg$parseitem();\n          if (s7 === peg$FAILED) {\n            s7 = peg$parseend_env();\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseparagraph();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c294(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c295(s3, s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_all_space();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsehv_macro();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseitem();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseitem();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseend_env();\n              }\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = void 0;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseparagraph();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c294(s3, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c295(s3, s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseenumitems() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseskip_all_space();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsehv_macro();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseitem();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c296(s4);\n        }\n        s3 = s4;\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          s7 = peg$parseitem();\n          if (s7 === peg$FAILED) {\n            s7 = peg$parseend_env();\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseparagraph();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c294(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c295(s3, s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_all_space();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsehv_macro();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseitem();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c296(s4);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseitem();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseend_env();\n              }\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = void 0;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseparagraph();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c294(s3, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c295(s3, s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomment_env() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c298) {\n        s1 = peg$c298;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c299); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9) === peg$c300) {\n            s3 = peg$c300;\n            peg$currPos += 9;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c301); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseend_comment();\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseend_comment();\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = void 0;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_comment();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c302();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c297); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_comment() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c303) {\n        s1 = peg$c303;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c304); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9) === peg$c300) {\n            s3 = peg$c300;\n            peg$currPos += 9;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c301); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemath() {\n      var s0;\n\n      s0 = peg$parseinline_math();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedisplay_math();\n      }\n\n      return s0;\n    }\n\n    function peg$parseinline_math() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemath_shift();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = peg$parsemath_primitive();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsemath_primitive();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemath_shift();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c305(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s2 = peg$c150;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c151); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parsemath_primitive();\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parsemath_primitive();\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s3 = input.substring(s3, peg$currPos);\n            } else {\n              s3 = s4;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseescape();\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c305(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedisplay_math() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemath_shift();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemath_shift();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parsemath_primitive();\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsemath_primitive();\n            }\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = input.substring(s3, peg$currPos);\n          } else {\n            s3 = s4;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsemath_shift();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemath_shift();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c306(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseleft_br();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parsemath_primitive();\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parsemath_primitive();\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s3 = input.substring(s3, peg$currPos);\n            } else {\n              s3 = s4;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseescape();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseright_br();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c306(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemath_primitive() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$parseprimitive();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsealignment_tab();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsesuperscript();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsesubscript();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseescape();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseidentifier();\n                if (s2 !== peg$FAILED) {\n                  s1 = [s1, s2];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsebegin_group();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseskip_space();\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parseend_group();\n                    if (s3 !== peg$FAILED) {\n                      s1 = [s1, s2, s3];\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsebegin_group();\n                  if (s1 !== peg$FAILED) {\n                    s2 = [];\n                    s3 = peg$parsemath_primitive();\n                    if (s3 !== peg$FAILED) {\n                      while (s3 !== peg$FAILED) {\n                        s2.push(s3);\n                        s3 = peg$parsemath_primitive();\n                      }\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parseend_group();\n                      if (s3 !== peg$FAILED) {\n                        s1 = [s1, s2, s3];\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsesp();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parsenl();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parselinebreak();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsecomment();\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c307) {\n        s1 = peg$c307;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c308); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseend() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c310) {\n        s1 = peg$c310;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c311); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepar() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c312) {\n        s1 = peg$c312;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c313); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c309();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenoindent() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c314) {\n        s1 = peg$c314;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c315); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseplus() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c316) {\n        s1 = peg$c316;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c317); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseminus() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c318) {\n        s1 = peg$c318;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c319); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseendinput() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c320) {\n        s1 = peg$c320;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c321); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseescape() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c322;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c323); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsebegin_group() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c324;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c325); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseend_group() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s1 = peg$c326;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c327); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemath_shift() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s1 = peg$c329;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c330); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c328); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsealignment_tab() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s1 = peg$c331;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c332); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemacro_parameter() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c334;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c335); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c333); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesuperscript() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 94) {\n        s1 = peg$c336;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c337); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesubscript() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 95) {\n        s1 = peg$c338;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c339); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseignore() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 0) {\n        s1 = peg$c340;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c341); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseEOF() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$silentFails++;\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c2); }\n      }\n      peg$silentFails--;\n      if (s1 === peg$FAILED) {\n        s0 = void 0;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseendinput();\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c342); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenl() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c344;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c345); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c346) {\n          s0 = peg$c346;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c347); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 13) {\n            s0 = peg$c348;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c349); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8232) {\n              s0 = peg$c350;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c351); }\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 8233) {\n                s1 = peg$c352;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c353); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c11();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c343); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesp() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c355.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c356); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c354); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomment() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 37) {\n        s1 = peg$c155;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c156); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parsenl();\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c2); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsenl();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parsenl();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsesp();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsesp();\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseEOF();\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsecomment_env();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11();\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c357); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseskip_space() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parsebreak();\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = void 0;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsenl();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsesp();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parsecomment();\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsebreak();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenl();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parsesp();\n            if (s4 === peg$FAILED) {\n              s4 = peg$parsecomment();\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c358); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseskip_all_space() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsenl();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsesp();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsecomment();\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsenl();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsesp();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsecomment();\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c358); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsespace() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parsebreak();\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parselinebreak();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$currPos;\n          s5 = peg$parseskip_all_space();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseescape();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseis_vmode();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseis_vmode_env();\n              }\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parsesp();\n            if (s5 === peg$FAILED) {\n              s5 = peg$parsenl();\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parsesp();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parsenl();\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c359();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c358); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsectrl_space() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsenl();\n        peg$silentFails--;\n        if (s4 !== peg$FAILED) {\n          peg$currPos = s3;\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsebreak();\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsenl();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsesp();\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c359();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c360); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenbsp() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 126) {\n        s1 = peg$c362;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c363); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c364();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c361); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebreak() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parseskip_all_space();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseescape();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsepar();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseskip_all_space();\n            if (s6 !== peg$FAILED) {\n              s3 = [s3, s4, s5, s6];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parseskip_all_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseescape();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepar();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_all_space();\n                if (s6 !== peg$FAILED) {\n                  s3 = [s3, s4, s5, s6];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsesp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsesp();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parsenl();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsecomment();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsecomment();\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = [];\n            s4 = peg$parsecomment();\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parsecomment();\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsesp();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsesp();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenl();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = [];\n                s7 = peg$parsesp();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parsesp();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsenl();\n                  if (s7 !== peg$FAILED) {\n                    s6 = [s6, s7];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parseend_doc();\n              peg$silentFails--;\n              if (s5 !== peg$FAILED) {\n                peg$currPos = s4;\n                s4 = void 0;\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 === peg$FAILED) {\n                s4 = peg$parseEOF();\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parsesp();\n              if (s6 === peg$FAILED) {\n                s6 = peg$parsenl();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$parsecomment();\n                }\n              }\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsesp();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$parsenl();\n                  if (s6 === peg$FAILED) {\n                    s6 = peg$parsecomment();\n                  }\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                s2 = [s2, s3, s4, s5];\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c366();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c365); }\n      }\n\n      return s0;\n    }\n\n    function peg$parselinebreak() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s3 = peg$c322;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c323); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s5 = peg$c109;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c110); }\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = peg$parsebegin_optgroup();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseskip_space();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parselength();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseend_optgroup();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseskip_space();\n                          if (s12 !== peg$FAILED) {\n                            peg$savedPos = s7;\n                            s8 = peg$c368(s10);\n                            s7 = s8;\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c369(s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c367); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseunskip_macro() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c370) {\n            s3 = peg$c370;\n            peg$currPos += 3;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c371); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 7) === peg$c372) {\n              s3 = peg$c372;\n              peg$currPos += 7;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c373); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parsechar();\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = void 0;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_optgroup() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c207;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c208); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseend_optgroup() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s1 = peg$c209;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c210); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c375.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c376); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c377(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c374); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c379.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c380); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c381(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c378); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepunctuation() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c383.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c384); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c385(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c382); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsequotes() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c387.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c388); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c389(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c386); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseleft_br() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c207;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c208); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c391(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c390); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseright_br() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s1 = peg$c209;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c210); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c391(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c392); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseutf8_char() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parsesp();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsenl();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseescape();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsebegin_group();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseend_group();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parsemath_shift();\n                if (s2 === peg$FAILED) {\n                  s2 = peg$parsealignment_tab();\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$parsemacro_parameter();\n                    if (s2 === peg$FAILED) {\n                      s2 = peg$parsesuperscript();\n                      if (s2 === peg$FAILED) {\n                        s2 = peg$parsesubscript();\n                        if (s2 === peg$FAILED) {\n                          s2 = peg$parseignore();\n                          if (s2 === peg$FAILED) {\n                            s2 = peg$parsecomment();\n                            if (s2 === peg$FAILED) {\n                              s2 = peg$parsebegin_optgroup();\n                              if (s2 === peg$FAILED) {\n                                s2 = peg$parseend_optgroup();\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c394(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c393); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehyphen() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c180;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c181); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c396();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c395); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseligature() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c398) {\n        s1 = peg$c398;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c399); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c400) {\n          s1 = peg$c400;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c401); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c402) {\n            s1 = peg$c402;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c403); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c404) {\n              s1 = peg$c404;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c405); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c406) {\n                s1 = peg$c406;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c407); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c408) {\n                  s1 = peg$c408;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c409); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c410) {\n                    s1 = peg$c410;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c411); }\n                  }\n                  if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c412) {\n                      s1 = peg$c412;\n                      peg$currPos += 2;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c413); }\n                    }\n                    if (s1 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c414) {\n                        s1 = peg$c414;\n                        peg$currPos += 2;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c415); }\n                      }\n                      if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 2) === peg$c416) {\n                          s1 = peg$c416;\n                          peg$currPos += 2;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c417); }\n                        }\n                        if (s1 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c418) {\n                            s1 = peg$c418;\n                            peg$currPos += 2;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c419); }\n                          }\n                          if (s1 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 2) === peg$c420) {\n                              s1 = peg$c420;\n                              peg$currPos += 2;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c421); }\n                            }\n                            if (s1 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 2) === peg$c422) {\n                                s1 = peg$c422;\n                                peg$currPos += 2;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c423); }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c424(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c397); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsectrl_sym() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (peg$c426.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c427); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c428(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c425); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesymbol() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifier();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c430(s2);\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c431(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c429); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsediacritic() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$parsechar();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          s6 = peg$parsechar();\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsechar();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c433(s2);\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parsebegin_group();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseprimitive();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseend_group();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsespace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s5;\n                      s6 = peg$c434(s2, s7, s9);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$parseprimitive();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c435(s2, s6);\n                }\n                s5 = s6;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c436(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c432); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecharsym() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c437) {\n          s2 = peg$c437;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c438); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsebegin_group();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseinteger();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseend_group();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c439(s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c440) {\n            s2 = peg$c440;\n            peg$currPos += 4;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c441); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseinteger();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c439(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 4) === peg$c442) {\n            s1 = peg$c442;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c443); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsehex16();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c439(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c444) {\n              s1 = peg$c444;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c445); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsehex8();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c439(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c444) {\n                s1 = peg$c444;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c445); }\n              }\n              if (s1 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s2 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                }\n                if (s2 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c446(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseinteger() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseint();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c447(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c160;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c161); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseoct();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c448(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s1 = peg$c449;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c450); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsehex16();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parsehex8();\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c451(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehex8() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      s3 = peg$parsehex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsehex();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c453(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c452); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehex16() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      s3 = peg$parsehex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsehex();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehex();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsehex();\n            if (s6 !== peg$FAILED) {\n              s3 = [s3, s4, s5, s6];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c453(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c454); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseint() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c379.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c380); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c379.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c380); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c455); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseoct() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c457.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c458); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c457.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c458); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c456); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehex() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (peg$c460.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c461); }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c459); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefloat() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      if (peg$c463.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c464); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parseint();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s7 = peg$c203;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c204); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseint();\n            if (s8 === peg$FAILED) {\n              s8 = null;\n            }\n            if (s8 !== peg$FAILED) {\n              s7 = [s7, s8];\n              s6 = s7;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c203;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c204); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseint();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c465(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c462); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsethe() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c466) {\n        s1 = peg$c466;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c467); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parsevalue();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s6 = peg$c468(s5);\n              if (s6) {\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c469(s5);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              s5 = peg$parseescape();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseidentifier();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s4;\n                    s5 = peg$c470(s6);\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c471(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselogging() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c472) {\n        s1 = peg$c472;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c473); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parsevalue();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s6 = peg$c468(s5);\n              if (s6) {\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c474(s5);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              s5 = peg$parseescape();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseidentifier();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s4;\n                    s5 = peg$c475(s6);\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 7) === peg$c476) {\n          s1 = peg$c476;\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c477); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsearg_group();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c478(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n\n        var { Vector } = require('./types');\n        var g = options.generator;\n        g.setErrorFn(error);\n        g.location = location;\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();", "import { Article } from './article'\nimport { Book } from './book'\nimport { Report } from './report'\n\nexport default {\n    article: Article,\n    book: Book,\n    report: Report\n}", "'use strict'\n\n\nexport class XColor\n\n    args = @args = {}\n\n\n    # color data structure:\n\n    # color-name: {\n    #     rgb: { r: , g: , b: },\n    #     hsb: { },\n    #     cmyk: {},\n    #     gray:\n    # }\n\n\n    colors = @colors = new Map([\n        * \"red\"             {}\n        * \"green\"           {}\n        * \"blue\"            {}\n        * \"cyan\"            {}\n        * \"magenta\"         {}\n        * \"yellow\"          {}\n        * \"black\"           {}\n        * \"gray\"            {}\n        * \"white\"           {}\n        * \"darkgray\"        {}\n        * \"lightgray\"       {}\n        * \"brown\"           {}\n        * \"lime\"            {}\n        * \"olive\"           {}\n        * \"orange\"          {}\n        * \"pink\"            {}\n        * \"purple\"          {}\n        * \"teal\"            {}\n        * \"violet\"          {}\n    ])\n\n\n    # CTOR\n    (generator, options) ->\n        @g = generator\n        @options = options if options\n\n        for opt in @options\n            opt = Object.keys(opt).0\n\n            # xcolor, 2.1.2\n\n            switch opt\n            # target color mode\n            | \"natural\" =>\n            | \"rgb\" =>\n            | \"cmy\" =>\n            | \"cmyk\" =>\n            | \"hsb\" =>\n            | \"gray\" =>\n            | \"RGB\" =>\n            | \"HTML\" =>\n            | \"HSB\" =>\n            | \"Gray\" =>\n            | \"monochrome\" =>\n\n            # predefined colors\n            | \"dvipsnames\" =>\n            | \"dvipsnames*\" =>\n            | \"svgnames\" =>\n            | \"svgnames*\" =>\n            | \"x11names\" =>\n            | \"x11names*\" =>\n\n            | otherwise =>\n\n\n\n    # defining colors\n\n\n    # \\definecolorset[type]{model-list}{head}{tail}{set spec}\n    args.\\definecolorset = <[ P i? c-ml ie ie c-ssp ]>\n    \\definecolorset      : (type, models, hd, tl, setspec) !->\n        @g.error \"unknown color type\" if type not in [null, \"named\" \"ps\"]\n\n        hd = \"\" if not hd\n        tl = \"\" if not tl\n\n        for spec in setspec\n            @definecolor type, hd + spec.name + tl, models, spec.speclist\n\n    # \\definecolor[type]{name}{model-list}{color spec list}\n    args.\\definecolor = <[ P i? i c-ml c-spl ]>\n    \\definecolor      : (type, name, models, colorspec) !->\n        @g.error \"unknown color type\" if type not in [null, \"named\" \"ps\"]\n        @g.error \"color models and specs don't match\" if models.models.length != colorspec.length\n\n        color = {}\n\n        # TODO: deal with models.core\n\n        for model, i in models.models\n            color[model] = colorspec[i]\n\n        colors.set name, color\n\n        # console.log(name, JSON.stringify(colors.get name))\n\n\n    # using colors\n\n    # {name/expression} or [model-list]{color spec list}\n    args.\\color     = [ \"HV\" [ <[ c-ml? c-spl ]>\n                               <[ c ]>            ] ]\n    \\color          : !->\n        if &.length == 1\n            console.log \"got color expression\"\n        else\n            console.log \"got model/color spec\"\n\n    # args.\\color =       <[ HV c-ml? c-spl ]>\n    # \\color      : (model, colorspec) ->\n\n    # {name/expression}{text} or [model-list]{color spec list}{text}\n    args.\\textcolor = [ \"HV\" [ <[ c-ml? c-spl ]>\n                               <[ c ]>            ] \"g\" ]\n    \\textcolor      : ->\n        if &.length == 2\n            return\n\n        return\n\n\n    # \\colorbox{name}{text}\n    # \\colorbox[model]{specification}{text}\n    args.\\colorbox  = <[ H i? c g ]>\n    \\colorbox       : (model, color, text) ->\n\n    # \\fcolorbox{name1}{name2}{text}\n    # \\fcolorbox[model]{specification1}{specification2}{text}\n    args.\\fcolorbox = <[ H i? c c g ]>\n    \\fcolorbox      : (model, color, text) ->\n", "# forward to xcolor\n\nimport './xcolor': { XColor }\n\nexport Color = XColor\n", "'use strict'\n\n\n# macros just for testing\nexport class Echo\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n\n    args.gobbleO = <[ H o? ]>\n\n    \\gobbleO : -> []\n\n\n\n    args.echoO = <[ H o? ]>\n\n    \\echoO : (o) ->\n        [ \"-\", o, \"-\" ]\n\n\n    args.echoOGO = <[ H o? g o? ]>\n\n    \\echoOGO : (o1, g, o2) ->\n        []\n            ..push \"-\", o1, \"-\" if o1\n            ..push \"+\", g,  \"+\"\n            ..push \"-\", o2, \"-\" if o2\n\n\n    args.echoGOG = <[ H g o? g ]>\n\n    \\echoGOG : (g1, o, g2) ->\n        [ \"+\", g1, \"+\" ]\n            ..push \"-\", o,  \"-\" if o\n            ..push \"+\", g2, \"+\"\n", "'use strict'\n\nimport 'he'\n\nexport class Gensymb\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n    # TODO: implement package options\n\n    symbols = @symbols = new Map([\n        * \\degree               he.decode '&deg;'       # °   U+00B0\n        * \\celsius              '\\u2103'                # ℃\n        * \\perthousand          he.decode '&permil;'    # ‰   U+2030\n        * \\ohm                  '\\u2126'                # Ω\n        * \\micro                he.decode '&mu;'        # μ   U+03BC\n    ])\n", "'use strict'\n\nexport class Graphicx\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n    # 3 Colour   TODO: also in xcolor - include xcolor instead?\n\n\n    # 4.2 Rotation\n\n    # rotation\n\n    # \\rotatebox[key-val list]{angle}{text}\n\n    args.\\rotatebox = <[ H kv? n hg ]>\n    \\rotatebox      : (kvl, angle, text) ->\n        # origin=one or two of: lrctbB\n        # x=<dimen>\n        # y=<dimen>\n        # units=<number>\n\n\n    # 4.3 Scaling\n\n    # TODO: check if they all need to be hg instead of g?\n\n    # \\scalebox{h-scale}[v-scale]{text}\n    args.\\scalebox = <[ H n n? g ]>\n    \\scalebox    : (hsc, vsc, text) ->\n        # style=\"transform: scale(hsc, vsc);\"\n\n\n    # \\reflectbox{text}\n    args.\\reflectbox = <[ H g ]>\n    \\reflectbox    : (text) ->\n        @\\scalebox -1, 1, text\n\n\n    # \\resizebox*{h-length}{v-length}{text}\n    args.\\resizebox = <[ H s l l g ]>\n    \\resizebox    : (s, hl, vl, text) ->\n\n\n    # 4.4 Including Graphics Files\n\n    # TODO: restrict to just one path?\n    # { {path1/} {path2/} }\n    args.\\graphicspath = <[ HV gl ]>\n    \\graphicspath       : (paths) !->\n\n\n    # graphics: \\includegraphics*[<llx,lly>][<urx,ury>]{<file>}     TODO\n    # graphicx: \\includegraphics*[<key-val list>]{<file>}\n\n    args.\\includegraphics = <[ H s kv? kv? k ]>\n    \\includegraphics    : (s, kvl, kvl2, file) ->\n        # LaTeX supports the following keys:\n        #\n        # set bounding box:\n        #  * bb = a b c d\n        #  * bbllx=a, bblly=b, bburx=c, bbury=d => equivalent to bb=a b c d\n        #  * natwidth=w, natheight=h => equivalent to bb=0 0 h w\n        #\n        # hiresbb, pagebox\n        #\n        # viewport\n        # trim\n        #\n        # angle, origin (for rotation)\n        #\n        # width, height\n        # totalheight\n        #\n        # scale\n        #\n        # clip\n        # draft\n        #\n        # type, ext, read, command\n        #\n        # quiet\n        # page (when including a pdf)\n        # interpolate\n\n        # order of the keys is important! insert into map in order!\n\n        [ @g.createImage kvl.get(\"width\"), kvl.get(\"height\"), file ]\n", "import { Color } from './color'\nimport { XColor } from './xcolor'\nimport { Echo } from './echo'\nimport { Gensymb } from './gensymb'\nimport { Graphics } from './graphics'\nimport { Graphicx } from './graphicx'\nimport { Hyperref } from './hyperref'\nimport { Latexsym } from './latexsym'\nimport { Multicol } from './multicol'\nimport { Stix } from './stix'\nimport { Textcomp } from './textcomp'\nimport { Textgreek } from './textgreek'\n\n\nexport default {\n    color: Color,\n    xcolor: XColor,\n    echo: Echo,\n    gensymb: Gensymb,\n    graphics: Graphics,\n    graphicx: Graphicx,\n    hyperref: Hyperref,\n    latexsym: Latexsym,\n    multicol: Multicol,\n    stix: Stix,\n    textcomp: Textcomp,\n    textgreek: Textgreek,\n}", "# graphics just uses graphicx\n\nimport './graphicx': { Graphicx }\n\nexport Graphics = Graphicx", "'use strict'\n\nexport class Hyperref\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    # package: hyperref\n\n    args.\\href =        <[ H o? u g ]>\n    \\href               : (opts, url, txt) -> [ @g.create @g.link(url), txt ]\n\n    args.\\url =         <[ H u ]>\n    \\url                : (url) -> [ @g.create @g.link(url), @g.createText(url) ]\n\n    args.\\nolinkurl =   <[ H u ]>\n    \\nolinkurl          : (url) -> [ @g.create @g.link(), @g.createText(url) ]\n\n\n    # TODO\n    # \\hyperbaseurl  HV u\n\n    # \\hyperref[label]{link text} --- like \\ref{label}, but use \"link text\" for display\n    # args.\\hyperref =    <[ H o? g ]>\n    # \\hyperref           : (label, txt) -> [ @g.ref label ]\n", "'use strict'\n\n\n# TODO: this is math mode only!!\nexport class Latexsym\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    symbols = @symbols = new Map([\n        * \\mho                  '\\u2127'                # ℧\n        * \\Join                 '\\u2A1D'                # ⨝\n        * \\Box                  '\\u25A1'                # □\n        * \\Diamond              '\\u25C7'                # ◇\n        * \\leadsto              '\\u2933'                # ⤳\n        * \\sqsubset             '\\u228F'                # ⊏\n        * \\sqsupset             '\\u2290'                # ⊐\n        * \\lhd                  '\\u22B2'                # ⊲\n        * \\unlhd                '\\u22B4'                # ⊴\n        * \\rhd                  '\\u22B3'                # ⊳\n        * \\unrhd                '\\u22B5'                # ⊵\n    ])\n", "'use strict'\n\nexport class Multicol\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    # multicolumns\n\n    # \\begin{multicols}{number}[pretext][premulticols size]\n    args.\\multicols =   <[ V n o? o? ]>\n\n    \\multicols          : (cols, pre) -> [ pre, @g.create @g.multicols cols ]\n", "'use strict'\n\nimport 'he'\n\nexport class Stix\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2664\", \"\\\\varspadesuit\", true)     # ♤\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2665\", \"\\\\varheartsuit\", true)     # ♥\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2666\", \"\\\\vardiamondsuit\", true)   # ♦\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2667\", \"\\\\varclubsuit\", true)      # ♧\n\n\n    symbols = @symbols = new Map([\n        * \\checkmark            he.decode '&check;'     # ✓   U+2713\n    ])\n", "'use strict'\n\nimport 'he'\n\nexport class Textcomp\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    symbols = @symbols = new Map([\n        # currencies\n        * \\textcentoldstyle     '\\uF7A2'                # \n        * \\textdollaroldstyle   '\\uF724'                # \n        * \\textguarani          '\\u20B2'                # ₲\n\n        # legal symbols\n        * \\textcopyleft         '\\u1F12F'\n\n        # old style numerals\n        * \\textzerooldstyle     '\\uF730'                # \n        * \\textoneoldstyle      '\\uF731'                # \n        * \\texttwooldstyle      '\\uF732'                # \n        * \\textthreeoldstyle    '\\uF733'                # \n        * \\textfouroldstyle     '\\uF734'                # \n        * \\textfiveoldstyle     '\\uF735'                # \n        * \\textsixoldstyle      '\\uF736'                # \n        * \\textsevenoldstyle    '\\uF737'                # \n        * \\texteightoldstyle    '\\uF738'                # \n        * \\textnineoldstyle     '\\uF739'                # \n\n        # genealogical\n        * \\textborn             '\\u2B51'                # ⭑             (alternatives: U+002A, U+2605, U+2736)\n        * \\textdied             he.decode '&dagger;'    # †   U+2020    (alternative: U+271D)\n        # * \\textleaf                                   # TODO\n\n        # misc\n        * \\textpilcrow          he.decode '&para;'      # ¶   U+00B6\n        * \\textdblhyphen        '\\u2E40'                # ⹀\n\n\n        # TODO\n        # * \\textdblhyphenchar\n\n        # * \\textcapitalcompwordmark\n        # * \\textascendercompwordmark\n        # * \\textquotestraightbase\n        # * \\textquotestraightdblbase\n        # * \\textthreequartersemdash\n        # * \\texttwelveudash\n        # * \\capitaltie\n        # * \\newtie\n        # * \\capitalnewtie\n        # * \\capitalgrave\n        # * \\capitalacute\n        # * \\capitalcircumflex\n        # * \\capitaltilde\n        # * \\capitaldieresis\n        # * \\capitalhungarumlaut\n        # * \\capitalring\n        # * \\capitalcaron\n        # * \\capitalbreve\n        # * \\capitalmacron\n        # * \\capitaldotaccent\n        # * \\capitalcedilla\n        # * \\capitalogonek\n\n        # all the other symbols are already defined by tuenc.def\n    ])\n", "'use strict'\n\nimport 'he'\n\nexport class Textgreek\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    symbols = @symbols = new Map([\n        # greek letters - lower case\n        * \\textalpha            he.decode '&alpha;'     # α     U+03B1\n        * \\textbeta             he.decode '&beta;'      # β     U+03B2\n        * \\textgamma            he.decode '&gamma;'     # γ     U+03B3\n        * \\textdelta            he.decode '&delta;'     # δ     U+03B4\n        * \\textepsilon          he.decode '&epsilon;'   # ε     U+03B5\n        * \\textzeta             he.decode '&zeta;'      # ζ     U+03B6\n        * \\texteta              he.decode '&eta;'       # η     U+03B7\n        * \\texttheta            he.decode '&thetasym;'  # ϑ     U+03D1  (θ = U+03B8)\n        * \\textiota             he.decode '&iota;'      # ι     U+03B9\n        * \\textkappa            he.decode '&kappa;'     # κ     U+03BA\n        * \\textlambda           he.decode '&lambda;'    # λ     U+03BB\n        * \\textmu               he.decode '&mu;'        # μ     U+03BC  this is better than \\u00B5, LaTeX's original\n        * \\textmugreek          he.decode '&mu;'\n        * \\textnu               he.decode '&nu;'        # ν     U+03BD\n        * \\textxi               he.decode '&xi;'        # ξ     U+03BE\n        * \\textomikron          he.decode '&omicron;'   # ο     U+03BF\n        * \\textpi               he.decode '&pi;'        # π     U+03C0\n        * \\textrho              he.decode '&rho;'       # ρ     U+03C1\n        * \\textsigma            he.decode '&sigma;'     # σ     U+03C3\n        * \\texttau              he.decode '&tau;'       # τ     U+03C4\n        * \\textupsilon          he.decode '&upsilon;'   # υ     U+03C5\n        * \\textphi              he.decode '&phi;'       # φ     U+03C6\n        * \\textchi              he.decode '&chi;'       # χ     U+03C7\n        * \\textpsi              he.decode '&psi;'       # ψ     U+03C8\n        * \\textomega            he.decode '&omega;'     # ω     U+03C9\n\n        # greek letters - upper case\n        * \\textAlpha            he.decode '&Alpha;'     # Α     U+0391\n        * \\textBeta             he.decode '&Beta;'      # Β     U+0392\n        * \\textGamma            he.decode '&Gamma;'     # Γ     U+0393\n        * \\textDelta            he.decode '&Delta;'     # Δ     U+0394\n        * \\textEpsilon          he.decode '&Epsilon;'   # Ε     U+0395\n        * \\textZeta             he.decode '&Zeta;'      # Ζ     U+0396\n        * \\textEta              he.decode '&Eta;'       # Η     U+0397\n        * \\textTheta            he.decode '&Theta;'     # Θ     U+0398\n        * \\textIota             he.decode '&Iota;'      # Ι     U+0399\n        * \\textKappa            he.decode '&Kappa;'     # Κ     U+039A\n        * \\textLambda           he.decode '&Lambda;'    # Λ     U+039B\n        * \\textMu               he.decode '&Mu;'        # Μ     U+039C\n        * \\textNu               he.decode '&Nu;'        # Ν     U+039D\n        * \\textXi               he.decode '&Xi;'        # Ξ     U+039E\n        * \\textOmikron          he.decode '&Omicron;'   # Ο     U+039F\n        * \\textPi               he.decode '&Pi;'        # Π     U+03A0\n        * \\textRho              he.decode '&Rho;'       # Ρ     U+03A1\n        * \\textSigma            he.decode '&Sigma;'     # Σ     U+03A3\n        * \\textTau              he.decode '&Tau;'       # Τ     U+03A4\n        * \\textUpsilon          he.decode '&Upsilon;'   # Υ     U+03A5\n        * \\textPhi              he.decode '&Phi;'       # Φ     U+03A6\n        * \\textChi              he.decode '&Chi;'       # Χ     U+03A7\n        * \\textPsi              he.decode '&Psi;'       # Ψ     U+03A8\n        * \\textOmega            he.decode '&Omega;'     # Ω     U+03A9\n\n\n        * \\textvarsigma         he.decode '&sigmaf;'    # ς     U+03C2\n        * \\straightphi          '\\u03D5'                # ϕ\n        * \\scripttheta          '\\u03D1'                # ϑ\n        * \\straighttheta        he.decode '&theta;'     # θ     U+03B8\n        * \\straightepsilon      '\\u03F5'                # ϵ\n    ])", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n", "var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n", "var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n", "var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n", "var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n", "var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n", "var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n", "var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n", "import\n    './symbols': { symbols }\n    './types': { Vector }\n\n    './documentclasses': builtin-documentclasses\n    './packages': builtin-packages\n\n    'lodash/assign'\n    'lodash/assignIn'\n\n\n# This is where most macros are defined. This file is like base/latex.ltx in LaTeX.\n#\n# By default, a macro takes no arguments and is a horizontal-mode macro.\n# See below for the description of how to declare arguments.\n#\n# A macro must return an array with elements of type Node or String (text).\n#\n# This class should be independent of HtmlGenerator and just work with the generator interface.\n#\n# State is held that is relevant to the particular macros and/or documentclass.\nexport class LaTeX\n\n    # this LaTeX implementation already covers these packages\n    providedPackages = <[ calc pspicture picture pict2e keyval comment ]>\n\n    _title: null\n    _author: null\n    _date: null\n    _thanks: null\n\n\n    # CTOR\n    (generator, CustomMacros) ->\n        if CustomMacros\n            assignIn this, new CustomMacros(generator)\n            assign args, CustomMacros.args\n            CustomMacros.symbols?.forEach (value, key) -> symbols.set key, value\n\n        @g = generator\n\n        @g.newCounter \\secnumdepth\n        @g.newCounter \\tocdepth\n\n        @g.newCounter \\footnote\n        @g.newCounter \\mpfootnote\n\n        @g.newCounter \\@listdepth\n        @g.newCounter \\@itemdepth\n        @g.newCounter \\@enumdepth\n\n\n        @g.newLength \\@@size         # root font size\n\n        # picture lengths\n        @g.newLength \\unitlength\n        @g.setLength \\unitlength    new @g.Length 1, \"pt\"\n\n        @g.newLength \\@wholewidth\n        @g.setLength \\@wholewidth   new @g.Length 0.4, \"pt\"\n\n        @g.newLength \\paperheight\n        @g.newLength \\paperwidth\n\n        @g.newLength \\oddsidemargin\n        @g.newLength \\evensidemargin\n\n        @g.newLength \\textheight\n        @g.newLength \\textwidth\n\n        @g.newLength \\marginparwidth\n        @g.newLength \\marginparsep\n        @g.newLength \\marginparpush\n\n        @g.newLength \\columnwidth\n        @g.newLength \\columnsep\n        @g.newLength \\columnseprule\n\n        @g.newLength \\linewidth\n\n        @g.newLength \\leftmargin\n        @g.newLength \\rightmargin\n        @g.newLength \\listparindent\n        @g.newLength \\itemindent\n        @g.newLength \\labelwidth\n        @g.newLength \\labelsep\n\n        @g.newLength \\leftmargini\n        @g.newLength \\leftmarginii\n        @g.newLength \\leftmarginiii\n        @g.newLength \\leftmarginiv\n        @g.newLength \\leftmarginv\n        @g.newLength \\leftmarginvi\n\n        @g.newLength \\fboxrule\n        @g.newLength \\fboxsep\n\n        @g.newLength \\tabbingsep\n        @g.newLength \\arraycolsep\n        @g.newLength \\tabcolsep\n        @g.newLength \\arrayrulewidth\n        @g.newLength \\doublerulesep\n        @g.newLength \\footnotesep\n        @g.newLength \\topmargin\n        @g.newLength \\headheight\n        @g.newLength \\headsep\n        @g.newLength \\footskip\n\n        @g.newLength \\topsep\n        @g.newLength \\partopsep\n        @g.newLength \\itemsep\n        @g.newLength \\parsep\n        @g.newLength \\floatsep\n        @g.newLength \\textfloatsep\n        @g.newLength \\intextsep\n        @g.newLength \\dblfloatsep\n        @g.newLength \\dbltextfloatsep\n\n\n    @symbols = symbols\n\n    # args: declaring arguments for a macro. If a macro doesn't take arguments and is a\n    #       horizontal-mode macro, args can be left undefined for it.\n    #\n    # syntax: see README.md\n\n    args = @args = {}\n\n\n    args.\\empty = <[ HV ]>\n    \\empty :!->\n\n\n    \\TeX :->\n        # document.createRange().createContextualFragment('<span class=\"tex\">T<span>e</span>X</span>')\n        @g.enterGroup! # prevent createText to add attributes, they will be added by @g.macro\n\n        tex = @g.create @g.inline\n        tex.setAttribute('class', 'tex')\n\n        tex.appendChild @g.createText 'T'\n        e = @g.create @g.inline, (@g.createText 'e'), 'e'\n        tex.appendChild e\n        tex.appendChild @g.createText 'X'\n\n        @g.exitGroup!\n\n        return [tex]\n\n    \\LaTeX :->\n        # <span class=\"latex\">L<span>a</span>T<span>e</span>X</span>\n        @g.enterGroup!\n\n        latex = @g.create @g.inline\n        latex.setAttribute('class', 'latex')\n\n        latex.appendChild @g.createText 'L'\n        a = @g.create @g.inline, (@g.createText 'a'), 'a'\n        latex.appendChild a\n        latex.appendChild @g.createText 'T'\n        e = @g.create @g.inline, (@g.createText 'e'), 'e'\n        latex.appendChild e\n        latex.appendChild @g.createText 'X'\n\n        @g.exitGroup!\n\n        return [latex]\n\n\n    \\today              :-> [ new Date().toLocaleDateString('en', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) ]\n\n    \\newline            :-> [ @g.create @g.linebreak ]\n\n    \\negthinspace       :-> [ @g.create @g.inline, undefined, 'negthinspace' ]\n\n\n\n    # vertical mode declarations\n    args.\\par           = <[ V ]>\n    args.\\item          = <[ V ]>\n\n\n    # switch to onecolumn layout from now on\n    args.\\onecolumn     = <[ V ]>\n    \\onecolumn :->\n\n    # switch to twocolumn layout from now on\n    args.\\twocolumn     = <[ V o? ]>\n    \\twocolumn :->\n\n\n    # spacing\n\n    args\n     ..\\smallbreak      = \\\n     ..\\medbreak        = \\\n     ..\\bigbreak        = <[ V ]>\n\n    \\smallbreak         :-> [ @g.createVSpaceSkip \"smallskip\" ]\n    \\medbreak           :-> [ @g.createVSpaceSkip \"medskip\" ]\n    \\bigbreak           :-> [ @g.createVSpaceSkip \"bigskip\" ]\n\n    args.\\addvspace     = <[ V l ]>\n\n    \\addvspace          : (l) -> @g.createVSpace l          # TODO not correct?\n\n\n\n    args.\\marginpar     = <[ H g ]>\n    \\marginpar          : (txt) -> [ @g.marginpar txt ]\n\n\n    ###########\n    # titling #\n    ###########\n\n    \\abstractname       :-> [ \"Abstract\" ]\n\n\n    args.\\title =       <[ HV g ]>\n    args.\\author =      <[ HV g ]>\n    args.\\and =         <[ H ]>\n    args.\\date =        <[ HV g ]>\n    args.\\thanks =      <[ HV g ]>\n\n    \\title              : (t) !-> @_title = t\n    \\author             : (a) !-> @_author = a\n    \\date               : (d) !-> @_date = d\n\n    \\and                :-> @g.macro \\quad\n    \\thanks             : @\\footnote\n\n\n\n    ###############\n    # font macros #\n    ###############\n\n    # commands\n\n    [ args[\\text + ..]  = <[ H X g ]> for <[ rm sf tt md bf up it sl sc normal ]> ]\n\n\n    \\textrm         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontFamily \"rm\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textsf         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontFamily \"sf\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\texttt         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontFamily \"tt\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n    \\textmd         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontWeight \"md\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textbf         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontWeight \"bf\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n    \\textup         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"up\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textit         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"it\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textsl         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"sl\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textsc         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"sc\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n    \\textnormal     : (arg) ->\n                        if &length == 0\n                            @g.enterGroup!\n                            @g.setFontFamily \"rm\"\n                            @g.setFontWeight \"md\"\n                            @g.setFontShape \"up\"\n                        else\n                            arg = @g.addAttributes arg\n                            @g.exitGroup!\n                            [ arg ]\n\n\n\n    args.\\emph      = <[ H X g ]>\n    \\emph           : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape \"em\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n\n    # declarations\n\n    [ args[.. + \"family\"] = [ \\HV ] for <[ rm sf tt    ]> ]\n    [ args[.. + \"series\"] = [ \\HV ] for <[ md bf       ]> ]\n    [ args[.. + \"shape\" ] = [ \\HV ] for <[ up it sl sc ]> ]\n    [ args[..]            = [ \\HV ] for <[ normalfont em ]> ]\n    [ args[..]            = [ \\HV ] for <[ tiny scriptsize footnotesize small normalsize large Large LARGE huge Huge ]> ]\n\n\n    \\rmfamily           :!-> @g.setFontFamily \"rm\"\n    \\sffamily           :!-> @g.setFontFamily \"sf\"\n    \\ttfamily           :!-> @g.setFontFamily \"tt\"\n\n    \\mdseries           :!-> @g.setFontWeight \"md\"\n    \\bfseries           :!-> @g.setFontWeight \"bf\"\n\n    \\upshape            :!-> @g.setFontShape \"up\"\n    \\itshape            :!-> @g.setFontShape \"it\"\n    \\slshape            :!-> @g.setFontShape \"sl\"\n    \\scshape            :!-> @g.setFontShape \"sc\"\n\n    \\normalfont         :!-> @g.setFontFamily \"rm\"; @g.setFontWeight \"md\"; @g.setFontShape \"up\"\n\n    [ ::[..] = ((f) -> -> @g.setFontSize(f))(..) for <[ tiny scriptsize footnotesize small normalsize large Large LARGE huge Huge ]> ]\n\n    \\em                 :!-> @g.setFontShape \"em\"\n\n\n\n    ################\n    # environments #\n    ################\n\n    # enumerate\n\n    \\theenumi           :-> [ @g.arabic @g.counter \\enumi ]\n    \\theenumii          :-> [ @g.alph @g.counter \\enumii ]\n    \\theenumiii         :-> [ @g.roman @g.counter \\enumiii ]\n    \\theenumiv          :-> [ @g.Alph @g.counter \\enumiv ]\n\n    \\labelenumi         :-> @theenumi! ++ \".\"\n    \\labelenumii        :-> [ \"(\", ...@theenumii!, \")\" ]\n    \\labelenumiii       :-> @theenumiii! ++ \".\"\n    \\labelenumiv        :-> @theenumiv! ++ \".\"\n\n    \\p@enumii           :-> @theenumi!\n    \\p@enumiii          :-> @theenumi! ++ \"(\" ++ @theenumii! ++ \")\"\n    \\p@enumiv           :-> @\"p@enumiii\"! ++ @theenumiii!\n\n    # itemize\n\n    \\labelitemi         :-> [ @g.symbol \\textbullet ]\n    \\labelitemii        :-> @normalfont!; @bfseries!; [ @g.symbol \\textendash ]\n    \\labelitemiii       :-> [ @g.symbol \\textasteriskcentered ]\n    \\labelitemiv        :-> [ @g.symbol \\textperiodcentered ]\n\n\n\n    # TODO: LaTeX doesn't allow hyphenation in alignment, but with e.g. \\RaggedRight, it does. (package ragged2e)\n\n    # alignment\n\n    args\n     ..\\centering =     \\\n     ..\\raggedright =   \\\n     ..\\raggedleft =    <[ HV ]>\n\n    \\centering          :!-> @g.setAlignment \"centering\"\n    \\raggedright        :!-> @g.setAlignment \"raggedright\"\n    \\raggedleft         :!-> @g.setAlignment \"raggedleft\"\n\n\n    # alignment environments using a list:  flushleft, flushright, center\n\n    args\n     ..\\center =        \\\n     ..\\flushleft =     \\\n     ..\\flushright =    <[ V ]>\n\n    \\center             :->  @g.startlist!; [ @g.create @g.list, null, \"center\" ]\n    \\endcenter          :!-> @g.endlist!\n\n    \\flushleft          :->  @g.startlist!; [ @g.create @g.list, null, \"flushleft\" ]\n    \\endflushleft       :!-> @g.endlist!\n\n    \\flushright         :->  @g.startlist!; [ @g.create @g.list, null, \"flushright\" ]\n    \\endflushright      :!-> @g.endlist!\n\n\n\n    # titling\n\n    args\n     ..\\titlepage =     <[ V ]>\n\n    \\titlepage          :-> [ @g.create @g.titlepage ]\n\n\n    # quote, quotation, verse\n\n    args\n     ..\\quote =         \\\n     ..\\quotation =     \\\n     ..\\verse =         <[ V ]>\n\n    \\quote              :->  @g.startlist!; [ @g.create @g.quote ]\n    \\endquote           :!-> @g.endlist!\n\n    \\quotation          :->  @g.startlist!; [ @g.create @g.quotation ]\n    \\endquotation       :!-> @g.endlist!\n\n    \\verse              :->  @g.startlist!; [ @g.create @g.verse ]\n    \\endverse           :!-> @g.endlist!\n\n\n    # lists: itemize, enumerate, description\n\n    args.\\itemize =     <[ V X items ]>\n    \\itemize            : (items) ->\n        if &length == 0\n            @g.startlist!\n            @g.stepCounter \\@itemdepth\n            @g.error \"too deeply nested\" if @g.counter(\\@itemdepth) > 4\n            return\n\n        label = \"labelitem\" + @g.roman @g.counter \\@itemdepth\n\n        [\n        @g.create @g.unorderedList, items.map (item) ~>\n            @g.enterGroup!\n            # label: null means no opt_group was given (\\item ...), undefined is an empty one (\\item[] ...)\n            makelabel = @g.create @g.itemlabel, @\\llap (if item.label != null then item.label else @g.macro label)\n            @g.exitGroup!\n\n            @g.create @g.listitem, [ makelabel, item.text ]\n        ]\n\n\n    \\enditemize         :!->\n        @g.endlist!\n        @g.setCounter \\@itemdepth, @g.counter(\\@itemdepth) - 1\n\n\n\n    args.\\enumerate =   <[ V X enumitems ]>\n    \\enumerate          : (items) ->\n        if &length == 0\n            @g.startlist!\n            @g.stepCounter \\@enumdepth\n            @g.error \"too deeply nested\" if @g.counter(\\@enumdepth) > 4\n            return\n\n        itemCounter = \"enum\" + @g.roman @g.counter \\@enumdepth\n        @g.setCounter itemCounter, 0\n\n        [\n        @g.create @g.orderedList, items.map (item) ~>\n            label = @g.create @g.inline, item.label.node\n            if item.label.id\n                label.id = item.label.id\n\n            makelabel = @g.create @g.itemlabel, @\\llap label\n            @g.create @g.listitem, [ makelabel, item.text ]\n        ]\n\n\n    \\endenumerate       :!->\n        @g.endlist!\n        @g.setCounter \\@enumdepth, @g.counter(\\@enumdepth) - 1\n\n\n    args.\\description = <[ V X items ]>\n    \\description        : (items) ->\n        if &length == 0\n            @g.startlist!\n            return\n\n        [\n        @g.create @g.descriptionList, items.map (item) ~>\n            dt = @g.create @g.term, item.label\n            dd = @g.create @g.description, item.text\n            @g.createFragment [dt, dd]\n        ]\n\n    \\enddescription     :!-> @g.endlist!\n\n\n\n    # picture\n\n    # \\begin{picture}(width,height)(xoffset,yoffset)\n    args.\\picture =     <[ H v v? h ]>\n\n    \\picture            : (size, offset, content) ->\n        # TODO: rule for picture content??? LaTeX allows anything, Lamport says: HV macros and picture commands\n        # content:text*\n        [ @g.createPicture(size, offset, content) ]\n\n\n\n\n    ##############\n\n    # horizontal spacing\n    args.\\hspace =      <[ H s l ]>\n    \\hspace             : (s, l) -> [ @g.createHSpace l ]\n\n    # stretch     arg_group\n    #\n    # hfill           = \\hspace{\\fill}\n    # dotfill         =\n    # hrulefill       =\n\n\n\n    # label, ref\n\n    args.\\label =       <[ HV g ]>\n    \\label              : (label) !-> @g.setLabel label.textContent\n\n    args.\\ref =         <[ H g ]>\n    \\ref                : (label) -> [ @g.ref label.textContent ]\n\n\n\n    #########\n    # boxes #\n    #########\n\n    ### hboxes\n\n    # lowlevel macros...\n    args\n     ..\\llap =          \\\n     ..\\rlap =          \\\n     ..\\clap =          \\\n     ..\\smash =         \\\n     ..\\hphantom =      \\\n     ..\\vphantom =      \\\n     ..\\phantom =       <[ H hg ]>   # TODO: not true, these should be usable in V-mode as well, they don't \\leavevmode :(\n\n    \\llap               : (txt) -> [ @g.create @g.inline, txt, \"hbox llap\" ]\n    \\rlap               : (txt) -> [ @g.create @g.inline, txt, \"hbox rlap\" ]\n    \\clap               : (txt) -> [ @g.create @g.inline, txt, \"hbox clap\" ]\n    \\smash              : (txt) -> [ @g.create @g.inline, txt, \"hbox smash\" ]\n\n    \\hphantom           : (txt) -> [ @g.create @g.inline, txt, \"phantom hbox smash\" ]\n    \\vphantom           : (txt) -> [ @g.create @g.inline, txt, \"phantom hbox rlap\" ]\n    \\phantom            : (txt) -> [ @g.create @g.inline, txt, \"phantom hbox\" ]\n\n\n    # LaTeX\n\n    args.\\underline     = <[ H hg ]>\n    \\underline          : (txt) -> [ @g.create @g.inline, txt, \"hbox underline\" ]\n\n\n    # \\mbox{text} - not broken into lines\n    args.\\mbox =        <[ H hg ]>\n    \\mbox               : (txt) -> @makebox undefined, undefined, undefined, txt\n\n\n    # \\makebox[0pt][r]{...} behaves like \\leavevmode\\llap{...}\n    # \\makebox[0pt][l]{...} behaves like \\leavevmode\\rlap{...}\n    # \\makebox[0pt][c]{...} behaves like \\leavevmode\\clap{...}\n\n    # \\makebox[width][position]{text}\n    #   position: c,l,r,s (default = c)\n    # \\makebox(width,height)[position]{text}\n    #   position: c,l,r,s (default = c) and t,b or combinations of the two\n    args.\\makebox =     <[ H v? l? i? hg ]>\n    \\makebox            : (vec, width, pos, txt) ->\n        if vec\n            # picture version TODO\n            @g.error \"expected \\\\makebox(width,height)[position]{text} but got two optional arguments!\" if width and pos\n            pos = width\n\n            [ txt ]\n        else\n            # normal makebox\n            @_box width, pos, txt, \"hbox\"\n\n\n    # \\fbox{text}\n    # \\framebox[width][position]{text}\n    #   position: c,l,r,s\n    #\n    # these add \\fboxsep (default ‘3pt’) padding to \"text\" and draw a frame with linewidth \\fboxrule (default ‘.4pt’)\n    #\n    # \\framebox(width,height)[position]{text}\n    #   position: t,b,l,r (one or two)\n    # this one uses the picture line thickness\n    args.\\fbox =        <[ H hg ]>\n    args.\\framebox =    <[ H v? l? i? hg ]>\n\n    \\fbox               : (txt) ->\n        @framebox undefined, undefined, undefined, txt\n\n    \\framebox           : (vec, width, pos, txt) ->\n        if vec\n            # picture version TODO\n            @g.error \"expected \\\\framebox(width,height)[position]{text} but got two optional arguments!\" if width and pos\n        else\n            # normal framebox\n            # add the frame if it is a simple node, otherwise create a new box\n            if txt.hasAttribute? and not width and not pos and not @g.hasAttribute txt, \"frame\"\n                @g.addAttribute txt, \"frame\"\n                [ txt ]\n            else\n                @_box width, pos, txt, \"hbox frame\"\n\n\n\n    # helper for mbox, fbox, makebox, framebox\n    _box: (width, pos, txt, classes) ->\n        if width\n            pos = \"c\" if not pos\n\n            switch pos\n            | \"s\" => classes += \" stretch\"           # @g.error \"position 's' (stretch) is not supported for text!\"\n            | \"c\" => classes += \" clap\"\n            | \"l\" => classes += \" rlap\"\n            | \"r\" => classes += \" llap\"\n            |  _  => @g.error \"unknown position: #{pos}\"\n\n        content = @g.create @g.inline, txt\n        box = @g.create @g.inline, content, classes\n\n        if width\n            box.setAttribute \"style\", \"width:#{width.value}\"\n\n        [ box ]\n\n\n\n    # \\raisebox{distance}[height][depth]{text}\n\n    # \\rule[raise]{width}{height}\n\n\n    # \\newsavebox{\\name}\n    # \\savebox{\\boxcmd}[width][pos]{text}\n    # \\sbox{\\boxcmd}{text}\n    # \\usebox{\\boxcmd}\n\n    # \\begin{lrbox}{\\boxcmd}\n    #   text\n    # \\end{lrbox}\n\n\n\n    ### parboxes\n\n    # \\parbox[pos][height][inner-pos]{width}{text}\n    #  pos: c,t,b\n    #  inner-pos: t,c,b,s (or pos if not given)\n    args.\\parbox =      <[ H i? l? i? l g ]>\n    \\parbox             : (pos, height, inner-pos, width, txt) ->\n        pos = \"c\" if not pos\n        inner-pos = pos if not inner-pos\n        classes = \"parbox\"\n        style = \"width:#{width.value};\"\n\n        if height\n            classes += \" pbh\"\n            style += \"height:#{height.value};\"\n\n        switch pos\n        | \"c\" => classes += \" p-c\"\n        | \"t\" => classes += \" p-t\"\n        | \"b\" => classes += \" p-b\"\n        |  _  => @g.error \"unknown position: #{pos}\"\n\n        switch inner-pos\n        | \"s\" => classes += \" stretch\"\n        | \"c\" => classes += \" p-cc\"\n        | \"t\" => classes += \" p-ct\"\n        | \"b\" => classes += \" p-cb\"\n        |  _  => @g.error \"unknown inner-pos: #{inner-pos}\"\n\n        content = @g.create @g.inline, txt\n        box = @g.create @g.inline, content, classes\n\n        box.setAttribute \"style\", style\n\n        [ box ]\n\n\n\n    /*\n    \\shortstack[pos]{...\\\\...\\\\...}, pos: r,l,c (horizontal alignment)\n\n\n    \\begin{minipage}[pos][height][inner-pos]{width}\n    */\n\n\n\n    ############\n    # graphics #\n    ############\n\n\n\n    ### picture environment (pspicture, calc, picture and pict2e packages)\n\n    # line thickness and arrowlength in a picture (not multiplied by \\unitlength)\n\n    args\n     ..\\thicklines =    <[ HV ]>\n     ..\\thinlines =     <[ HV ]>\n     ..\\linethickness = <[ HV l ]>\n     ..\\arrowlength =   <[ HV l ]>\n\n    \\thinlines          :!->        @g.setLength \\@wholewidth new @g.Length 0.4, \"pt\"\n    \\thicklines         :!->        @g.setLength \\@wholewidth new @g.Length 0.8, \"pt\"\n    \\linethickness      : (l) !->\n        @g.error \"relative units for \\\\linethickness not supported!\" if l.unit != \"sp\"\n        @g.setLength \\@wholewidth l\n\n    \\arrowlength        : (l) !->   @g.setLength \\@arrowlength l\n\n    \\maxovalrad         :-> \"20pt\"\n\n    \\qbeziermax         :-> 500\n\n\n    # frames\n\n    # \\dashbox{dashlen}(width,height)[pos]{text}\n    args.\\dashbox =     <[ H cl v i? g ]>\n\n    # \\frame{text} - frame without padding, linewidth given by picture linethickness\n    args.\\frame =       <[ H hg ]>\n    \\frame              : (txt) ->\n        el = @g.create @g.inline, txt, \"hbox pframe\"\n        w = @g.length \\@wholewidth\n        el.setAttribute \"style\" \"border-width:#{w.value}\"\n        [ el ]\n\n\n    ## picture commands\n\n    # these commands create a box with width 0 and height abs(y) + height of {obj} if y positive\n\n    # \\put(x,y){obj}\n    args.\\put =         <[ H v g is ]>\n    \\put                : (v, obj) ->\n        wrapper = @g.create @g.inline, obj, \"put-obj\"\n\n        if v.y.cmp(@g.Length.zero) >= 0\n            # TODO: CSS: this case should align the text (put-obj) on baseline... otherwise, strut is too high\n            #       (see mixing math, text and lines unit test)\n            wrapper.setAttribute \"style\", \"left:#{v.x.value}\"\n            # only add the strut if y > 0\n            if v.y.cmp(@g.Length.zero) > 0\n                strut = @g.create @g.inline, undefined, \"strut\"\n                strut.setAttribute \"style\", \"height:#{v.y.value}\"\n        else\n            wrapper.setAttribute \"style\", \"left:#{v.x.value};bottom:#{v.y.value}\"\n\n        @rlap @g.create @g.inline, [wrapper, strut], \"picture\"\n\n\n    # \\multiput(x,y)(delta_x,delta_y){n}{obj}\n    args.\\multiput =    <[ H v v n g ]>\n    \\multiput           : (v, dv, n, obj) ->\n        res = []\n        for i til n\n            res = res ++ @\\put v.add(dv.mul i), obj.cloneNode true\n\n        res\n\n\n    # \\qbezier[N](x1, y1)(x, y)(x2, y2)\n    args.\\qbezier =     <[ H n? v v v ]>\n    \\qbezier            : (N, v1, v, v2) ->\n        # for path, v MUST be unitless - so v is always in user coordinate system, or relative\n        # (and just to be safe, set size = viewbox in @_path)\n        [ @_path \"M#{v1.x.pxpct},#{v1.y.pxpct} Q#{v.x.pxpct},#{v.y.pxpct} #{v2.x.pxpct},#{v2.y.pxpct}\", N ]\n\n\n    # \\cbezier[N](x1, y1)(x, y)(x2, y2)(x3, y3)\n    args.\\cbezier =     <[ H n? v v v v ]>\n    \\cbezier            : (N, v1, v, v2, v3) ->\n        [ @_path \"M#{v1.x.pxpct},#{v1.y.pxpct} C#{v.x.pxpct},#{v.y.pxpct} #{v2.x.pxpct},#{v2.y.pxpct} #{v3.x.pxpct},#{v3.y.pxpct}\", N ]\n\n\n    # typeset an SVG path, optionally with N+1 points instead of smooth\n    # (https://github.com/Pomax/bezierjs for calculating bezier points manually)\n    _path: (p, N) ->\n        linethickness = @g.length \\@wholewidth\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        draw = @g.SVG!.addTo svg\n\n        path = draw.path p\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   .fill 'none'\n\n        if N > 0\n            N = Math.min N, @\\qbeziermax () - 1\n\n            pw = linethickness.px                           # width of a point\n            len-section = (path.length! - (N+1)*pw) / N     # N sections for N+1 points\n            if len-section > 0\n                path.stroke { dasharray: \"#{pw} #{@g.round len-section}\" }\n\n        bbox = path.bbox!\n\n        bbox.x -= linethickness.px\n        bbox.y -= linethickness.px\n        bbox.width += linethickness.px * 2\n        bbox.height += linethickness.px * 2\n\n        # size and position\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        @g.create @g.inline, svg, \"picture\"\n\n\n\n    ## picture objects\n\n    # the boxes created by picture objects do not have a height or width\n\n    # \\circle[*]{diameter}\n    args.\\circle =      <[ H s cl ]>\n    \\circle             : (s, d) ->\n        # no negative diameters\n        d = d.abs!\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n\n        linethickness = @g.length \\@wholewidth\n\n        draw = @g.SVG!.addTo svg\n\n        # if the circle is filled, then linewidth must not influence the diameter\n        if s\n            offset = d.div(2).mul(-1).value\n\n            draw.size d.value, d.value\n                .stroke {\n                    color: \"#000\"\n                    width: \"0\"\n                }\n                .circle(d.value)\n                .cx(d.div(2).value)\n                .cy(d.div(2).value)\n                .fill(\"\")\n        else\n            # increase border by linewidth; multiply by -1 to shift left/down\n            offset = d.div(2).add(linethickness).mul(-1).value\n\n            draw.size d.add(linethickness.mul(2)).value, d.add(linethickness.mul(2)).value\n                .stroke {\n                    color: \"#000\"\n                    width: linethickness.value\n                }\n                .circle(d.value)\n                .cx(d.div(2).add(linethickness).value)\n                .cy(d.div(2).add(linethickness).value)\n                .fill(\"none\")\n\n        svg.setAttribute \"style\", \"left:#{offset};bottom:#{offset}\"\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        [ @g.create @g.inline, svg, \"picture\" ]\n\n\n    # \\line(xslope,yslope){length}\n    #   if xslope != 0 then length is horizontal, else it is vertical\n    #   if xslope == yslope == 0 then error\n    args.\\line =        <[ H v cl ]>\n    \\line               : (v, l) ->\n        [ @_line ...@_slopeLengthToCoords v, l ]\n\n\n    # \\vector(xslope,yslope){length}\n    args.\\vector =      <[ H v cl ]>\n    \\vector             : (v, l) ->\n        [ @_vector ...@_slopeLengthToCoords v, l ]\n\n\n    # \\Line(x1,y1)(x2,y2)\n    args.\\Line =        <[ H v v ]>\n    \\Line               : (vs, ve) ->\n        [ @_line vs, ve ]\n\n\n    # extension - not in LaTeX (pict2e)\n    # \\Vector(x1,y1)(x2,y2)\n    args.\\Vector =      <[ H v v ]>\n    \\Vector             : (vs, ve) ->\n        [ @_vector vs, ve ]\n\n\n    # convert slope/length pair to a vector (x/y coordinates)\n    _slopeLengthToCoords: (v, l) ->\n        @g.error \"illegal slope (0,0)\" if v.x.value == v.y.value == 0\n        @g.error \"relative units not allowed for slope\" if v.x.unit != v.y.unit or v.x.unit != \"sp\"\n\n        linethickness = @g.length \\@wholewidth\n\n        zero = new @g.Length 0, l.unit\n\n        if v.x.px == 0\n            x = zero\n            y = l\n        else\n            x = l\n            y = x.mul Math.abs(v.y.ratio(v.x))\n\n        if v.x.cmp(zero) < 0\n            x = x.mul -1\n        if v.y.cmp(zero) < 0\n            y = y.mul -1\n\n        [ new Vector(zero, zero), new Vector(x, y) ]\n\n\n    # helper: draw line from vs to ve\n    # TODO: if vs is negative and ve positive, style/size/viewbox needs to be adapted!\n    _line: (vs, ve) ->\n        # TODO: em/ex should be supported!\n        @g.error \"relative units not allowed for line\" if vs.x.unit != vs.y.unit or vs.x.unit != \"sp\"\n        @g.error \"relative units not allowed for line\" if ve.x.unit != ve.y.unit or ve.x.unit != \"sp\"\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        draw = @g.SVG!.addTo svg\n\n        linethickness = @g.length \\@wholewidth\n        bbox = draw.line(vs.x.px, vs.y.px, ve.x.px, ve.y.px)\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   .bbox!\n\n        bbox.x -= linethickness.px\n        bbox.y -= linethickness.px\n        bbox.width += linethickness.px * 2\n        bbox.height += linethickness.px * 2\n\n        if bbox.x > 0 or bbox.y > 0\n            console.error \"line: bbox.x/y > 0!!\", bbox.x, bbox.y\n\n        # size and position\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        @g.create @g.inline, svg, \"picture\"\n\n\n    # helper: draw arrow from vs to ve\n    _vector: (vs, ve) ->\n        # TODO: vs not implemented! always 0\n        # TODO: em/ex should be supported!\n        @g.error \"relative units not allowed for vector\" if vs.x.unit != vs.y.unit or vs.x.unit != \"sp\"\n        @g.error \"relative units not allowed for vector\" if ve.x.unit != ve.y.unit or ve.x.unit != \"sp\"\n\n        linethickness = @g.length \\@wholewidth\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        draw = @g.SVG!\n\n        # arrow head length and width\n        hl = 6.5\n        hw = 3.9\n\n        # if the linethickness is less than 0.6pt, don't shrink the arrow head any further\n        max = new @g.Length 0.6, \"pt\"\n\n        if linethickness.cmp(max) < 0\n            hl = @g.round(hl * max.ratio linethickness)\n            hw = @g.round(hw * max.ratio linethickness)\n\n        hhl = linethickness.mul(hl/2)       # half the head length (the marker scales with stroke width)\n        al = ve.sub(vs).norm!               # arrow length\n\n        # if arrow head is longer than the arrow, shift start of the arrow\n        if al.cmp(hhl) < 0\n            s = ve.shift_start hhl\n        else\n            s = new Vector @g.Length.zero, @g.Length.zero\n\n        # shorten vector by half the arrow head length\n        ve = ve.shift_end hhl.mul -1\n\n        bbox = draw.line(s.x.px, s.y.px, ve.x.px, ve.y.px)\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   # marker width and height\n                   .marker 'end', hl, hw, (marker) ~>\n                        marker.path \"M0,0 \\\n                                     Q#{@g.round(2*hl/3)},#{@g.round(hw/2)} #{hl},#{@g.round(hw/2)} \\\n                                     Q#{@g.round(2*hl/3)},#{@g.round(hw/2)} 0,#{hw} \\\n                                     z\" #.fill \"\"\n                   .bbox!\n\n        bbox.x -= linethickness.px + hhl.px\n        bbox.y -= linethickness.px + hhl.px\n        bbox.width += linethickness.px + hhl.px * 2\n        bbox.height += linethickness.px + hhl.px * 2\n\n        if bbox.x > 0 or bbox.y > 0\n            console.error \"vector: bbox.x/y > 0!!\", bbox.x, bbox.y\n\n        # size and position\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        draw.addTo svg\n        @g.create @g.inline, svg, \"picture\"\n\n\n\n    # \\oval[radius](width,height)[portion]\n    #   uses circular arcs of radius min(radius, width/2, height/2)\n    args.\\oval =        <[ H cl? v i? ]>\n    \\oval               : (maxrad, size, part) ->\n        linethickness = @g.length \\@wholewidth\n\n        if not maxrad\n            maxrad = new @g.Length 20, \"px\" # TODO: use \\maxovalrad, parse the length (if unitless, multiply with \\unitlength)\n\n        if not part\n            part = \"\"\n\n        # determine radius\n        if size.x.cmp(size.y) < 0\n            rad = size.x.div 2\n        else\n            rad = size.y.div 2\n\n        if maxrad.cmp(rad) < 0\n            rad = maxrad\n\n        draw = @g.SVG!\n        oval = draw.rect size.x.value, size.y.value\n                   .radius rad.value\n                   .move size.x.div(-2).value, size.y.div(-2).value\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   .fill \"none\"\n\n\n        # initial rect\n        rect =\n            x: size.x.div(-2).sub linethickness\n            y: size.y.div(-2).sub linethickness\n            w: size.x.add linethickness.mul 2\n            h: size.y.add linethickness.mul 2\n\n\n        if part.includes 'l'\n            rect = @_intersect rect,\n                x: size.x.div(-2).sub linethickness\n                y: size.y.div(-2).sub linethickness\n                w: size.x.div(2).add linethickness\n                h: size.y.add linethickness.mul 2\n\n\n        if part.includes 't'\n            rect = @_intersect rect,\n                x: size.x.div(-2).sub linethickness\n                y: size.y.div(-2).sub linethickness\n                w: size.x.add linethickness.mul 2\n                h: size.y.div(2).add linethickness\n\n\n        if part.includes 'r'\n            rect = @_intersect rect,\n                x: @g.Length.zero\n                y: size.y.div(-2).sub linethickness\n                w: size.x.div(2).add linethickness\n                h: size.y.add linethickness.mul 2\n\n\n        if part.includes 'b'\n            rect = @_intersect rect,\n                x: size.x.div(-2).sub linethickness\n                y: @g.Length.zero\n                w: size.x.add linethickness.mul 2\n                h: size.y.div(2).add linethickness\n\n\n        bbox = oval.bbox!\n\n        bbox.x -= linethickness.px\n        bbox.y -= linethickness.px\n        bbox.width += linethickness.px * 2\n        bbox.height += linethickness.px * 2\n\n        if bbox.x > 0 or bbox.y > 0\n            console.error \"oval: bbox.x/y > 0!!\", bbox.x, bbox.y\n\n\n        clip = draw.clip!.add (draw.rect rect.w.value, rect.h.value\n                                   .move rect.x.value, rect.y.value)\n        clip.flip 'y', 0\n\n        oval.clipWith clip\n\n        # size and position\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        draw.addTo svg\n\n        [ @g.create @g.inline, svg, \"picture\" ]\n\n\n    # return a new rectangle that is the result of intersecting the given two rectangles\n    _intersect: (r1, r2) ->\n        x: @g.Length.max(r1.x, r2.x)\n        y: @g.Length.max(r1.y, r2.y)\n        w: @g.Length.max(@g.Length.zero, @g.Length.min(r1.x.add(r1.w), r2.x.add(r2.w)).sub @g.Length.max(r1.x, r2.x))\n        h: @g.Length.max(@g.Length.zero, @g.Length.min(r1.y.add(r1.h), r2.y.add(r2.h)).sub @g.Length.max(r1.y, r2.y))\n\n\n    ####################\n    # lengths (scoped) #\n    ####################\n\n\n    args.\\newlength =   <[ HV m ]>\n    \\newlength          : (id) !-> @g.newLength id\n\n    args.\\setlength =   <[ HV m l ]>\n    \\setlength          : (id, l) !-> @g.setLength id, l\n\n    args.\\addtolength = <[ HV m l ]>\n    \\addtolength        : (id, l) !-> @g.setLength id, @g.length(id).add l\n\n\n    # settoheight     =\n    # settowidth      =\n    # settodepth      =\n\n\n    # get the natural size of a box\n    # width           =\n    # height          =\n    # depth           =\n    # totalheight     =\n\n\n\n    ##################################\n    # LaTeX counters (always global) #\n    ##################################\n\n\n    # \\newcounter{counter}[parent]\n    args.\\newcounter =  <[ HV i i? ]>\n    \\newcounter         : (c, p) !-> @g.newCounter c, p\n\n\n    # \\stepcounter{counter}\n    args.\\stepcounter = <[ HV i ]>\n    \\stepcounter        : (c) !-> @g.stepCounter c\n\n\n    # \\addtocounter{counter}{<expression>}\n    args.\\addtocounter = <[ HV i n ]>\n    \\addtocounter       : (c, n) !-> @g.setCounter c, @g.counter(c) + n\n\n\n    # \\setcounter{counter}{<expression>}\n    args.\\setcounter =  <[ HV i n ]>\n    \\setcounter         : (c, n) !-> @g.setCounter c, n\n\n\n    # \\refstepcounter{counter}\n    #       \\stepcounter{counter}, and (locally) define \\@currentlabel so that the next \\label\n    #       will reference the correct current representation of the value; return an empty node\n    #       for an <a href=...> target\n    args.\\refstepcounter = <[ H i ]>\n    \\refstepcounter     : (c) -> @g.stepCounter c; return [ @g.refCounter c ]\n\n\n    # formatting counters\n\n    args\n     ..\\alph =          \\\n     ..\\Alph =          \\\n     ..\\arabic =        \\\n     ..\\roman =         \\\n     ..\\Roman =         \\\n     ..\\fnsymbol =      <[ H i ]>\n\n    \\alph               : (c) -> [ @g[\\alph]     @g.counter c ]\n    \\Alph               : (c) -> [ @g[\\Alph]     @g.counter c ]\n    \\arabic             : (c) -> [ @g[\\arabic]   @g.counter c ]\n    \\roman              : (c) -> [ @g[\\roman]    @g.counter c ]\n    \\Roman              : (c) -> [ @g[\\Roman]    @g.counter c ]\n    \\fnsymbol           : (c) -> [ @g[\\fnsymbol] @g.counter c ]\n\n\n\n    ## not yet...\n\n    args.\\input =       <[ V g ]>\n    \\input              : (file) ->\n\n    args.\\include =     <[ V g ]>\n    \\include            : (file) ->\n\n\n    ############\n    # preamble #\n    ############\n\n    args.\\documentclass =  <[ P kv? k k? ]>\n    \\documentclass      : (options, documentclass, version) !->\n        @\\documentclass = !-> @g.error \"Two \\\\documentclass commands. The document may only declare one class.\"\n\n        # load and instantiate the documentclass\n        Class = builtin-documentclasses[documentclass]\n\n        if not Class\n            try\n                Export = require \"./documentclasses/#{documentclass}\"\n                Class := Export.default || Export[Object.getOwnPropertyNames(Export).0]\n            catch e\n                console.error \"error loading documentclass \\\"#{documentclass}\\\": #{e}\"\n                throw new Error \"error loading documentclass \\\"#{documentclass}\\\"\"\n\n        @g.documentClass = new Class @g, options\n        assignIn this, @g.documentClass\n        assign args, Class.args\n\n\n    args.\\usepackage    =  <[ P kv? csv k? ]>\n    \\usepackage         : (opts, packages, version) !->\n        options = Object.assign {}, @g.documentClass.options, opts\n\n        for pkg in packages\n            continue if providedPackages.includes pkg\n\n            # load and instantiate the package\n            Package = builtin-packages[pkg]\n\n            try\n                if not Package\n                    Export = require \"./packages/#{pkg}\"\n                    Package := Export.default || Export[Object.getOwnPropertyNames(Export).0]\n\n                assignIn this, new Package @g, options\n                assign args, Package.args\n                Package.symbols?.forEach (value, key) -> symbols.set key, value\n            catch e\n                # log error but continue anyway\n                console.error \"error loading package \\\"#{pkg}\\\": #{e}\"\n\n\n    args.\\includeonly   = <[ P csv ]>\n    \\includeonly        : (filelist) !->\n\n\n    args.\\makeatletter  = <[ P ]>\n    \\makeatletter       :!->\n\n    args.\\makeatother   = <[ P ]>\n    \\makeatother        :!->\n\n\n\n\n    ###########\n    # ignored #\n    ###########\n\n    args\n     ..\\pagestyle =     <[ HV i ]>\n    \\pagestyle          : (s) !->\n\n\n    args\n     ..\\linebreak =     <[ HV n? ]>\n     ..\\nolinebreak =   <[ HV n? ]>\n     ..\\fussy =         <[ HV ]>\n     ..\\sloppy =        <[ HV ]>\n\n\n    \\linebreak          : (o) !->\n    \\nolinebreak        : (o) !->\n\n    \\fussy              :!->\n    \\sloppy             :!->\n\n    # these make no sense without pagebreaks\n\n    args\n     ..\\pagebreak =     <[ HV n? ]>\n     ..\\nopagebreak =   <[ HV n? ]>\n     ..\\samepage =      <[ HV ]>\n     ..\\enlargethispage = <[ HV s l ]>\n     ..\\newpage =       <[ HV ]>\n     ..\\clearpage =     <[ HV ]>\n     ..\\cleardoublepage = <[ HV ]>\n     ..\\vfill =         <[ HV ]>\n     ..\\thispagestyle = <[ HV i ]>\n\n    \\pagebreak          : (o) !->\n    \\nopagebreak        : (o) !->\n    \\samepage           :!->\n    \\enlargethispage    : (s, l) !->\n    \\newpage            :!->\n    \\clearpage          :!->    # prints floats in LaTeX\n    \\cleardoublepage    :!->\n    \\vfill              :!->\n    \\thispagestyle      : (s) !->\n", "import\n    './latex.ltx': { LaTeX }\n    './symbols': { diacritics, symbols }\n    './types': { makeLengthClass }\n\nMacros = LaTeX\n\nObject.defineProperty Array.prototype, 'top',\n    enumerable: false\n    configurable: true\n    get: -> @[* - 1]\n    set: (v) !-> @[* - 1] = v\n\n\nexport class Generator\n\n    ### public instance vars (vars beginning with \"_\" are meant to be private!)\n\n    documentClass: null     # name of the default document class until \\documentclass{}, then the actual class instance\n    documentTitle: null\n\n    # initialize only in CTOR, otherwise the objects end up in the prototype\n    _options: null\n    _macros: null\n\n    _stack: null\n    _groups: null\n\n    _continue: false\n\n    _labels: null\n    _refs: null\n\n    _counters: null\n    _resets: null\n\n    _marginpars: null\n\n    Length: null\n\n    reset: !->\n        @Length = makeLengthClass @\n\n        @documentClass = @_options.documentClass\n        @documentTitle = \"untitled\"\n\n        @_uid = 1\n\n        @_macros = {}\n        @_curArgs = []  # stack of argument declarations\n\n        # stack for local variables and attributes - entering a group adds another entry,\n        # leaving a group removes the top entry\n        @_stack = [\n            attrs: {}\n            align: null\n            currentlabel:\n                id: \"\"\n                label: document.createTextNode \"\"\n            lengths: new Map()\n        ]\n\n        # grouping stack, keeps track of difference between opening and closing brackets\n        @_groups = [ 0 ]\n\n        @_labels = new Map()\n        @_refs = new Map()\n\n        @_marginpars = []\n\n        @_counters = new Map()\n        @_resets = new Map()\n\n        @_continue = false\n\n        @newCounter \\enumi\n        @newCounter \\enumii\n        @newCounter \\enumiii\n        @newCounter \\enumiv\n\n        # do this after creating the sectioning counters because \\thepart etc. are already predefined\n        @_macros = new Macros @, @_options.CustomMacros\n\n\n    # helpers\n\n    nextId: ->\n        @_uid++\n\n    round: (num) ->\n        const factor = Math.pow 10, @_options.precision\n        Math.round(num * factor) / factor\n\n\n\n    # private static for easy access - but it means no parallel generator usage!\n    error = (e) !->\n        console.error e\n        throw new Error e\n\n    error: (e) !-> error e\n\n    setErrorFn: (e) !->\n        error := e\n\n\n    location: !-> error \"location function not set!\"\n\n\n\n    # set the title of the document, usually called by the \\maketitle macro\n    setTitle: (title) ->\n        @documentTitle = title.textContent\n\n\n\n    ### characters\n\n    hasSymbol: (name) ->\n        Macros.symbols.has name\n\n    symbol: (name) ->\n        @error \"no such symbol: #{name}\" if not @hasSymbol name\n        Macros.symbols.get name\n\n\n\n    ### macros\n\n    hasMacro: (name) ->\n        typeof @_macros[name] == \"function\"\n        and name !== \"constructor\"\n        and (@_macros.hasOwnProperty name or Macros.prototype.hasOwnProperty name)\n\n\n    isHmode:    (marco) -> Macros.args[marco]?.0 == \\H  or not Macros.args[marco]\n    isVmode:    (marco) -> Macros.args[marco]?.0 == \\V\n    isHVmode:   (marco) -> Macros.args[marco]?.0 == \\HV\n    isPreamble: (marco) -> Macros.args[marco]?.0 == \\P\n\n    macro: (name, args) ->\n        if symbols.has name\n            return [ @createText symbols.get name ]\n\n        @_macros[name]\n            .apply @_macros, args\n            ?.filter (x) -> x !~= undefined\n            .map (x) ~> if typeof x == 'string' or x instanceof String then @createText x else @addAttributes x\n\n\n    # macro arguments\n\n    beginArgs: (macro) !->\n        @_curArgs.push if Macros.args[macro]\n            then {\n                name: macro\n                args: that.slice(1)\n                parsed: []\n            } else {\n                args: []\n                parsed: []\n            }\n\n    # if next char matches the next arg of a branch, choose that branch\n    # return true if there was a matched branch, false otherwise\n    selectArgsBranch: (nextChar) ->\n        optArgs = <[ o? i? k? kv? n? l? c-ml? cl? ]>\n\n        if Array.isArray @_curArgs.top.args.0\n            # check which alternative branch to choose, discard the others only if it was a match\n            branches = @_curArgs.top.args.0\n            for b in branches\n                if (nextChar == '[' and b.0 in optArgs) or (nextChar == '{' and b.0 not in optArgs)\n                    @_curArgs.top.args.shift!           # remove all branches\n                    @_curArgs.top.args.unshift ...b     # prepend remaining args\n\n                    return true\n\n\n    # check the next argument type to parse, returns true if arg is the next expected argument\n    # if the next expected argument is an array, it is treated as a list of alternative next arguments\n    nextArg: (arg) ->\n        if @_curArgs.top.args.0 == arg\n            @_curArgs.top.args.shift!\n            true\n\n    argError: (m) ->\n        error \"macro \\\\#{@_curArgs.top.name}: #{m}\"\n\n    # add the result of a parsed argument\n    addParsedArg: (a) !->\n        @_curArgs.top.parsed.push a\n\n    # get the parsed arguments so far\n    parsedArgs: ->\n        @_curArgs.top.parsed\n\n    # execute macro with parsed arguments so far\n    preExecMacro: !->\n        @macro @_curArgs.top.name, @parsedArgs!\n\n    # remove arguments of a completely parsed macro from the stack\n    endArgs: !->\n        @_curArgs.pop!\n            ..args.length == 0 || error \"grammar error: arguments for #{..name} have not been parsed: #{..args}\"\n            return ..parsed\n\n\n    ### environments\n\n    begin: (env_id) !->\n        if not @hasMacro env_id\n            error \"unknown environment: #{env_id}\"\n\n        @startBalanced!\n        @enterGroup!\n        @beginArgs env_id\n\n\n    end: (id, end_id) ->\n        if id != end_id\n            error \"environment '#{id}' is missing its end, found '#{end_id}' instead\"\n\n        if @hasMacro \"end\" + id\n            end = @macro \"end\" + id\n\n        @exitGroup!\n        @isBalanced! or error \"#{id}: groups need to be balanced in environments!\"\n        @endBalanced!\n\n        end\n\n\n\n    ### groups\n\n    # start a new group\n    enterGroup: (copyAttrs = false) !->\n        # shallow copy of the contents of top is enough because we don't change the elements, only the array and the maps\n        @_stack.push {\n            attrs: if copyAttrs then Object.assign {}, @_stack.top.attrs else {}\n            align: null                                                 # alignment is set only per level where it was changed\n            currentlabel: Object.assign {}, @_stack.top.currentlabel\n            lengths: new Map(@_stack.top.lengths)\n        }\n        ++@_groups.top\n\n    # end the last group - throws if there was no group to end\n    exitGroup: !->\n        --@_groups.top >= 0 || error \"there is no group to end here\"\n        @_stack.pop!\n\n    # start a new level of grouping\n    startBalanced: !->\n        @_groups.push 0\n\n    # exit a level of grouping and return the levels of balancing still left\n    endBalanced: ->\n        @_groups.pop!\n        @_groups.length\n\n    # check if the current level of grouping is balanced\n    isBalanced: ->\n        @_groups.top == 0\n\n\n    ### attributes - in HTML, those are CSS classes\n\n    continue: !->\n        @_continue = @location!.end.offset\n\n    break: !->\n        # only record the break if it came from a position AFTER the continue\n        if @location!.end.offset > @_continue\n            @_continue = false\n\n\n    # alignment\n\n    setAlignment: (align) !->\n        @_stack.top.align = align\n\n    alignment: ->\n        @_stack.top.align\n\n\n    # font attributes\n\n    setFontFamily: (family) !->\n        @_stack.top.attrs.fontFamily = family\n\n    setFontWeight: (weight) !->\n        @_stack.top.attrs.fontWeight = weight\n\n    setFontShape: (shape) !->\n        if shape == \"em\"\n            if @_activeAttributeValue(\"fontShape\") == \"it\"\n                shape = \"up\"\n            else\n                shape = \"it\"\n\n        @_stack.top.attrs.fontShape = shape\n\n    setFontSize: (size) !->\n        @_stack.top.attrs.fontSize = size\n\n    setTextDecoration: (decoration) !->\n        @_stack.top.attrs.textDecoration = decoration\n\n\n    # get all inline attributes of the current group\n    _inlineAttributes: ->\n        cur = @_stack.top.attrs\n        [cur.fontFamily, cur.fontWeight, cur.fontShape, cur.fontSize, cur.textDecoration].join(' ').replace(/\\s+/g, ' ').trim!\n\n    # get the currently active value for a specific attribute, also taking into account inheritance from parent groups\n    # return the empty string if the attribute was never set\n    _activeAttributeValue: (attr) ->\n        # from top to bottom until the first value is found\n        for level from @_stack.length-1 to 0 by -1\n            if @_stack[level].attrs[attr]\n                return that\n\n\n\n\n    ### sectioning\n\n    startsection: (sec, level, star, toc, ttl) ->\n        # call before the arguments are parsed to refstep the counter\n        if toc ~= ttl ~= undefined\n            if not star and @counter(\"secnumdepth\") >= level\n                @stepCounter sec\n                @refCounter sec, \"sec-\" + @nextId!\n\n            return\n\n        # number the section?\n        if not star and @counter(\"secnumdepth\") >= level\n            if sec == \\chapter\n                chaphead = @create @block, @macro(\\chaptername) ++ (@createText @symbol \\space) ++ @macro(\\the + sec)\n                el = @create @[sec], [chaphead, ttl]\n            else\n                el = @create @[sec], @macro(\\the + sec) ++ (@createText @symbol \\quad) ++ ttl   # in LaTeX: \\@seccntformat\n\n            # take the id from currentlabel.id\n            el.id? = @_stack.top.currentlabel.id\n        else\n            el = @create @[sec], ttl\n\n        # entry in the TOC required?\n        # if not star and @counter(\"tocdepth\")\n        #     TODO\n\n        el\n\n    ### lists\n\n    startlist: ->\n        @stepCounter \\@listdepth\n        if @counter(\\@listdepth) > 6\n            error \"too deeply nested\"\n\n        true\n\n    endlist: !->\n        @setCounter \\@listdepth, @counter(\\@listdepth) - 1\n        @continue!\n\n\n\n    ### lengths\n\n\n    newLength: (l) !->\n        error \"length #{l} already defined!\" if @hasLength l\n        @_stack.top.lengths.set l, @Length.zero\n\n    hasLength: (l) ->\n        @_stack.top.lengths.has l\n\n    setLength: (id, length) !->\n        error \"no such length: #{id}\" if not @hasLength id\n        # console.log \"set length:\", id, length\n        @_stack.top.lengths.set id, length\n\n    length: (l) ->\n        error \"no such length: #{l}\" if not @hasLength l\n        # console.log \"get length: #{l} -> #{}\"\n        @_stack.top.lengths.get l\n\n    theLength: (id) ->\n        l = @create @inline, undefined, \"the\"\n        l.setAttribute \"display-var\", id\n        l\n\n\n\n\n\n    ### LaTeX counters (global)\n\n    newCounter: (c, parent) !->\n        error \"counter #{c} already defined!\" if @hasCounter c\n\n        @_counters.set c, 0\n        @_resets.set c, []\n\n        if parent\n            @addToReset c, parent\n\n        error \"macro \\\\the#{c} already defined!\" if @hasMacro(\\the + c)\n        @_macros[\\the + c] = -> [ @g.arabic @g.counter c ]\n\n\n    hasCounter: (c) ->\n        @_counters.has c\n\n    setCounter: (c, v) !->\n        error \"no such counter: #{c}\" if not @hasCounter c\n        @_counters.set c, v\n\n    stepCounter: (c) !->\n        @setCounter c, @counter(c) + 1\n        @clearCounter c\n\n    counter: (c) ->\n        error \"no such counter: #{c}\" if not @hasCounter c\n        @_counters.get c\n\n    refCounter: (c, id) ->\n        # currentlabel is local, the counter is global\n        # we need to store the id of the element as well as the counter (\\@currentlabel)\n        # if no id is given, create a new element to link to\n        if not id\n            id = c + \"-\" + @nextId!\n            el = @create @anchor id\n\n        # currentlabel stores the id of the anchor to link to, as well as the label to display in a \\ref{}\n        @_stack.top.currentlabel =\n            id: id\n            label: @createFragment [\n                ...if @hasMacro(\\p@ + c) then @macro(\\p@ + c) else []\n                ...@macro(\\the + c)\n            ]\n\n        return el\n\n\n    addToReset: (c, parent) !->\n        error \"no such counter: #{parent}\" if not @hasCounter parent\n        error \"no such counter: #{c}\" if not @hasCounter c\n        @_resets.get parent .push c\n\n    # reset all descendants of c to 0\n    clearCounter: (c) !->\n        for r in @_resets.get c\n            @clearCounter r\n            @setCounter r, 0\n\n\n    # formatting counters\n\n    alph: (num) -> String.fromCharCode(96 + num)\n\n    Alph: (num) -> String.fromCharCode(64 + num)\n\n    arabic: (num) -> String(num)\n\n    roman: (num) ->\n        lookup =\n            * \\m,  1000\n            * \\cm, 900\n            * \\d,  500\n            * \\cd, 400\n            * \\c,  100\n            * \\xc, 90\n            * \\l,  50\n            * \\xl, 40\n            * \\x,  10\n            * \\ix, 9\n            * \\v,  5\n            * \\iv, 4\n            * \\i,  1\n\n        _roman num, lookup\n\n    Roman: (num) ->\n        lookup =\n            * \\M,  1000\n            * \\CM, 900\n            * \\D,  500\n            * \\CD, 400\n            * \\C,  100\n            * \\XC, 90\n            * \\L,  50\n            * \\XL, 40\n            * \\X,  10\n            * \\IX, 9\n            * \\V,  5\n            * \\IV, 4\n            * \\I,  1\n\n        _roman num, lookup\n\n\n    _roman = (num, lookup) ->\n        roman = \"\"\n\n        for i in lookup\n            while num >= i[1]\n                roman += i[0]\n                num -= i[1]\n\n        return roman\n\n    fnsymbol: (num) ->\n        switch num\n        |   1   => @symbol \\textasteriskcentered\n        |   2   => @symbol \\textdagger\n        |   3   => @symbol \\textdaggerdbl\n        |   4   => @symbol \\textsection\n        |   5   => @symbol \\textparagraph\n        |   6   => @symbol \\textbardbl\n        |   7   => @symbol(\\textasteriskcentered) + @symbol \\textasteriskcentered\n        |   8   => @symbol(\\textdagger) + @symbol \\textdagger\n        |   9   => @symbol(\\textdaggerdbl) + @symbol \\textdaggerdbl\n        |   _   => error \"fnsymbol value must be between 1 and 9\"\n\n\n    ### label, ref\n\n    # labels are possible for: parts, chapters, all sections, \\items, footnotes, minipage-footnotes, tables, figures\n    setLabel: (label) !->\n        error \"label #{label} already defined!\" if @_labels.has label\n\n        if not @_stack.top.currentlabel.id\n            console.warn \"warning: no \\\\@currentlabel available for label #{label}!\"\n\n        @_labels.set label, @_stack.top.currentlabel\n\n        # fill forward references\n        if @_refs.has label\n            for r in @_refs.get label\n                while r.firstChild\n                    r.removeChild r.firstChild\n\n                r.appendChild @_stack.top.currentlabel.label.cloneNode true\n                r.setAttribute \"href\", \"#\" + @_stack.top.currentlabel.id\n\n            @_refs.delete label\n\n    # keep a reference to each ref element if no label is known yet, then as we go along, fill it with labels\n    ref: (label) ->\n        # href is the element id, content is \\the<counter>\n        if @_labels.get label\n            return @create @link(\"#\" + that.id), that.label.cloneNode true\n\n        el = @create (@link \"#\"), @createText \"??\"\n\n        if not @_refs.has label\n            @_refs.set label, [el]\n        else\n            @_refs.get label .push el\n\n        el\n\n\n    logUndefinedRefs: !->\n        return if @_refs.size == 0\n\n        keys = @_refs.keys!\n        while not (ref = keys.next!).done\n            console.warn \"warning: reference '#{ref.value}' undefined\"\n\n        console.warn \"There were undefined references.\"\n\n\n    ### marginpar\n\n    marginpar: (txt) ->\n        id = @nextId!\n\n        marginPar = @create @block, [@create(@inline, null, \"mpbaseline\"), txt]\n        marginPar.id = id\n\n        @_marginpars.push marginPar\n\n        marginRef = @create @inline, null, \"mpbaseline\"\n        marginRef.id = \"marginref-\" + id\n\n        marginRef\n", "var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n", "const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n", "// Map function\r\nexport function map (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to dash separated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\n/**\r\n * This function adds support for string origins.\r\n * It searches for an origin in o.origin o.ox and o.originX.\r\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\r\n**/\r\nexport function getOrigin (o, element) {\r\n  const origin = o.origin\r\n  // First check if origin is in ox or originX\r\n  let ox = o.ox != null\n    ? o.ox\r\n    : o.originX != null\n      ? o.originX\r\n      : 'center'\r\n  let oy = o.oy != null\n    ? o.oy\r\n    : o.originY != null\n      ? o.originY\r\n      : 'center'\r\n\r\n  // Then check if origin was used and overwrite in that case\r\n  if (origin != null) {\r\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\r\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\r\n        : [ origin, origin ]\r\n  }\r\n\r\n  // Make sure to only call bbox when actually needed\r\n  const condX = typeof ox === 'string'\r\n  const condY = typeof oy === 'string'\r\n  if (condX || condY) {\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // And only overwrite if string was passed for this specific axis\r\n    if (condX) {\r\n      ox = ox.includes('left')\n        ? x\r\n        : ox.includes('right')\n          ? x + width\r\n          : x + width / 2\r\n    }\r\n\r\n    if (condY) {\r\n      oy = oy.includes('top')\n        ? y\r\n        : oy.includes('bottom')\n          ? y + height\r\n          : y + height / 2\r\n    }\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n", "// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n", "export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n", "export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n", "import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesnt have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n", "import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the current position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.add(this.remove(), i + 1)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  p.add(this.remove(), i ? i - 1 : 0)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  const p = this.parent()\r\n\r\n  // Move node forward\r\n  p.add(this.remove())\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  const p = this.parent()\r\n\r\n  // Move node back\r\n  p.add(this.remove(), 0)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n", "// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// Test for path letter\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n", "\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\r\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  // Test if given value is a color\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\n\n  /*\r\n  Generating random colors\r\n  */\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    } else {\r\n\r\n      throw new Error('Unsupported random color mode')\r\n\r\n    }\r\n  }\n\n  // Test if given value is a color string\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\n\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\n\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey\n      ? 0\r\n      : l > 0.5\n        ? delta / (2 - max - min)\r\n        : delta / (max + min)\r\n    const h = isGrey\n      ? 0\r\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n        : max === g\n          ? ((b - r) / delta + 2) / 6\r\n          : max === b\n            ? ((r - g) / delta + 4) / 6\r\n            : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\r\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\r\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\r\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\r\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\r\n                : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\n\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\n\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\n\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\n\n  toString () {\r\n    return this.toHex()\r\n  }\n\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n}\r\n", "import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  const attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    const array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n", "import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties as array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[name] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n", "import { registerMethods } from '../../utils/methods.js'\r\nimport { filter, map } from '../../utils/utils.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (a == null) {\r\n    // get an object of attributes\r\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\r\n  } else if (a instanceof Array) {\r\n    const data = {}\r\n    for (const key of a) {\r\n      data[key] = this.data(key)\r\n    }\r\n    return data\r\n  } else if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null\n        ? null\r\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\r\n          : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n", "import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (const key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (let i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n", "import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Clone point\n  clone () {\r\n    return new Point(this)\r\n  }\n\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\r\n        : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\n\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    const flipBoth = o.flip === 'both' || o.flip === true\r\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewX)\n          ? o.skewX\r\n          : 0\r\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewY)\n          ? o.skewY\r\n          : 0\r\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\r\n      : isFinite(o.scale)\n        ? o.scale * flipX\r\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\r\n          : flipX\r\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\r\n      : isFinite(o.scale)\n        ? o.scale * flipY\r\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\r\n          : flipY\r\n    const shear = o.shear || 0\r\n    const theta = o.rotate || o.theta || 0\r\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    const ox = origin.x\r\n    const oy = origin.y\r\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. Thats why NaN\r\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\r\n    const px = position.x\r\n    const py = position.y\r\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    const tx = translate.x\r\n    const ty = translate.y\r\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    const rx = relative.x\r\n    const ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\n\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\n\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    const a = l.a * r.a + l.c * r.b\r\n    const b = l.b * r.a + l.d * r.b\r\n    const c = l.a * r.c + l.c * r.d\r\n    const d = l.b * r.c + l.d * r.d\r\n    const e = l.e + l.a * r.e + l.c * r.f\r\n    const f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\n\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\r\n    const dx = cx || 0\r\n    const dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\n\n  // Clones this matrix\n  clone () {\r\n    return new Matrix(this)\r\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    const determinant = a * d - b * c\r\n    const ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    const sx = ccw * Math.sqrt(a * a + b * b)\r\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    const theta = 180 / Math.PI * thetaRad\r\n    const ct = Math.cos(thetaRad)\r\n    const st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    const lam = (a * c + b * d) / determinant\r\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\r\n    if (other === this) return true\r\n    const comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\n\n  flipO (axis, around) {\r\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\r\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\n\n  // Initialize\r\n  init (source) {\r\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element\n      ? source.matrixify()\r\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\r\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\r\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\r\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\r\n                : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\n\n  // Inverses matrix\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    const det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    const na = d / det\r\n    const nb = -b / det\r\n    const nc = -c / det\r\n    const nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    const ne = -(na * e + nc * f)\r\n    const nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\n\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\n\n  lmultiplyO (matrix) {\r\n    const r = this\r\n    const l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\n\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    const l = this\r\n    const r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\n\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\n\n  // Convert matrix to string\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      const matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    const t = Matrix.formatTransforms(o)\r\n    const current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    const transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      // Doesnt work because t.px is also 0 if it wasnt passed\r\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\r\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    const rect = this.rect(1, 1)\r\n    const m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n", "import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nexport function isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nexport function domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return new Box(this)\r\n  }\r\n\r\n  init (source) {\r\n    const base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source)\n        ? source\r\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\r\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n          : arguments.length === 4\n            ? [].slice.call(arguments)\r\n            : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction getBox (el, getBBoxFn, retry) {\r\n  let box\r\n\r\n  try {\r\n    // Try to get the box with the provided function\r\n    box = getBBoxFn(el.node)\r\n\r\n    // If the box is worthless and not even in the dom, retry\r\n    // by throwing an error here...\r\n    if (isNulledBox(box) && !domContains(el.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    // ... and calling the retry handler here\r\n    box = retry(el)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  // Function to get bbox is getBBox()\r\n  const getBBox = (node) => node.getBBox()\r\n\r\n  // Take all measures so that a stupid browser renders the element\r\n  // so we can get the bbox from it when we try again\r\n  const retry = (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      // We give up...\r\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\r\n    }\r\n  }\r\n\r\n  const box = getBox(this, getBBox, retry)\r\n  const bbox = new Box(box)\r\n\r\n  return bbox\r\n}\r\n\r\nexport function rbox (el) {\r\n  const getRBox = (node) => node.getBoundingClientRect()\r\n  const retry = (el) => {\r\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\r\n    // it obviously will be at the wrong position\r\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\r\n  }\r\n\r\n  const box = getBox(this, getRBox, retry)\r\n  const rbox = new Box(box)\r\n\r\n  // If an element was passed, we want the bbox in the coordinate system of that element\r\n  if (el) {\r\n    return rbox.transform(el.screenCTM().inverseO())\r\n  }\r\n\r\n  // Else we want it in absolute screen coordinates\r\n  // Therefore we need to add the scrollOffset\r\n  return rbox.addOffset()\r\n}\r\n\r\n// Checks whether the given point is inside the bounding box\r\nexport function inside (x, y) {\r\n  const box = this.bbox()\r\n\r\n  return x > box.x\r\n    && y > box.y\r\n    && x < box.x + box.width\r\n    && y < box.y + box.height\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      // Its best to rely on the attributes here and here is why:\r\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\r\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\r\n      //                        that means, their clientRect is always as big as the content.\r\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\r\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\r\n      // getBBox: returns the bounding box of its content - that doesnt help!\r\n      let { width, height } = this.attr([ 'width', 'height' ])\r\n\r\n      // Width and height is a string when a number with a unit is present which we can't use\r\n      // So we try clientXYZ\r\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\r\n        width = this.node.clientWidth\r\n        height = this.node.clientHeight\r\n      }\r\n\r\n      // Giving up...\r\n      if (!width || !height) {\r\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\r\n      }\r\n\r\n      const v = this.viewbox()\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n\r\n      // Set the zoomAmount to the highest value which is safe to process and recover from\r\n      // The * 100 is a bit of wiggle room for the matrix transformation\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n", "import { extend } from '../utils/adopter.js'\r\n// import { subClassArray } from './ArrayPolyfill.js'\r\n\r\nclass List extends Array {\r\n  constructor (arr = [], ...args) {\r\n    super(arr, ...args)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...arr)\r\n  }\r\n}\r\n\r\n/* = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n}) */\r\n\r\nexport default List\r\n\r\nextend([ List ], {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el, i, arr) => {\r\n        return fnOrMethodName.call(el, el, i, arr)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend([ List ], methods)\r\n}\r\n", "import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n", "import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nexport const windowEvents = {}\r\n\r\nexport function getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nexport function getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nexport function clearEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n  if (n === globals.window) n = windowEvents\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  const l = listener.bind(binding || node)\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event.split('.')[0]\r\n    const ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event && event.split('.')[0]\r\n    const ns = event && event.split('.')[1]\r\n    let namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data, options) {\r\n  const n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n", "import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n", "\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\n\r\nexport default class SVGArray extends Array {\r\n  constructor (...args) {\r\n    super(...args)\r\n    this.init(...args)\r\n  }\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  }\n\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  }\r\n\r\n  // Parse whitespace separated string\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  }\n\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\n\n  toString () {\r\n    return this.join(' ')\r\n  }\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  }\r\n\r\n}\r\n", "import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit conversions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's'\n        ? this.value / 1e3\r\n        : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n", "import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null\n      ? defaults[attr]\r\n      : isNumber.test(val)\n        ? parseFloat(val)\r\n        : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { svg, html } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super()\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    // If non-root svg nodes are added we have to remove their namespaces\r\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\r\n      element.removeNamespace()\r\n    }\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent, i) {\r\n    return makeInstance(parent).put(this, i)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone (deep = true) {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return new this.constructor(assignNewId(this.node.cloneNode(deep)))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    const children = this.children()\r\n    let i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName, attrs) {\r\n    return this.put(new Dom(create(nodeName), attrs))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  html (htmlOrFn, outerHTML) {\r\n    return this.xml(htmlOrFn, outerHTML, html)\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // don't set directly with this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\r\n    return matcher && matcher.call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    let parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    do {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n    } while ((parent = adopt(parent.node.parentNode)))\r\n\r\n    return parent\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    element = makeInstance(element)\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent, i) {\r\n    return makeInstance(parent).add(this, i)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n\r\n    if (this.node.parentNode) {\r\n      this.node.parentNode.replaceChild(element.node, this.node)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map = null) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr(map)\r\n\r\n    for (const i in attrs) {\r\n      if (typeof attrs[i] === 'number') {\r\n        attrs[i] = Math.round(attrs[i] * factor) / factor\r\n      }\r\n    }\r\n\r\n    this.attr(attrs)\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  svg (svgOrFn, outerSVG) {\r\n    return this.xml(svgOrFn, outerSVG, svg)\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  wrap (node) {\r\n    const parent = this.parent()\r\n\r\n    if (!parent) {\r\n      return this.addTo(node)\r\n    }\r\n\r\n    const position = parent.index(this)\r\n    return parent.put(node, position).put(this)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  xml (xmlOrFn, outerXML, ns) {\r\n    if (typeof xmlOrFn === 'boolean') {\r\n      ns = outerXML\r\n      outerXML = xmlOrFn\r\n      xmlOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerXML = outerXML == null ? true : outerXML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (xmlOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerXML) {\r\n          const result = xmlOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = xmlOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerXML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerXML = outerXML == null ? false : outerXML\r\n\r\n    // Create temporary holder\r\n    const well = create('wrapper', ns)\r\n    const fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = xmlOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (let len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerXML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n", "import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n", "import { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nconst sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  const extension = {}\r\n  let i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction = 'both', origin = 'center') {\r\n    if ('xybothtrue'.indexOf(direction) === -1) {\r\n      origin = direction\r\n      direction = 'both'\r\n    }\r\n\r\n    return this.transform({ flip: direction, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y = x) {\r\n    const type = (this._element || this).type\r\n    return type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      this.off(event)\r\n    } else {\r\n      this.on(event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n", "import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  const matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      const kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent, i) {\r\n  if (this === parent) return this\r\n  const ctm = this.screenCTM()\r\n  const pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot (i) {\r\n  return this.toParent(this.root(), i)\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    const decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  const cleanRelative = relative === true ? this : (relative || false)\r\n  const result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent = this, index) {\r\n    this.each(function () {\r\n      if (this instanceof Container) {\r\n        return this.flatten().ungroup()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent = this.parent(), index = parent.index(this)) {\r\n    // when parent != this, we want append all elements to the end\r\n    index = index === -1 ? parent.children().length : index\r\n\r\n    this.each(function (i, children) {\r\n      // reverse each\r\n      return children[children.length - i - 1].toParent(parent, index)\r\n    })\r\n\r\n    return this.remove()\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('defs', node), attrs)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('ellipse', node), attrs)\r\n  }\r\n\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n", "import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient (...args) {\r\n      return this.defs().gradient(...args)\r\n    }\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('pattern', node), attrs)\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n", "import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('image', node), attrs)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    const img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      const p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport Box from './Box.js'\r\nimport Matrix from './Matrix.js'\r\n\r\nexport default class PointArray extends SVGArray {\r\n  // Get bounding box of points\r\n  bbox () {\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let minX = Infinity\r\n    let minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return new Box(minX, minY, maxX - minX, maxY - minY)\r\n  }\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (let i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ 0, 0 ]) {\r\n    const points = []\r\n\r\n    // if it is an array, we flatten it and therefore clone it to 1 depths\r\n    if (array instanceof Array) {\r\n      array = Array.prototype.concat.apply([], array)\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    let i\r\n    const box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    const array = []\r\n    // convert to a poly point string\r\n    for (let i = 0, il = this.length; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    for (let i = this.length; i--;) {\r\n      // Perform the matrix multiplication\r\n      const [ x, y ] = this[i]\r\n      this[i][0] = m.a * x + m.c * y + m.e\r\n      this[i][1] = m.b * x + m.d * y + m.f\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n", "import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('line', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1, y1, x2, y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('marker', node), attrs)\r\n  }\r\n\r\n  // Set height of element\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\n\n  orient (orient) {\r\n    return this.attr('orient', orient)\r\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\n\n  // Return the fill id\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\n\n  // Update marker\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\n\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      let attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n", "import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[k]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn = timeline.ease) {\r\n    super()\r\n    this.ease = easing[fn] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\n\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  const duration = (this._duration || 500) / 1000\r\n  const overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  const eps = 1e-10\r\n  const pi = Math.PI\r\n  const os = Math.log(overshoot / 100 + eps)\r\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  const wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration = 500, overshoot = 0) {\r\n    super()\r\n    this.duration(duration)\r\n      .overshoot(overshoot)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    const velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    const acceleration = -this.d * velocity - this.k * (current - target)\r\n    const newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\r\n    super()\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    const p = target - current\r\n    let i = (c.integral || 0) + p * dt\r\n    const d = (p - (c.error || 0)) / dt\r\n    const windup = this._windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('_windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n", "import { isPathLetter } from '../modules/core/regex.js'\r\nimport Point from '../types/Point.js'\r\n\r\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (let j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nfunction makeAbsolut (parser) {\r\n  const command = parser.segment[0]\r\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\r\n}\r\n\r\nfunction segmentComplete (parser) {\r\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\r\n}\r\n\r\nfunction startNewSegment (parser, token) {\r\n  parser.inNumber && finalizeNumber(parser, false)\r\n  const pathLetter = isPathLetter.test(token)\r\n\r\n  if (pathLetter) {\r\n    parser.segment = [ token ]\r\n  } else {\r\n    const lastCommand = parser.lastCommand\r\n    const small = lastCommand.toLowerCase()\r\n    const isSmall = lastCommand === small\r\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\r\n  }\r\n\r\n  parser.inSegment = true\r\n  parser.lastCommand = parser.segment[0]\r\n\r\n  return pathLetter\r\n}\r\n\r\nfunction finalizeNumber (parser, inNumber) {\r\n  if (!parser.inNumber) throw new Error('Parser Error')\r\n  parser.number && parser.segment.push(parseFloat(parser.number))\r\n  parser.inNumber = inNumber\r\n  parser.number = ''\r\n  parser.pointSeen = false\r\n  parser.hasExponent = false\r\n\r\n  if (segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n}\r\n\r\nfunction finalizeSegment (parser) {\r\n  parser.inSegment = false\r\n  if (parser.absolute) {\r\n    parser.segment = makeAbsolut(parser)\r\n  }\r\n  parser.segments.push(parser.segment)\r\n}\r\n\r\nfunction isArcFlag (parser) {\r\n  if (!parser.segment.length) return false\r\n  const isArc = parser.segment[0].toUpperCase() === 'A'\r\n  const length = parser.segment.length\r\n\r\n  return isArc && (length === 4 || length === 5)\r\n}\r\n\r\nfunction isExponential (parser) {\r\n  return parser.lastToken.toUpperCase() === 'E'\r\n}\r\n\r\nexport function pathParser (d, toAbsolute = true) {\r\n\r\n  let index = 0\r\n  let token = ''\r\n  const parser = {\r\n    segment: [],\r\n    inNumber: false,\r\n    number: '',\r\n    lastToken: '',\r\n    inSegment: false,\r\n    segments: [],\r\n    pointSeen: false,\r\n    hasExponent: false,\r\n    absolute: toAbsolute,\r\n    p0: new Point(),\r\n    p: new Point()\r\n  }\r\n\r\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\r\n    if (!parser.inSegment) {\r\n      if (startNewSegment(parser, token)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (token === '.') {\r\n      if (parser.pointSeen || parser.hasExponent) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.inNumber = true\r\n      parser.pointSeen = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (!isNaN(parseInt(token))) {\r\n\r\n      if (parser.number === '0' || isArcFlag(parser)) {\r\n        parser.inNumber = true\r\n        parser.number = token\r\n        finalizeNumber(parser, true)\r\n        continue\r\n      }\r\n\r\n      parser.inNumber = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (token === ' ' || token === ',') {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (token === '-') {\r\n      if (parser.inNumber && !isExponential(parser)) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.number += token\r\n      parser.inNumber = true\r\n      continue\r\n    }\r\n\r\n    if (token.toUpperCase() === 'E') {\r\n      parser.number += token\r\n      parser.hasExponent = true\r\n      continue\r\n    }\r\n\r\n    if (isPathLetter.test(token)) {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      } else if (!segmentComplete(parser)) {\r\n        throw new Error('parser Error')\r\n      } else {\r\n        finalizeSegment(parser)\r\n      }\r\n      --index\r\n    }\r\n  }\r\n\r\n  if (parser.inNumber) {\r\n    finalizeNumber(parser, false)\r\n  }\r\n\r\n  if (parser.inSegment && segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n\r\n  return parser.segments\r\n\r\n}\r\n", "import SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\nimport Box from './Box.js'\r\nimport { pathParser } from '../utils/pathParser.js'\r\n\r\nfunction arrayToString (a) {\r\n  let s = ''\r\n  for (let i = 0, il = a.length; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nexport default class PathArray extends SVGArray {\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return new Box(parser.nodes.path.getBBox())\r\n  }\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (let l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Absolutize and parse path to array\r\n  parse (d = 'M0 0') {\r\n    if (Array.isArray(d)) {\r\n      d = Array.prototype.concat.apply([], d).toString()\r\n    }\r\n\r\n    return pathParser(d)\r\n  }\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n    let i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  }\r\n\r\n}\r\n", "import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('path', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null)\n      ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n", "import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null)\n    ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\r\n      : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polygon', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polyline', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('rect', node), attrs)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n", "export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  // Shows us the first item in the list\n  first () {\r\n    return this._first && this._first.value\r\n  }\n\n  // Shows us the last item in the list\n  last () {\r\n    return this._last && this._last.value\r\n  }\n\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\n  // Removes the item that was returned from the push\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\n\n  shift () {\r\n    // Check if we have a value\r\n    const remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n}\r\n", "import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    const node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    const time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    const node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    const node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    let nextTimeout = null\r\n    const lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    let nextFrame = null\r\n    const lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    let nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n", "import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nconst makeSchedule = function (runnerInfo) {\r\n  const start = runnerInfo.start\r\n  const duration = runnerInfo.runner.duration()\r\n  const end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    const lastRunnerInfo = this.getLastRunnerInfo()\r\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\r\n    return Math.max(0, ...endTimes)\r\n  }\r\n\r\n  getLastRunnerInfo () {\r\n    return this.getRunnerInfoById(this._lastRunnerId)\r\n  }\r\n\r\n  getRunnerInfoById (id) {\r\n    return this._runners[this._runnerIds.indexOf(id)] || null\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  reverse (yes) {\r\n    const currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    const positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? -positive : positive)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations directly\r\n\r\n    let absoluteStartTime = 0\r\n    const endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this.getRunnerInfoById(runner.id)\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else if (when === 'with-last') {\r\n      const lastRunnerInfo = this.getLastRunnerInfo()\r\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n      absoluteStartTime = lastStartTime\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    const index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    const time = this._timeSource()\r\n    let dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attribute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (let k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    let runnersLeft = false\r\n    for (let i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      const finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        const endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n", "import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    let times = 1\r\n    let swing = false\r\n    let wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    const o = Runner.sanitise(duration, delay, when)\r\n    const runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  loops (p) {\r\n    const loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      const loopsDone = Math.floor(this._time / loopDuration)\r\n      const relativeTime = (this._time - loopsDone * loopDuration)\r\n      const position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    const whole = Math.floor(p)\r\n    const partial = p % 1\r\n    const time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    const x = this._time\r\n    const d = this._duration\r\n    const w = this._wait\r\n    const t = this._times\r\n    const s = this._swing\r\n    const r = this._reverse\r\n    let position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        const backwards = (swinging && !r) || (!swinging && r)\r\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      const endTime = t * (w + d) - w\r\n      position = x <= 0\r\n        ? Math.round(f(1e-5))\r\n        : x < endTime\r\n          ? f(x)\r\n          : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    const loopsDone = Math.floor(this.loops())\r\n    const swingForward = s && (loopsDone % 2 === 0)\r\n    const forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    const timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    const position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    const running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    const duration = this.duration()\r\n    const justStarted = this._lastTime <= 0 && this._time > 0\r\n    const justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    const declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    let converged = false\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    const timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      const current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      const needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without being ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    let allfinished = true\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      const current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      const converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget.call(this, target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nRunner.id = 0\r\n\r\nexport class FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nexport class RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    for (let i = 0; i < this.runners.length; ++i) {\r\n      const runner = this.runners[i]\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        const newRunner = runner.mergeWith(lastRunner)\r\n        this.edit(lastRunner.id, newRunner)\r\n        lastRunner = newRunner\r\n        --i\r\n      } else {\r\n        lastRunner = runner\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      const o = Runner.sanitise(duration, delay, when)\r\n      const timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// Will output the elements from array A that are not in the array B\r\nconst difference = (a, b) => a.filter(x => !b.includes(x))\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, nameOrAttrs, val) {\r\n    if (typeof nameOrAttrs === 'string') {\r\n      return this.styleAttr(type, { [nameOrAttrs]: val })\r\n    }\r\n\r\n    let attrs = nameOrAttrs\r\n    if (this._tryRetarget(type, attrs)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(attrs)\r\n    let keys = Object.keys(attrs)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](keys))\r\n    }, function (pos) {\r\n      this.element()[type](morpher.at(pos).valueOf())\r\n      return morpher.done()\r\n    }, function (newToAttrs) {\r\n\r\n      // Check if any new keys were added\r\n      const newKeys = Object.keys(newToAttrs)\r\n      const differences = difference(newKeys, keys)\r\n\r\n      // If their are new keys, initialize them and add them to morpher\r\n      if (differences.length) {\r\n        // Get the values\r\n        const addedFromAttrs = this.element()[type](differences)\r\n\r\n        // Get the already initialized values\r\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\r\n\r\n        // Merge old and new\r\n        Object.assign(oldFromAttrs, addedFromAttrs)\r\n        morpher.from(oldFromAttrs)\r\n      }\r\n\r\n      // Get the object from the morpher\r\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\r\n\r\n      // Merge in new attributes\r\n      Object.assign(oldToAttrs, newToAttrs)\r\n\r\n      // Change morpher target\r\n      morpher.to(oldToAttrs)\r\n\r\n      // Make sure that we save the work we did so we don't need it to do again\r\n      keys = newKeys\r\n      attrs = newToAttrs\r\n    })\r\n\r\n    this._rememberMorpher(type, morpher)\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', level, point)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    const isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(newTransforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    let from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    let box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n", "import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('svg', node), attrs)\r\n    this.namespace()\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: svg, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  removeNamespace () {\r\n    return this.attr({ xmlns: null, version: null })\r\n      .attr('xmlns:xlink', null, xmlns)\r\n      .attr('xmlns:svgjs', null, xmlns)\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call root() from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('symbol', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n", "import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n\r\n// Move over x-axis\r\n// Text is moved by its bounding box\r\n// text-anchor does NOT matter\r\nexport function x (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.x\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.x)\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.y\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.y)\r\n}\r\n\r\nexport function move (x, y, box = this.bbox()) {\r\n  return this.x(x, box).y(y, box)\r\n}\r\n\r\n// Move center over x-axis\r\nexport function cx (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.cx\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.cx)\r\n}\r\n\r\n// Move center over y-axis\r\nexport function cy (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.cy\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.cy)\r\n}\r\n\r\nexport function center (x, y, box = this.bbox()) {\r\n  return this.cx(x, box).cy(y, box)\r\n}\r\n\r\nexport function ax (x) {\r\n  return this.attr('x', x)\r\n}\r\n\r\nexport function ay (y) {\r\n  return this.attr('y', y)\r\n}\r\n\r\nexport function amove (x, y) {\r\n  return this.ax(x).ay(y)\r\n}\r\n\r\n// Enable / disable build mode\r\nexport function build (build) {\r\n  this._build = !!build\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('text', node), attrs)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Set / get leading\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      const self = this\r\n      let blankLineOffset = 0\r\n      const leading = this.dom.leading\r\n\r\n      this.each(function (i) {\r\n        const fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n\r\n        const dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', i ? dy + blankLineOffset : 0)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\n\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      const children = this.node.childNodes\r\n      let firstLine = 0\r\n      text = ''\r\n\r\n      for (let i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = (text + '').split('\\n')\r\n\r\n      // build new lines\r\n      for (let j = 0, jl = text.length; j < jl; j++) {\r\n        this.newLine(text[j])\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('tspan', node), attrs)\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Shortcut dx\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\n\n  // Shortcut dy\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\n\n  // Create new line\n  newLine () {\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    // fetch parent\r\n    const text = this.parent()\r\n\r\n    // early return in case we are not in a text element\r\n    if (!(text instanceof Text)) {\r\n      return this\r\n    }\r\n\r\n    const i = text.index(this)\r\n\r\n    const fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    const dy = text.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(i ? dy : 0).attr('x', text.x())\r\n  }\n\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    if (typeof text === 'function') {\r\n      this.clear().build(true)\r\n      text.call(this, this)\r\n      this.build(false)\r\n    } else {\r\n      this.plain(text)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text = '') {\r\n      const tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      return this.put(tspan).text(text)\r\n    })\r\n  },\r\n  Text: {\r\n    newLine: function (text = '') {\r\n      return this.tspan(text).newLine()\r\n    }\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n", "import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('circle', node), attrs)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size = 0) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('clipPath', node), attrs)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    },\r\n\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('foreignObject', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n", "import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('g', node), attrs)\r\n  }\r\n}\r\n\r\nextend(G, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('a', node), attrs)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n}\r\n\r\nextend(A, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    unlink () {\r\n      const link = this.linker()\r\n\r\n      if (!link) return this\r\n\r\n      const parent = link.parent()\r\n\r\n      if (!parent) {\r\n        return this.remove()\r\n      }\r\n\r\n      const index = parent.index(link)\r\n      parent.add(this, index)\r\n\r\n      link.remove()\r\n      return this\r\n    },\r\n    linkTo (url) {\r\n      // reuse old link if possible\r\n      let link = this.linker()\r\n\r\n      if (!link) {\r\n        link = new A()\r\n        this.wrap(link)\r\n      }\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this\r\n    },\r\n    linker () {\r\n      const link = this.parent()\r\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\r\n        return link\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('mask', node), attrs)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    masker () {\r\n      return this.reference('mask')\r\n    },\r\n\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      const masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('stop', node), attrs)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Gradient: {\r\n    // Add a color stop\r\n    stop: function (offset, color, opacity) {\r\n      return this.put(new Stop()).update(offset, color, opacity)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Stop, 'Stop')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  let ret = selector + '{'\r\n\r\n  for (const i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('style', node), attrs)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  },\r\n  fontface  (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  }\r\n})\r\n\r\nregister(Style, 'Style')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('textPath', node), attrs)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    const track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    const track = this.track()\r\n    let pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      const textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg textPath').filter((node) => {\r\n        return (node.attr('href') || '').includes(this.id())\r\n      })\r\n\r\n      // Does not work in IE11. Use when IE support is dropped\r\n      // return baseFind('svg textPath[*|href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('use', node), attrs)\r\n  }\r\n\r\n  // Use element as a reference\r\n  use (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).use(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n", "/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Fragment from './elements/Fragment.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Point from './types/Point.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport {\r\n  getWindow,\r\n  registerWindow,\r\n  restoreWindow,\r\n  saveWindow,\r\n  withWindow\r\n} from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Fragment } from './elements/Fragment.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Gradient,\r\n  Runner\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\nextend([ Container, Fragment ], getMethodsFor('Container'))\r\nextend(Gradient, getMethodsFor('Gradient'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray,\r\n  Point\r\n])\r\n\r\nmakeMorphable()\r\n", "/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  constructor(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n\n}\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  // don't expand the token\n  // used in \\noexpand\n  constructor(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.noexpand = void 0;\n    this.treatAsRelax = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  range(endToken, // last token of the range, inclusive\n  text) {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n\n}\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  // Error position based on passed-in Token or ParseNode.\n  constructor(message, // The error message\n  token) {\n    this.position = void 0;\n    var error = \"KaTeX parse error: \" + message;\n    var start;\n    var loc = token && token.loc;\n\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n      // Get the input\n      var input = loc.lexer.input; // Prepend some information\n\n      start = loc.start;\n      var end = loc.end;\n\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \";\n      } // Underline token in question using combining underscores\n\n\n      var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n      var left;\n\n      if (start > 15) {\n        left = \"…\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n\n      var right;\n\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"…\";\n      } else {\n        right = input.slice(end);\n      }\n\n      error += left + underlined + right;\n    } // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n\n\n    var self = new Error(error);\n    self.name = \"ParseError\"; // $FlowFixMe\n\n    self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n    self.position = start;\n    return self;\n  }\n\n} // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nvar uppercase = /([A-Z])/g;\n\nvar hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nvar ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction escape(text) {\n  return String(text).replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nvar getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nvar isCharacterBox = function isCharacterBox(group) {\n  var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/**\n * Return the protocol of a URL, or \"_relative\" if the URL does not specify a\n * protocol (and thus is relative).\n */\n\nvar protocolFromUrl = function protocolFromUrl(url) {\n  var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n  return protocol != null ? protocol[1] : \"_relative\";\n};\nvar utils = {\n  contains,\n  deflt,\n  escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox,\n  protocolFromUrl\n};\n\n/* eslint no-console:0 */\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nclass Settings {\n  constructor(options) {\n    this.displayMode = void 0;\n    this.output = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.minRuleThickness = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.trust = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.globalGroup = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.output = utils.deflt(options.output, \"htmlAndMathml\");\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.minRuleThickness = Math.max(0, utils.deflt(options.minRuleThickness, 0));\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, \"warn\");\n    this.trust = utils.deflt(options.trust, false);\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n    this.globalGroup = utils.deflt(options.globalGroup, false);\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  reportNonstrict(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n\n\n  useStrictBehavior(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    }\n  }\n  /**\n   * Check whether to test potentially dangerous input, and return\n   * `true` (trusted) or `false` (untrusted).  The sole argument `context`\n   * should be an object with `command` field specifying the relevant LaTeX\n   * command (as a string starting with `\\`), and any other arguments, etc.\n   * If `context` has a `url` field, a `protocol` field will automatically\n   * get added by this function (changing the specified object).\n   */\n\n\n  isTrusted(context) {\n    if (context.url && !context.protocol) {\n      context.protocol = utils.protocolFromUrl(context.url);\n    }\n\n    var trust = typeof this.trust === \"function\" ? this.trust(context) : this.trust;\n    return Boolean(trust);\n  }\n\n}\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nclass Style {\n  constructor(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  sup() {\n    return styles[sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n\n\n  sub() {\n    return styles[sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n\n\n  fracNum() {\n    return styles[fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n\n\n  fracDen() {\n    return styles[fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n\n\n  cramp() {\n    return styles[cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n\n\n  text() {\n    return styles[text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n} // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7; // Instances of the different styles\n\nvar styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\nvar Style$1 = {\n  DISPLAY: styles[D],\n  TEXT: styles[T],\n  SCRIPT: styles[S],\n  SCRIPTSCRIPT: styles[SS]\n};\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f] // Combining Diacritical marks\n  ]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // Armenian\n  name: 'armenian',\n  blocks: [[0x0530, 0x058F]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60] // Fullwidth punctuation\n  // TODO: add halfwidth Katakana and Romanji glyphs\n  ]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (var i = 0; i < scriptData.length; i++) {\n    var script = scriptData[i];\n\n    for (var _i = 0; _i < script.blocks.length; _i++) {\n      var block = script.blocks[_i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nvar allBlocks = [];\nscriptData.forEach(s => s.blocks.forEach(b => allBlocks.push(...b)));\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (var i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * This file provides support to domTree.js and delimiter.js.\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nvar hLinePad = 80; // padding above a sqrt viniculum. Prevents image cropping.\n// The viniculum of a \\sqrt can be made thicker by a KaTeX rendering option.\n// Think of variable extraViniculum as two detours in the SVG path.\n// The detour begins at the lower left of the area labeled extraViniculum below.\n// The detour proceeds one extraViniculum distance up and slightly to the right,\n// displacing the radiused corner between surd and viniculum. The radius is\n// traversed as usual, then the detour resumes. It goes right, to the end of\n// the very long viniculumn, then down one extraViniculum distance,\n// after which it resumes regular path geometry for the radical.\n\n/*                                                  viniculum\n                                                   /\n         /▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒←extraViniculum\n        / █████████████████████←0.04em (40 unit) std viniculum thickness\n       / /\n      / /\n     / /\\\n    / / surd\n*/\n\nvar sqrtMain = function sqrtMain(extraViniculum, hLinePad) {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  return \"M95,\" + (622 + extraViniculum + hLinePad) + \"\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl\" + extraViniculum / 2.075 + \" -\" + extraViniculum + \"\\nc5.3,-9.3,12,-14,20,-14\\nH400000v\" + (40 + extraViniculum) + \"H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM\" + (834 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize1 = function sqrtSize1(extraViniculum, hLinePad) {\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  return \"M263,\" + (601 + extraViniculum + hLinePad) + \"c0.7,0,18,39.7,52,119\\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\\nc340,-704.7,510.7,-1060.3,512,-1067\\nl\" + extraViniculum / 2.084 + \" -\" + extraViniculum + \"\\nc4.7,-7.3,11,-11,19,-11\\nH40000v\" + (40 + extraViniculum) + \"H1012.3\\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\\nM\" + (1001 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize2 = function sqrtSize2(extraViniculum, hLinePad) {\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  return \"M983 \" + (10 + extraViniculum + hLinePad) + \"\\nl\" + extraViniculum / 3.13 + \" -\" + extraViniculum + \"\\nc4,-6.7,10,-10,18,-10 H400000v\" + (40 + extraViniculum) + \"\\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\\nM\" + (1001 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize3 = function sqrtSize3(extraViniculum, hLinePad) {\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  return \"M424,\" + (2398 + extraViniculum + hLinePad) + \"\\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\\nl\" + extraViniculum / 4.223 + \" -\" + extraViniculum + \"c4,-6.7,10,-10,18,-10 H400000\\nv\" + (40 + extraViniculum) + \"H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\\nc-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M\" + (1001 + extraViniculum) + \" \" + hLinePad + \"\\nh400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize4 = function sqrtSize4(extraViniculum, hLinePad) {\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  return \"M473,\" + (2713 + extraViniculum + hLinePad) + \"\\nc339.3,-1799.3,509.3,-2700,510,-2702 l\" + extraViniculum / 5.298 + \" -\" + extraViniculum + \"\\nc3.3,-7.3,9.3,-11,18,-11 H400000v\" + (40 + extraViniculum) + \"H1017.7\\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\\n606zM\" + (1001 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"H1017.7z\";\n};\n\nvar phasePath = function phasePath(y) {\n  var x = y / 2; // x coordinate at top of angle\n\n  return \"M400000 \" + y + \" H0 L\" + x + \" 0 l65 45 L145 \" + (y - 80) + \" H400000z\";\n};\n\nvar sqrtTall = function sqrtTall(extraViniculum, hLinePad, viewBoxHeight) {\n  // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n  // One path edge has a variable length. It runs vertically from the viniculumn\n  // to a point near (14 units) the bottom of the surd. The viniculum\n  // is normally 40 units thick. So the length of the line in question is:\n  var vertSegment = viewBoxHeight - 54 - hLinePad - extraViniculum;\n  return \"M702 \" + (extraViniculum + hLinePad) + \"H400000\" + (40 + extraViniculum) + \"\\nH742v\" + vertSegment + \"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\\n219 661 l218 661zM702 \" + hLinePad + \"H400000v\" + (40 + extraViniculum) + \"H742z\";\n};\n\nvar sqrtPath = function sqrtPath(size, extraViniculum, viewBoxHeight) {\n  extraViniculum = 1000 * extraViniculum; // Convert from document ems to viewBox.\n\n  var path = \"\";\n\n  switch (size) {\n    case \"sqrtMain\":\n      path = sqrtMain(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize1\":\n      path = sqrtSize1(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize2\":\n      path = sqrtSize2(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize3\":\n      path = sqrtSize3(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize4\":\n      path = sqrtSize4(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtTall\":\n      path = sqrtTall(extraViniculum, hLinePad, viewBoxHeight);\n  }\n\n  return path;\n};\nvar innerPath = function innerPath(name, height) {\n  // The inner part of stretchy tall delimiters\n  switch (name) {\n    case \"\\u239c\":\n      return \"M291 0 H417 V\" + height + \" H291z M291 0 H417 V\" + height + \" H291z\";\n\n    case \"\\u2223\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\";\n\n    case \"\\u2225\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\" + (\"M367 0 H410 V\" + height + \" H367z M367 0 H410 V\" + height + \" H367z\");\n\n    case \"\\u239f\":\n      return \"M457 0 H583 V\" + height + \" H457z M457 0 H583 V\" + height + \" H457z\";\n\n    case \"\\u23a2\":\n      return \"M319 0 H403 V\" + height + \" H319z M319 0 H403 V\" + height + \" H319z\";\n\n    case \"\\u23a5\":\n      return \"M263 0 H347 V\" + height + \" H263z M263 0 H347 V\" + height + \" H263z\";\n\n    case \"\\u23aa\":\n      return \"M384 0 H504 V\" + height + \" H384z M384 0 H504 V\" + height + \" H384z\";\n\n    case \"\\u23d0\":\n      return \"M312 0 H355 V\" + height + \" H312z M312 0 H355 V\" + height + \" H312z\";\n\n    case \"\\u2016\":\n      return \"M257 0 H300 V\" + height + \" H257z M257 0 H300 V\" + height + \" H257z\" + (\"M478 0 H521 V\" + height + \" H478z M478 0 H521 V\" + height + \" H478z\");\n\n    default:\n      return \"\";\n  }\n};\nvar path = {\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  constructor(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n\n\n  toNode() {\n    var frag = document.createDocumentFragment();\n\n    for (var i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n\n\n  toMarkup() {\n    var markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n\n\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    var toText = child => child.toText();\n\n    return this.children.map(toText).join(\"\");\n  }\n\n}\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n  return classes.filter(cls => cls).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nvar toNode = function toNode(tagName) {\n  var node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (var i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nvar toMarkup = function toMarkup(tagName) {\n  var markup = \"<\" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n  }\n\n  var styles = \"\"; // Add the styles, after hyphenation\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n    }\n  }\n\n  if (styles) {\n    markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n  } // Add the attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (var i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += \"</\" + tagName + \">\";\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nclass Span {\n  constructor(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n\n}\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nclass Anchor {\n  constructor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"a\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"a\");\n  }\n\n}\n/**\n * This node represents an image embed (<img>) element.\n */\n\nclass Img {\n  constructor(src, alt, style) {\n    this.src = void 0;\n    this.alt = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    var node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\"; // Apply inline styles\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        // $FlowFixMe\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<img  src='\" + this.src + \" 'alt='\" + this.alt + \"' \"; // Add the styles, after hyphenation\n\n    var styles = \"\";\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    markup += \"'/>\";\n    return markup;\n  }\n\n}\nvar iCombinations = {\n  'î': '\\u0131\\u0302',\n  'ï': '\\u0131\\u0308',\n  'í': '\\u0131\\u0301',\n  // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n  'ì': '\\u0131\\u0300'\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nclass SymbolNode {\n  constructor(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    var script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n\n\n  toNode() {\n    var node = document.createTextNode(this.text);\n    var span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n\n\n  toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  }\n\n}\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nclass SvgNode {\n  constructor(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\"; // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  }\n\n}\nclass PathNode {\n  constructor(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for \\sqrt, \\phase, & tall delims\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", path[this.pathName]);\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    if (this.alternate) {\n      return \"<path d='\" + this.alternate + \"'/>\";\n    } else {\n      return \"<path d='\" + path[this.pathName] + \"'/>\";\n    }\n  }\n\n}\nclass LineNode {\n  constructor(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<line\";\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  }\n\n}\nfunction assertSymbolDomNode(group) {\n  if (group instanceof SymbolNode) {\n    return group;\n  } else {\n    throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof Span) {\n    return group;\n  } else {\n    throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n  }\n}\n\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\nvar fontMetricsData = {\n  \"AMS-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Fraktur-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.12, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.9, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.744, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.744, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.44444, 0, 0, 0.575],\n    \"49\": [0, 0.44444, 0, 0, 0.575],\n    \"50\": [0, 0.44444, 0, 0, 0.575],\n    \"51\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"52\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"53\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333],\n    \"57649\": [0, 0.44444, 0, 0, 0.39352],\n    \"57911\": [0.19444, 0.44444, 0, 0, 0.43889]\n  },\n  \"Math-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059],\n    \"57649\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"57911\": [0.19444, 0.43056, 0, 0.08334, 0.38403]\n  },\n  \"SansSerif-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Size1-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n};\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2],\n  // The width of separator lines in {array} environments. From\n  // `\\showthe\\arrayrulewidth` in LaTeX. Equals 0.4 / ptPerEm.\n  arrayRuleWidth: [0.04, 0.04, 0.04],\n  // Two values from LaTeX source2e:\n  fboxsep: [0.3, 0.3, 0.3],\n  //        3 pt / ptPerEm\n  fboxrule: [0.04, 0.04, 0.04] // 0.4 pt / ptPerEm\n\n}; // This map contains a mapping from font name and character code to character\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nvar extraCharacterMap = {\n  // Latin-1\n  'Å': 'A',\n  'Ç': 'C',\n  'Ð': 'D',\n  'Þ': 'o',\n  'å': 'a',\n  'ç': 'c',\n  'ð': 'd',\n  'þ': 'o',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error(\"Font metrics not found for font: \" + font + \".\");\n  }\n\n  var ch = character.charCodeAt(0);\n  var metrics = fontMetricsData[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = fontMetricsData[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nvar fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  var sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (var key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nvar ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nvar NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nvar symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font,\n    group,\n    replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nvar math = \"math\";\nvar text$1 = \"text\"; // fonts:\n\nvar main = \"main\";\nvar ams = \"ams\"; // groups:\n\nvar accent = \"accent-token\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text$1, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text$1, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(math, main, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(text$1, main, textord, \"\\u00a7\", \"\\\\S\");\ndefineSymbol(math, main, textord, \"\\u00b6\", \"\\\\P\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b6\", \"\\\\P\"); // Math and Text\n\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\", true);\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\", true); // Symbol names preceeded by \"@\" each have a corresponding macro.\n\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\@nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\@nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\@lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\@nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\@varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\@ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\@ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\@gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\@nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\@nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\@varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\@nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(text$1, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\", true);\ndefineSymbol(text$1, main, textord, \"\\u00f0\", \"\\u00f0\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(text$1, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(text$1, ams, textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\", true);\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\@ulcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\@urcorner\", true);\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\@llcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\@lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, main, rel, \"\\u22b6\", \"\\\\origof\", true); // not in font\n\ndefineSymbol(math, main, rel, \"\\u22b7\", \"\\\\imageof\", true); // not in font\n\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text$1, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"A\", \"\\u0391\");\ndefineSymbol(math, main, textord, \"B\", \"\\u0392\");\ndefineSymbol(math, main, textord, \"E\", \"\\u0395\");\ndefineSymbol(math, main, textord, \"Z\", \"\\u0396\");\ndefineSymbol(math, main, textord, \"H\", \"\\u0397\");\ndefineSymbol(math, main, textord, \"I\", \"\\u0399\");\ndefineSymbol(math, main, textord, \"K\", \"\\u039A\");\ndefineSymbol(math, main, textord, \"M\", \"\\u039C\");\ndefineSymbol(math, main, textord, \"N\", \"\\u039D\");\ndefineSymbol(math, main, textord, \"O\", \"\\u039F\");\ndefineSymbol(math, main, textord, \"P\", \"\\u03A1\");\ndefineSymbol(math, main, textord, \"T\", \"\\u03A4\");\ndefineSymbol(math, main, textord, \"X\", \"\\u03A7\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\", true);\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, main, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\", true);\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(text$1, main, textord, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(text$1, main, textord, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(math, main, open, \"(\", \"\\\\lparen\", true);\ndefineSymbol(math, main, close, \")\", \"\\\\rparen\", true);\ndefineSymbol(text$1, main, textord, \"<\", \"\\\\textless\", true); // in T1 fontenc\n\ndefineSymbol(text$1, main, textord, \">\", \"\\\\textgreater\", true); // in T1 fontenc\n\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(text$1, main, textord, \"|\", \"\\\\textbar\", true); // in T1 fontenc\n\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(text$1, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(text$1, main, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(text$1, main, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(text$1, main, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, main, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\", true);\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\varvdots\"); // \\vdots is a macro\n\ndefineSymbol(math, main, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u02cb\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u02c9\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, accent, \"\\u02da\", \"\\\\mathring\"); // \\imath and \\jmath should be invariant to \\mathrm, \\mathbf, etc., so use PUA\n\ndefineSymbol(math, main, mathord, \"\\ue131\", \"\\\\@imath\");\ndefineSymbol(math, main, mathord, \"\\ue237\", \"\\\\@jmath\");\ndefineSymbol(math, main, textord, \"\\u0131\", \"\\u0131\");\ndefineSymbol(math, main, textord, \"\\u0237\", \"\\u0237\");\ndefineSymbol(text$1, main, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(text$1, main, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(text$1, main, textord, \"\\u00df\", \"\\\\ss\", true);\ndefineSymbol(text$1, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text$1, main, textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(text$1, main, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(text$1, main, textord, \"\\u00c6\", \"\\\\AE\", true);\ndefineSymbol(text$1, main, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(text$1, main, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(text$1, main, accent, \"\\u02ca\", \"\\\\'\"); // acute\n\ndefineSymbol(text$1, main, accent, \"\\u02cb\", \"\\\\`\"); // grave\n\ndefineSymbol(text$1, main, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(text$1, main, accent, \"\\u02dc\", \"\\\\~\"); // tilde\n\ndefineSymbol(text$1, main, accent, \"\\u02c9\", \"\\\\=\"); // macron\n\ndefineSymbol(text$1, main, accent, \"\\u02d8\", \"\\\\u\"); // breve\n\ndefineSymbol(text$1, main, accent, \"\\u02d9\", \"\\\\.\"); // dot above\n\ndefineSymbol(text$1, main, accent, \"\\u02da\", \"\\\\r\"); // ring above\n\ndefineSymbol(text$1, main, accent, \"\\u02c7\", \"\\\\v\"); // caron\n\ndefineSymbol(text$1, main, accent, \"\\u00a8\", '\\\\\"'); // diaresis\n\ndefineSymbol(text$1, main, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\ndefineSymbol(text$1, main, accent, \"\\u25ef\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nvar ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"--\", true);\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"---\", true);\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"`\", true);\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"'\", true);\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"``\", true);\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"''\", true);\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Regular defines this character \"163\".\n\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(text$1, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(text$1, main, textord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text$1, ams, textord, \"\\u2720\", \"\\\\maltese\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nvar mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (var i = 0; i < mathTextSymbols.length; i++) {\n  var ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, main, textord, ch, ch);\n} // All of these are textords in text mode\n\n\nvar textSymbols = \"0123456789!@*()-=+\\\";:?/.,\";\n\nfor (var _i = 0; _i < textSymbols.length; _i++) {\n  var _ch = textSymbols.charAt(_i);\n\n  defineSymbol(text$1, main, textord, _ch, _ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (var _i2 = 0; _i2 < letters.length; _i2++) {\n  var _ch2 = letters.charAt(_i2);\n\n  defineSymbol(math, main, mathord, _ch2, _ch2);\n  defineSymbol(text$1, main, textord, _ch2, _ch2);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(math, ams, textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(text$1, ams, textord, \"C\", \"\\u2102\");\ndefineSymbol(math, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(text$1, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(math, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(text$1, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(math, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(text$1, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(math, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(text$1, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(math, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(text$1, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(math, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(text$1, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(text$1, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nvar wideChar = \"\";\n\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n  var _ch3 = letters.charAt(_i3); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n\n  wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fractur\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n\n  if (_i3 < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n\n    defineSymbol(math, main, mathord, _ch3, wideChar);\n    defineSymbol(text$1, main, textord, _ch3, wideChar);\n    wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n\n    defineSymbol(math, main, mathord, _ch3, wideChar);\n    defineSymbol(text$1, main, textord, _ch3, wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nwideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(math, main, mathord, \"k\", wideChar);\ndefineSymbol(text$1, main, textord, \"k\", wideChar); // Next, some wide character numerals\n\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n  var _ch4 = _i4.toString();\n\n  wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nvar extraLatin = \"\\u00c7\\u00d0\\u00de\\u00e7\\u00fe\";\n\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n  var _ch5 = extraLatin.charAt(_i5);\n\n  defineSymbol(math, main, mathord, _ch5, _ch5);\n  defineSymbol(text$1, main, textord, _ch5, _ch5);\n}\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // a-z monospace\n];\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // 0-9 monospace\n];\nvar wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  var H = wideChar.charCodeAt(0); // high surrogate\n\n  var L = wideChar.charCodeAt(1); // low surrogate\n\n  var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    var i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n\n    return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400–1D7FF.\n    throw new ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\nvar sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9] // size11: [24.88, 20.74, 17.28] \\HUGE\n];\nvar sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nclass Options {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  constructor(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this.minRuleThickness = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this.minRuleThickness = data.minRuleThickness;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  extend(extension) {\n    var data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize,\n      minRuleThickness: this.minRuleThickness\n    };\n\n    for (var key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n\n\n  havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n\n\n  havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n\n\n  havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n\n\n  havingBaseStyle(style) {\n    style = style || this.style.text();\n    var wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n\n\n  havingBaseSizing() {\n    var size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n\n\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n\n\n  withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n\n\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n\n\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n\n\n  sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n\n\n  baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n\n\n  fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n\n\n  getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  }\n\n}\n\nOptions.BASESIZE = 6;\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nvar ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nvar relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nvar calculateSize = function calculateSize(sizeValue, options) {\n  var scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    var unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n\n/* eslint no-console:0 */\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nvar lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (symbols[mode][value] && symbols[mode][value].replace) {\n    value = symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  var lookup = lookupSymbol(value, fontName, mode);\n  var metrics = lookup.metrics;\n  value = lookup.value;\n  var symbolNode;\n\n  if (metrics) {\n    var italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics \" + (\"for '\" + value + \"' in style '\" + fontName + \"' and mode '\" + mode + \"'\"));\n    symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\n\n\nvar mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options.font === \"boldsymbol\" && lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n    return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nvar boldsymbol = function boldsymbol(value, mode, options, classes, type) {\n  if (type !== \"textord\" && lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nvar makeOrd = function makeOrd(group, options, type) {\n  var mode = group.mode;\n  var text = group.text;\n  var classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  var isFont = mode === \"math\" || mode === \"text\" && options.font;\n  var fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    var [wideFontName, wideFontClass] = wideCharacterFont(text, mode);\n    return makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    var fontName;\n    var fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\") {\n      var fontData = boldsymbol(text, mode, options, classes, type);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (lookupSymbol(text, fontName, mode).metrics) {\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      var parts = [];\n\n      for (var i = 0; i < text.length; i++) {\n        parts.push(makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    return makeSymbol(text, \"Math-Italic\", mode, options, classes.concat([\"mathnormal\"]));\n  } else if (type === \"textord\") {\n    var font = symbols[mode][text] && symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n\n      return makeSymbol(text, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n\n      return makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n\n      return makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nvar canCombine = (prev, next) => {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  } // If prev and next both are just \"mbin\"s or \"mord\"s we don't combine them\n  // so that the proper spacing can be preserved.\n\n\n  if (prev.classes.length === 1) {\n    var cls = prev.classes[0];\n\n    if (cls === \"mbin\" || cls === \"mord\") {\n      return false;\n    }\n  }\n\n  for (var style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (var _style in next.style) {\n    if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consecutive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nvar tryCombineChars = chars => {\n  for (var i = 0; i < chars.length - 1; i++) {\n    var prev = chars[i];\n    var next = chars[i + 1];\n\n    if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  var height = 0;\n  var depth = 0;\n  var maxFontSize = 0;\n\n  for (var i = 0; i < elem.children.length; i++) {\n    var child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nvar makeSpan = function makeSpan(classes, children, options, style) {\n  var span = new Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nvar makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n  var line = makeSpan([className], [], options);\n  line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n  line.style.borderBottomWidth = line.height + \"em\";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nvar makeAnchor = function makeAnchor(href, classes, children, options) {\n  var anchor = new Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nvar makeFragment = function makeFragment(children) {\n  var fragment = new DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nvar wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof DocumentFragment) {\n    return makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    var oldChildren = params.children;\n    var children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n\n    var currPos = _depth;\n\n    for (var i = 1; i < oldChildren.length; i++) {\n      var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children,\n      depth: _depth\n    };\n  }\n\n  var depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    var bottom = params.positionData;\n\n    for (var _i = 0; _i < params.children.length; _i++) {\n      var child = params.children[_i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    var firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nvar makeVList = function makeVList(params, options) {\n  var {\n    children,\n    depth\n  } = getVListChildrenAndDepth(params); // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n  var pstrutSize = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (child.type === \"elem\") {\n      var elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  var pstrut = makeSpan([\"pstrut\"], []);\n  pstrut.style.height = pstrutSize + \"em\"; // Create a new list of actual children at the correct offsets\n\n  var realChildren = [];\n  var minPos = depth;\n  var maxPos = depth;\n  var currPos = depth;\n\n  for (var _i2 = 0; _i2 < children.length; _i2++) {\n    var _child = children[_i2];\n\n    if (_child.type === \"kern\") {\n      currPos += _child.size;\n    } else {\n      var _elem = _child.elem;\n      var classes = _child.wrapperClasses || [];\n      var style = _child.wrapperStyle || {};\n      var childWrap = makeSpan(classes, [pstrut, _elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - _elem.depth + \"em\";\n\n      if (_child.marginLeft) {\n        childWrap.style.marginLeft = _child.marginLeft;\n      }\n\n      if (_child.marginRight) {\n        childWrap.style.marginRight = _child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += _elem.height + _elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  var vlist = makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = maxPos + \"em\"; // A second row is used if necessary to represent the vlist's depth.\n\n  var rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    var emptySpan = makeSpan([], []);\n    var depthStrut = makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = -minPos + \"em\"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    var topStrut = makeSpan([\"vlist-s\"], [new SymbolNode(\"\\u200b\")]);\n    rows = [makeSpan([\"vlist-r\"], [vlist, topStrut]), makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  var vtable = makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nvar makeGlue = (measurement, options) => {\n  // Make an empty span for the space\n  var rule = makeSpan([\"mspace\"], [], options);\n  var size = calculateSize(measurement, options);\n  rule.style.marginRight = size + \"em\";\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  var baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  var fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return baseFontName + \"-\" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nvar fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathnormal\": {\n    variant: \"italic\",\n    fontName: \"Math-Italic\"\n  },\n  // \"boldsymbol\" is missing because they require the use of multiple fonts:\n  // Math-BoldItalic and Main-Bold.  This is handled by a special case in\n  // makeOrd which ends up calling boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nvar svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  var [pathName, width, height] = svgData[value];\n  var path = new PathNode(pathName);\n  var svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return span;\n};\n\nvar buildCommon = {\n  fontMap,\n  makeSymbol,\n  mathsym,\n  makeSpan,\n  makeSvgSpan,\n  makeLineSpan,\n  makeAnchor,\n  makeFragment,\n  wrapFragment,\n  makeVList,\n  makeOrd,\n  makeGlue,\n  staticSvg,\n  svgData,\n  tryCombineChars\n};\n\n/**\n * Describes spaces between different classes of atoms.\n */\nvar thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nvar mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nvar thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nvar spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nvar tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n\n/** Context provided to function handlers for error messages. */\n// Note: reverse the order of the return type union will cause a flow error.\n// See https://github.com/facebook/flow/issues/3663.\n// More general version of `HtmlBuilder` for nodes (e.g. \\sum, accent types)\n// whose presence impacts super/subscripting. In this case, ParseNode<\"supsub\">\n// delegates its HTML building to the HtmlBuilder corresponding to these nodes.\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  var {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of functions\n  var data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    allowedInArgument: !!props.allowedInArgument,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    primitive: !!props.primitive,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  var {\n    type,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref2;\n  defineFunction({\n    type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n\n    handler() {\n      throw new Error('Should never be called.');\n    },\n\n    htmlBuilder,\n    mathmlBuilder\n  });\n}\nvar normalizeArgument = function normalizeArgument(arg) {\n  return arg.type === \"ordgroup\" && arg.body.length === 1 ? arg.body[0] : arg;\n}; // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nvar ordargument = function ordargument(arg) {\n  return arg.type === \"ordgroup\" ? arg.body : [arg];\n};\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\nvar makeSpan$1 = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nvar binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nvar styleMap = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\nvar DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  var groups = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    var output = buildGroup(expression[i], options);\n\n    if (output instanceof DocumentFragment) {\n      var children = output.children;\n      groups.push(...children);\n    } else {\n      groups.push(output);\n    }\n  } // Combine consecutive domTree.symbolNodes into a single symbolNode.\n\n\n  buildCommon.tryCombineChars(groups); // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  var glueOptions = options;\n\n  if (expression.length === 1) {\n    var node = expression[0];\n\n    if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  var dummyPrev = makeSpan$1([surrounding[0] || \"leftmost\"], [], options);\n  var dummyNext = makeSpan$1([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  var isRoot = isRealGroup === \"root\";\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    var prevType = prev.classes[0];\n    var type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    var prevType = getTypeOfDomTree(prev);\n    var type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    var space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nvar traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next, isRoot) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  var i = 0;\n\n  for (; i < nodes.length; i++) {\n    var node = nodes[i];\n    var partialGroup = checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      // $FlowFixMe: make nodes a $ReadOnlyArray by returning a new array\n      traverseNonSpaceNodes(partialGroup.children, callback, prev, null, isRoot);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    var nonspace = !node.hasClass(\"mspace\");\n\n    if (nonspace) {\n      var result = callback(node, prev.node);\n\n      if (result) {\n        if (prev.insertAfter) {\n          prev.insertAfter(result);\n        } else {\n          // insert at front\n          nodes.unshift(result);\n          i++;\n        }\n      }\n    }\n\n    if (nonspace) {\n      prev.node = node;\n    } else if (isRoot && node.hasClass(\"newline\")) {\n      prev.node = makeSpan$1([\"leftmost\"]); // treat like beginning of line\n    }\n\n    prev.insertAfter = (index => n => {\n      nodes.splice(index + 1, 0, n);\n      i++;\n    })(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nvar checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof DocumentFragment || node instanceof Anchor || node instanceof Span && node.hasClass(\"enclosing\")) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nvar getOutermostNode = function getOutermostNode(node, side) {\n  var partialGroup = checkPartialGroup(node);\n\n  if (partialGroup) {\n    var children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return makeSpan$1(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nvar buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return makeSpan$1();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    var groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = makeSpan$1(options.sizingClasses(baseOptions), [groupNode], options);\n      var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  var body = makeSpan$1([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n\n  var strut = makeSpan$1([\"strut\"]);\n  strut.style.height = body.height + body.depth + \"em\";\n  strut.style.verticalAlign = -body.depth + \"em\";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  var tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  var expression = buildExpression(tree, options, \"root\");\n  var eqnNum;\n\n  if (expression.length === 2 && expression[1].hasClass(\"tag\")) {\n    // An environment with automatic equation numbers, e.g. {gather}.\n    eqnNum = expression.pop();\n  }\n\n  var children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  var parts = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      var nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  var tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  } else if (eqnNum) {\n    children.push(eqnNum);\n  }\n\n  var htmlNode = makeSpan$1([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    var strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n    strut.style.verticalAlign = -htmlNode.depth + \"em\";\n  }\n\n  return htmlNode;\n}\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nclass MathNode {\n  constructor(type, children, classes) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.classes = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n    this.classes = classes || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    if (this.classes.length > 0) {\n      node.className = createClass(this.classes);\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    var markup = \"<\" + this.type; // Add the attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    if (this.classes.length > 0) {\n      markup += \" class =\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n\n\n  toText() {\n    return this.children.map(child => child.toText()).join(\"\");\n  }\n\n}\n/**\n * This node represents a piece of text.\n */\n\nclass TextNode {\n  constructor(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n\n\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n\n\n  toText() {\n    return this.text;\n  }\n\n}\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nclass SpaceNode {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  constructor(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200a\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200a\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200a\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205f\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", this.width + \"em\");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    if (this.character) {\n      return \"<mtext>\" + this.character + \"</mtext>\";\n    } else {\n      return \"<mspace width=\\\"\" + this.width + \"em\\\"/>\";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n\n\n  toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  }\n\n}\n\nvar mathMLTree = {\n  MathNode,\n  TextNode,\n  SpaceNode,\n  newDocumentFragment\n};\n\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function makeText(text, mode, options) {\n  if (symbols[mode][text] && symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n    text = symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nvar makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nvar getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  var font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  var mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return group.type === \"textord\" ? \"bold\" : \"bold-italic\";\n  } else if (font === \"mathbf\") {\n    return \"bold\";\n  } else if (font === \"mathbb\") {\n    return \"double-struck\";\n  } else if (font === \"mathfrak\") {\n    return \"fraktur\";\n  } else if (font === \"mathscr\" || font === \"mathcal\") {\n    // MathML makes no distinction between script and caligrahpic\n    return \"script\";\n  } else if (font === \"mathsf\") {\n    return \"sans-serif\";\n  } else if (font === \"mathtt\") {\n    return \"monospace\";\n  }\n\n  var text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (symbols[mode][text] && symbols[mode][text].replace) {\n    text = symbols[mode][text].replace;\n  }\n\n  var fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nvar buildExpression$1 = function buildExpression(expression, options, isOrdgroup) {\n  if (expression.length === 1) {\n    var group = buildGroup$1(expression[0], options);\n\n    if (isOrdgroup && group instanceof MathNode && group.type === \"mo\") {\n      // When TeX writers want to suppress spacing on an operator,\n      // they often put the operator by itself inside braces.\n      group.setAttribute(\"lspace\", \"0em\");\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n\n    return [group];\n  }\n\n  var groups = [];\n  var lastGroup;\n\n  for (var i = 0; i < expression.length; i++) {\n    var _group = buildGroup$1(expression[i], options);\n\n    if (_group instanceof MathNode && lastGroup instanceof MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (_group.type === 'mtext' && lastGroup.type === 'mtext' && _group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate adjacent <mn>s\n      } else if (_group.type === 'mn' && lastGroup.type === 'mn') {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (_group.type === 'mi' && _group.children.length === 1 && lastGroup.type === 'mn') {\n        var child = _group.children[0];\n\n        if (child instanceof TextNode && child.text === '.') {\n          lastGroup.children.push(..._group.children);\n          continue;\n        }\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        var lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof TextNode && lastChild.text === '\\u0338' && (_group.type === 'mo' || _group.type === 'mi' || _group.type === 'mn')) {\n          var _child = _group.children[0];\n\n          if (_child instanceof TextNode && _child.text.length > 0) {\n            // Overlay with combining character long solidus\n            _child.text = _child.text.slice(0, 1) + \"\\u0338\" + _child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(_group);\n    lastGroup = _group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nvar buildExpressionRow = function buildExpressionRow(expression, options, isOrdgroup) {\n  return makeRow(buildExpression$1(expression, options, isOrdgroup));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nvar buildGroup$1 = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    var result = _mathmlGroupBuilders[group.type](group, options); // $FlowFixMe\n\n    return result;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options, isDisplayMode, forMathmlOnly) {\n  var expression = buildExpression$1(tree, options); // TODO: Make a pass thru the MathML similar to buildHTML.traverseNonSpaceNodes\n  // and add spacing nodes. This is necessary only adjacent to math operators\n  // like \\sin or \\lim or to subsup elements that contain math operators.\n  // MathML takes care of the other spacing issues.\n  // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  var wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  var math = new mathMLTree.MathNode(\"math\", [semantics]);\n  math.setAttribute(\"xmlns\", \"http://www.w3.org/1998/Math/MathML\");\n\n  if (isDisplayMode) {\n    math.setAttribute(\"display\", \"block\");\n  } // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n\n\n  var wrapperClass = forMathmlOnly ? \"katex\" : \"katex-mathml\"; // $FlowFixMe\n\n  return buildCommon.makeSpan([wrapperClass], [math]);\n}\n\nvar optionsFromSettings = function optionsFromSettings(settings) {\n  return new Options({\n    style: settings.displayMode ? Style$1.DISPLAY : Style$1.TEXT,\n    maxSize: settings.maxSize,\n    minRuleThickness: settings.minRuleThickness\n  });\n};\n\nvar displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    var classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nvar buildTree = function buildTree(tree, expression, settings) {\n  var options = optionsFromSettings(settings);\n  var katexNode;\n\n  if (settings.output === \"mathml\") {\n    return buildMathML(tree, expression, options, settings.displayMode, true);\n  } else if (settings.output === \"html\") {\n    var htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  } else {\n    var mathMLNode = buildMathML(tree, expression, options, settings.displayMode, false);\n\n    var _htmlNode = buildHTML(tree, options);\n\n    katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, _htmlNode]);\n  }\n\n  return displayWrap(katexNode, settings);\n};\nvar buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  var options = optionsFromSettings(settings);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return displayWrap(katexNode, settings);\n};\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\nvar stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"ˇ\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  undergroup: \"\\u23e1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xrightleftharpoons: \"\\u21cc\",\n  xleftrightharpoons: \"\\u21cb\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21c4\",\n  xrightleftarrows: \"\\u21c4\",\n  xrightequilibrium: \"\\u21cc\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21cb\",\n  // None better available.\n  \"\\\\cdrightarrow\": \"\\u2192\",\n  \"\\\\cdleftarrow\": \"\\u2190\",\n  \"\\\\cdlongequal\": \"=\"\n};\n\nvar mathMLnode = function mathMLnode(label) {\n  var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.replace(/^\\\\/, '')])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nvar katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  \"\\\\cdrightarrow\": [[\"rightarrow\"], 3.0, 522, \"xMaxYMin\"],\n  // CD minwwidth2.5pc\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  \"\\\\cdleftarrow\": [[\"leftarrow\"], 3.0, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  \"\\\\cdlongequal\": [[\"longequal\"], 3.0, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nvar svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    var viewBoxWidth = 400000; // default\n\n    var label = group.label.substr(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      // $FlowFixMe\n      var grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      var numChars = groupLength(grp.base);\n      var viewBoxHeight;\n      var pathName;\n\n      var _height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          _height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          _height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      var path = new PathNode(pathName);\n      var svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": _height + \"em\",\n        \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height: _height\n      };\n    } else {\n      var spans = [];\n      var data = katexImagesData[label];\n      var [paths, _minWidth, _viewBoxHeight] = data;\n\n      var _height2 = _viewBoxHeight / 1000;\n\n      var numSvgChildren = paths.length;\n      var widthClasses;\n      var aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        var align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n      }\n\n      for (var i = 0; i < numSvgChildren; i++) {\n        var _path = new PathNode(paths[i]);\n\n        var _svgNode = new SvgNode([_path], {\n          \"width\": \"400em\",\n          \"height\": _height2 + \"em\",\n          \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n\n        var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span: _span,\n            minWidth: _minWidth,\n            height: _height2\n          };\n        } else {\n          _span.style.height = _height2 + \"em\";\n          spans.push(_span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth: _minWidth,\n        height: _height2\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  var {\n    span,\n    minWidth,\n    height\n  } = buildSvgSpan_(); // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n  span.height = height;\n  span.style.height = height + \"em\";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + \"em\";\n  }\n\n  return span;\n};\n\nvar encloseSpan = function encloseSpan(inner, label, topPad, bottomPad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, \\fbox, or \\angl\n  var img;\n  var totalHeight = inner.height + inner.depth + topPad + bottomPad;\n\n  if (/fbox|color|angl/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      var color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    var lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    var svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": totalHeight + \"em\"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + \"em\";\n  return img;\n};\n\nvar stretchy = {\n  encloseSpan,\n  mathMLnode,\n  svgSpan\n};\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  if (!node || node.type !== type) {\n    throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n  } // $FlowFixMe, >=0.125\n\n\n  return node;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  var typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\n// also \"supsub\" since an accent can affect super/subscripting.\nvar htmlBuilder = (grp, options) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  var base;\n  var group;\n  var supSubGroup;\n\n  if (grp && grp.type === \"supsub\") {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(grp.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    grp.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildGroup(grp, options)); // reset original base\n\n    grp.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  var body = buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  var mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  var skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    var baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    var baseGroup = buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  var clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  var accentBody;\n\n  if (!group.isStretchy) {\n    var accent;\n    var width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeOrd({\n        mode: group.mode,\n        text: group.label\n      }, options, \"textord\");\n      accent = assertSymbolDomNode(accent); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    var accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    var left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + \"em\"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: \"calc(100% - \" + 2 * skew + \"em)\",\n          marginLeft: 2 * skew + \"em\"\n        } : undefined\n      }]\n    }, options);\n  }\n\n  var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nvar mathmlBuilder = (group, options) => {\n  var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n  var node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(accent => \"\\\\\" + accent).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    var base = normalizeArgument(args[0]);\n    var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    // unless in strict mode\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    var base = args[0];\n    var mode = context.parser.mode;\n\n    if (mode === \"math\") {\n      context.parser.settings.reportNonstrict(\"mathVsTextAccents\", \"LaTeX's accent \" + context.funcName + \" works only in text mode\");\n      mode = \"text\";\n    }\n\n    return {\n      type: \"accent\",\n      mode: mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // Treat under accents much like underlines.\n    var innerGroup = buildGroup(group.base, options);\n    var accentBody = stretchy.svgSpan(group, options);\n    var kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var accentNode = stretchy.mathMLnode(group.label);\n    var node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n\n// Helper function\nvar paddedNode = group => {\n  var node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\", // The next 3 functions are here only to support the {CD} environment.\n  \"\\\\\\\\cdrightarrow\", \"\\\\\\\\cdleftarrow\", \"\\\\\\\\cdlongequal\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder(group, options) {\n    var style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildCommon.wrapFragment(buildGroup(group.body, newOptions, options), options);\n    var arrowPrefix = group.label.slice(0, 2) === \"\\\\x\" ? \"x\" : \"cd\";\n    upperGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    var lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    }\n\n    var arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    var vlist;\n\n    if (lowerGroup) {\n      var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var arrowNode = stretchy.mathMLnode(group.label);\n    arrowNode.setAttribute(\"minsize\", group.label.charAt(0) === \"x\" ? \"1.75em\" : \"3.0em\");\n    var node;\n\n    if (group.body) {\n      var upperNode = paddedNode(buildGroup$1(group.body, options));\n\n      if (group.below) {\n        var lowerNode = paddedNode(buildGroup$1(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      var _lowerNode = paddedNode(buildGroup$1(group.below, options));\n\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, _lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n\n});\n\nvar cdArrowFunctionName = {\n  \">\": \"\\\\\\\\cdrightarrow\",\n  \"<\": \"\\\\\\\\cdleftarrow\",\n  \"=\": \"\\\\\\\\cdlongequal\",\n  \"A\": \"\\\\uparrow\",\n  \"V\": \"\\\\downarrow\",\n  \"|\": \"\\\\Vert\",\n  \".\": \"no arrow\"\n};\n\nvar newCell = () => {\n  // Create an empty cell, to be filled below with parse nodes.\n  // The parseTree from this module must be constructed like the\n  // one created by parseArray(), so an empty CD cell must\n  // be a ParseNode<\"styling\">. And CD is always displaystyle.\n  // So these values are fixed and flow can do implicit typing.\n  return {\n    type: \"styling\",\n    body: [],\n    mode: \"math\",\n    style: \"display\"\n  };\n};\n\nvar isStartOfArrow = node => {\n  return node.type === \"textord\" && node.text === \"@\";\n};\n\nvar isLabelEnd = (node, endChar) => {\n  return (node.type === \"mathord\" || node.type === \"atom\") && node.text === endChar;\n};\n\nfunction cdArrow(arrowChar, labels, parser) {\n  // Return a parse tree of an arrow and its labels.\n  // This acts in a way similar to a macro expansion.\n  var funcName = cdArrowFunctionName[arrowChar];\n\n  switch (funcName) {\n    case \"\\\\\\\\cdrightarrow\":\n    case \"\\\\\\\\cdleftarrow\":\n      return parser.callFunction(funcName, [labels[0]], [labels[1]]);\n\n    case \"\\\\uparrow\":\n    case \"\\\\downarrow\":\n      {\n        var leftLabel = parser.callFunction(\"\\\\\\\\cdleft\", [labels[0]], []);\n        var bareArrow = {\n          type: \"atom\",\n          text: funcName,\n          mode: \"math\",\n          family: \"rel\"\n        };\n        var sizedArrow = parser.callFunction(\"\\\\Big\", [bareArrow], []);\n        var rightLabel = parser.callFunction(\"\\\\\\\\cdright\", [labels[1]], []);\n        var arrowGroup = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: [leftLabel, sizedArrow, rightLabel]\n        };\n        return parser.callFunction(\"\\\\\\\\cdparent\", [arrowGroup], []);\n      }\n\n    case \"\\\\\\\\cdlongequal\":\n      return parser.callFunction(\"\\\\\\\\cdlongequal\", [], []);\n\n    case \"\\\\Vert\":\n      {\n        var arrow = {\n          type: \"textord\",\n          text: \"\\\\Vert\",\n          mode: \"math\"\n        };\n        return parser.callFunction(\"\\\\Big\", [arrow], []);\n      }\n\n    default:\n      return {\n        type: \"textord\",\n        text: \" \",\n        mode: \"math\"\n      };\n  }\n}\n\nfunction parseCD(parser) {\n  // Get the array's parse nodes with \\\\ temporarily mapped to \\cr.\n  var parsedRows = [];\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  parser.gullet.beginGroup();\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Get the parse nodes for the next row.\n    parsedRows.push(parser.parseExpression(false, \"\\\\\\\\\"));\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    var next = parser.fetch().text;\n\n    if (next === \"&\" || next === \"\\\\\\\\\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      if (parsedRows[parsedRows.length - 1].length === 0) {\n        parsedRows.pop(); // final row ended in \\\\\n      }\n\n      break;\n    } else {\n      throw new ParseError(\"Expected \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  var row = [];\n  var body = [row]; // Loop thru the parse nodes. Collect them into cells and arrows.\n\n  for (var i = 0; i < parsedRows.length; i++) {\n    // Start a new row.\n    var rowNodes = parsedRows[i]; // Create the first cell.\n\n    var cell = newCell();\n\n    for (var j = 0; j < rowNodes.length; j++) {\n      if (!isStartOfArrow(rowNodes[j])) {\n        // If a parseNode is not an arrow, it goes into a cell.\n        cell.body.push(rowNodes[j]);\n      } else {\n        // Parse node j is an \"@\", the start of an arrow.\n        // Before starting on the arrow, push the cell into `row`.\n        row.push(cell); // Now collect parseNodes into an arrow.\n        // The character after \"@\" defines the arrow type.\n\n        j += 1;\n        var arrowChar = assertSymbolNodeType(rowNodes[j]).text; // Create two empty label nodes. We may or may not use them.\n\n        var labels = new Array(2);\n        labels[0] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        };\n        labels[1] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        }; // Process the arrow.\n\n        if (\"=|.\".indexOf(arrowChar) > -1) ; else if (\"<>AV\".indexOf(arrowChar) > -1) {\n          // Four arrows, `@>>>`, `@<<<`, `@AAA`, and `@VVV`, each take\n          // two optional labels. E.g. the right-point arrow syntax is\n          // really:  @>{optional label}>{optional label}>\n          // Collect parseNodes into labels.\n          for (var labelNum = 0; labelNum < 2; labelNum++) {\n            var inLabel = true;\n\n            for (var k = j + 1; k < rowNodes.length; k++) {\n              if (isLabelEnd(rowNodes[k], arrowChar)) {\n                inLabel = false;\n                j = k;\n                break;\n              }\n\n              if (isStartOfArrow(rowNodes[k])) {\n                throw new ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[k]);\n              }\n\n              labels[labelNum].body.push(rowNodes[k]);\n            }\n\n            if (inLabel) {\n              // isLabelEnd never returned a true.\n              throw new ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[j]);\n            }\n          }\n        } else {\n          throw new ParseError(\"Expected one of \\\"<>AV=|.\\\" after @\", rowNodes[j]);\n        } // Now join the arrow to its labels.\n\n\n        var arrow = cdArrow(arrowChar, labels, parser); // Wrap the arrow in  ParseNode<\"styling\">.\n        // This is done to match parseArray() behavior.\n\n        var wrappedArrow = {\n          type: \"styling\",\n          body: [arrow],\n          mode: \"math\",\n          style: \"display\" // CD is always displaystyle.\n\n        };\n        row.push(wrappedArrow); // In CD's syntax, cells are implicit. That is, everything that\n        // is not an arrow gets collected into a cell. So create an empty\n        // cell now. It will collect upcoming parseNodes.\n\n        cell = newCell();\n      }\n    }\n\n    if (i % 2 === 0) {\n      // Even-numbered rows consist of: cell, arrow, cell, arrow, ... cell\n      // The last cell is not yet pushed into `row`, so:\n      row.push(cell);\n    } else {\n      // Odd-numbered rows consist of: vert arrow, empty cell, ... vert arrow\n      // Remove the empty cell that was placed at the beginning of `row`.\n      row.shift();\n    }\n\n    row = [];\n    body.push(row);\n  } // End row group\n\n\n  parser.gullet.endGroup(); // End array group defining \\\\\n\n  parser.gullet.endGroup(); // define column separation.\n\n  var cols = new Array(body[0].length).fill({\n    type: \"align\",\n    align: \"c\",\n    pregap: 0.25,\n    // CD package sets \\enskip between columns.\n    postgap: 0.25 // So pre and post each get half an \\enskip, i.e. 0.25em.\n\n  });\n  return {\n    type: \"array\",\n    mode: \"math\",\n    body,\n    arraystretch: 1,\n    addJot: true,\n    rowGaps: [null],\n    cols,\n    colSeparationType: \"CD\",\n    hLinesBeforeRow: new Array(body.length + 1).fill([])\n  };\n} // The functions below are not available for general use.\n// They are here only for internal use by the {CD} environment in placing labels\n// next to vertical arrows.\n// We don't need any such functions for horizontal arrows because we can reuse\n// the functionality that already exists for extensible arrows.\n\ndefineFunction({\n  type: \"cdlabel\",\n  names: [\"\\\\\\\\cdleft\", \"\\\\\\\\cdright\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"cdlabel\",\n      mode: parser.mode,\n      side: funcName.slice(4),\n      label: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var newOptions = options.havingStyle(options.style.sup());\n    var label = buildCommon.wrapFragment(buildGroup(group.label, newOptions, options), options);\n    label.classes.push(\"cd-label-\" + group.side);\n    label.style.bottom = 0.8 - label.depth + \"em\"; // Zero out label height & depth, so vertical align of arrow is set\n    // by the arrow height, not by the label.\n\n    label.height = 0;\n    label.depth = 0;\n    return label;\n  },\n\n  mathmlBuilder(group, options) {\n    var label = new mathMLTree.MathNode(\"mrow\", [buildGroup$1(group.label, options)]);\n    label = new mathMLTree.MathNode(\"mpadded\", [label]);\n    label.setAttribute(\"width\", \"0\");\n\n    if (group.side === \"left\") {\n      label.setAttribute(\"lspace\", \"-1width\");\n    } // We have to guess at vertical alignment. We know the arrow is 1.8em tall,\n    // But we don't know the height or depth of the label.\n\n\n    label.setAttribute(\"voffset\", \"0.7em\");\n    label = new mathMLTree.MathNode(\"mstyle\", [label]);\n    label.setAttribute(\"displaystyle\", \"false\");\n    label.setAttribute(\"scriptlevel\", \"1\");\n    return label;\n  }\n\n});\ndefineFunction({\n  type: \"cdlabelparent\",\n  names: [\"\\\\\\\\cdparent\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser\n    } = _ref2;\n    return {\n      type: \"cdlabelparent\",\n      mode: parser.mode,\n      fragment: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Wrap the vertical arrow and its labels.\n    // The parent gets position: relative. The child gets position: absolute.\n    // So CSS can locate the label correctly.\n    var parent = buildCommon.wrapFragment(buildGroup(group.fragment, options), options);\n    parent.classes.push(\"cd-vert-arrow\");\n    return parent;\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", [buildGroup$1(group.fragment, options)]);\n  }\n\n});\n\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var arg = assertNodeType(args[0], \"ordgroup\");\n    var group = arg.body;\n    var number = \"\";\n\n    for (var i = 0; i < group.length; i++) {\n      var node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    var code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new ParseError(\"\\\\@char has non-numeric argument \" + number);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n\n});\n\nvar htmlBuilder$1 = (group, options) => {\n  var elements = buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nvar mathmlBuilder$1 = (group, options) => {\n  var inner = buildExpression$1(group.body, options.withColor(group.color));\n  var node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"original\"]\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    argTypes: [\"color\"]\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser,\n      breakOnTokenText\n    } = _ref2;\n    var color = assertNodeType(args[0], \"color-token\").color; // Set macro \\current@color in current namespace to store the current\n    // color, mimicking the behavior of color.sty.\n    // This is currently used just to correctly color a \\right\n    // that follows a \\color command.\n\n    parser.gullet.macros.set(\"\\\\current@color\", color); // Parse out the implicit body that should be colored.\n\n    var body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\n\n// Row breaks within tabular environments, and line breaks at top level\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\\\\\\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var size = optArgs[0];\n    var newLine = !parser.settings.displayMode || !parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\");\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder(group, options) {\n    var span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = calculateSize(group.size, options) + \"em\";\n      }\n    }\n\n    return span;\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", calculateSize(group.size, options) + \"em\");\n      }\n    }\n\n    return node;\n  }\n\n});\n\nvar globalMap = {\n  \"\\\\global\": \"\\\\global\",\n  \"\\\\long\": \"\\\\\\\\globallong\",\n  \"\\\\\\\\globallong\": \"\\\\\\\\globallong\",\n  \"\\\\def\": \"\\\\gdef\",\n  \"\\\\gdef\": \"\\\\gdef\",\n  \"\\\\edef\": \"\\\\xdef\",\n  \"\\\\xdef\": \"\\\\xdef\",\n  \"\\\\let\": \"\\\\\\\\globallet\",\n  \"\\\\futurelet\": \"\\\\\\\\globalfuture\"\n};\n\nvar checkControlSequence = tok => {\n  var name = tok.text;\n\n  if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n    throw new ParseError(\"Expected a control sequence\", tok);\n  }\n\n  return name;\n};\n\nvar getRHS = parser => {\n  var tok = parser.gullet.popToken();\n\n  if (tok.text === \"=\") {\n    // consume optional equals\n    tok = parser.gullet.popToken();\n\n    if (tok.text === \" \") {\n      // consume one optional space\n      tok = parser.gullet.popToken();\n    }\n  }\n\n  return tok;\n};\n\nvar letCommand = (parser, name, tok, global) => {\n  var macro = parser.gullet.macros.get(tok.text);\n\n  if (macro == null) {\n    // don't expand it later even if a macro with the same name is defined\n    // e.g., \\let\\foo=\\frac \\def\\frac{\\relax} \\frac12\n    tok.noexpand = true;\n    macro = {\n      tokens: [tok],\n      numArgs: 0,\n      // reproduce the same behavior in expansion\n      unexpandable: !parser.gullet.isExpandable(tok.text)\n    };\n  }\n\n  parser.gullet.macros.set(name, macro, global);\n}; // <assignment> -> <non-macro assignment>|<macro assignment>\n// <non-macro assignment> -> <simple assignment>|\\global<non-macro assignment>\n// <macro assignment> -> <definition>|<prefix><macro assignment>\n// <prefix> -> \\global|\\long|\\outer\n\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\global\", \"\\\\long\", \"\\\\\\\\globallong\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    parser.consumeSpaces();\n    var token = parser.fetch();\n\n    if (globalMap[token.text]) {\n      // KaTeX doesn't have \\par, so ignore \\long\n      if (funcName === \"\\\\global\" || funcName === \"\\\\\\\\globallong\") {\n        token.text = globalMap[token.text];\n      }\n\n      return assertNodeType(parser.parseFunction(), \"internal\");\n    }\n\n    throw new ParseError(\"Invalid token after macro prefix\", token);\n  }\n\n}); // Basic support for macro definitions: \\def, \\gdef, \\edef, \\xdef\n// <definition> -> <def><control sequence><definition text>\n// <def> -> \\def|\\gdef|\\edef|\\xdef\n// <definition text> -> <parameter text><left brace><balanced text><right brace>\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\def\", \"\\\\gdef\", \"\\\\edef\", \"\\\\xdef\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref2) {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var tok = parser.gullet.popToken();\n    var name = tok.text;\n\n    if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n      throw new ParseError(\"Expected a control sequence\", tok);\n    }\n\n    var numArgs = 0;\n    var insert;\n    var delimiters = [[]]; // <parameter text> contains no braces\n\n    while (parser.gullet.future().text !== \"{\") {\n      tok = parser.gullet.popToken();\n\n      if (tok.text === \"#\") {\n        // If the very last character of the <parameter text> is #, so that\n        // this # is immediately followed by {, TeX will behave as if the {\n        // had been inserted at the right end of both the parameter text\n        // and the replacement text.\n        if (parser.gullet.future().text === \"{\") {\n          insert = parser.gullet.future();\n          delimiters[numArgs].push(\"{\");\n          break;\n        } // A parameter, the first appearance of # must be followed by 1,\n        // the next by 2, and so on; up to nine #’s are allowed\n\n\n        tok = parser.gullet.popToken();\n\n        if (!/^[1-9]$/.test(tok.text)) {\n          throw new ParseError(\"Invalid argument number \\\"\" + tok.text + \"\\\"\");\n        }\n\n        if (parseInt(tok.text) !== numArgs + 1) {\n          throw new ParseError(\"Argument number \\\"\" + tok.text + \"\\\" out of order\");\n        }\n\n        numArgs++;\n        delimiters.push([]);\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Expected a macro definition\");\n      } else {\n        delimiters[numArgs].push(tok.text);\n      }\n    } // replacement text, enclosed in '{' and '}' and properly nested\n\n\n    var {\n      tokens\n    } = parser.gullet.consumeArg();\n\n    if (insert) {\n      tokens.unshift(insert);\n    }\n\n    if (funcName === \"\\\\edef\" || funcName === \"\\\\xdef\") {\n      tokens = parser.gullet.expandTokens(tokens);\n      tokens.reverse(); // to fit in with stack order\n    } // Final arg is the expansion of the macro\n\n\n    parser.gullet.macros.set(name, {\n      tokens,\n      numArgs,\n      delimiters\n    }, funcName === globalMap[funcName]);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // <simple assignment> -> <let assignment>\n// <let assignment> -> \\futurelet<control sequence><token><token>\n//     | \\let<control sequence><equals><one optional space><token>\n// <equals> -> <optional spaces>|<optional spaces>=\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\let\", \"\\\\\\\\globallet\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    var name = checkControlSequence(parser.gullet.popToken());\n    parser.gullet.consumeSpaces();\n    var tok = getRHS(parser);\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globallet\");\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // ref: https://www.tug.org/TUGboat/tb09-3/tb22bechtolsheim.pdf\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\futurelet\", \"\\\\\\\\globalfuture\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref4) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    var name = checkControlSequence(parser.gullet.popToken());\n    var middle = parser.gullet.popToken();\n    var tok = parser.gullet.popToken();\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globalfuture\");\n    parser.gullet.pushToken(tok);\n    parser.gullet.pushToken(middle);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n});\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function getMetrics(symbol, font, mode) {\n  var replace = symbols.math[symbol] && symbols.math[symbol].replace;\n  var metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nvar styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  var newOptions = options.havingBaseStyle(toStyle);\n  var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n  var newOptions = options.havingBaseStyle(style);\n  var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = shift + \"em\";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nvar makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  var span = styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nvar mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nvar makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  var inner = mathrmSize(delim, size, mode, options);\n  var span = styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), Style$1.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, Style$1.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make a span from a font glyph with the given offset and in the given font.\n * This is used in makeStackedDelim to make the stacking pieces for the delimiter.\n */\n\n\nvar makeGlyphSpan = function makeGlyphSpan(symbol, font, mode) {\n  var sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  var corner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: corner\n  };\n};\n\nvar makeInner = function makeInner(ch, height, options) {\n  // Create a span with inline SVG for the inner part of a tall stacked delimiter.\n  var width = fontMetricsData['Size4-Regular'][ch.charCodeAt(0)] ? fontMetricsData['Size4-Regular'][ch.charCodeAt(0)][4].toFixed(3) : fontMetricsData['Size1-Regular'][ch.charCodeAt(0)][4].toFixed(3);\n  var path = new PathNode(\"inner\", innerPath(ch, Math.round(1000 * height)));\n  var svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + Math.round(1000 * height),\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = buildCommon.makeSvgSpan([], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return {\n    type: \"elem\",\n    elem: span\n  };\n}; // Helpers for makeStackedDelim\n\n\nvar lapInEms = 0.008;\nvar lap = {\n  type: \"kern\",\n  size: -1 * lapInEms\n};\nvar verts = [\"|\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\vert\"];\nvar doubleVerts = [\"\\\\|\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\Vert\"];\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\nvar makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  var top;\n  var middle;\n  var repeat;\n  var bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  var font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23d0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23d0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23d0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (utils.contains(verts, delim)) {\n    repeat = \"\\u2223\";\n  } else if (utils.contains(doubleVerts, delim)) {\n    repeat = \"\\u2225\";\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23a1\";\n    repeat = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23a4\";\n    repeat = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230a\") {\n    repeat = top = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23a1\";\n    repeat = bottom = \"\\u23a2\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230b\") {\n    repeat = top = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23a4\";\n    repeat = bottom = \"\\u23a5\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239b\";\n    repeat = \"\\u239c\";\n    bottom = \"\\u239d\";\n    font = \"Size4-Regular\";\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239e\";\n    repeat = \"\\u239f\";\n    bottom = \"\\u23a0\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23a7\";\n    middle = \"\\u23a8\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23ab\";\n    middle = \"\\u23ac\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27ee\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27ef\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23b0\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23b1\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  var topMetrics = getMetrics(top, font, mode);\n  var topHeightTotal = topMetrics.height + topMetrics.depth;\n  var repeatMetrics = getMetrics(repeat, font, mode);\n  var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  var bottomMetrics = getMetrics(bottom, font, mode);\n  var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  var middleHeightTotal = 0;\n  var middleFactor = 1;\n\n  if (middle !== null) {\n    var middleMetrics = getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  var repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal))); // Compute the total height of the delimiter including all the symbols\n\n  var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  var axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the pieces of the stacked delimiter\n\n  var stack = []; // Add the bottom symbol\n\n  stack.push(makeGlyphSpan(bottom, font, mode));\n  stack.push(lap); // overlap\n\n  if (middle === null) {\n    // The middle section will be an SVG. Make it an extra 0.016em tall.\n    // We'll overlap by 0.008em at top and bottom.\n    var innerHeight = realHeightTotal - topHeightTotal - bottomHeightTotal + 2 * lapInEms;\n    stack.push(makeInner(repeat, innerHeight, options));\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    var _innerHeight = (realHeightTotal - topHeightTotal - bottomHeightTotal - middleHeightTotal) / 2 + 2 * lapInEms;\n\n    stack.push(makeInner(repeat, _innerHeight, options)); // Now insert the middle of the brace.\n\n    stack.push(lap);\n    stack.push(makeGlyphSpan(middle, font, mode));\n    stack.push(lap);\n    stack.push(makeInner(repeat, _innerHeight, options));\n  } // Add the top symbol\n\n\n  stack.push(lap);\n  stack.push(makeGlyphSpan(top, font, mode)); // Finally, build the vlist\n\n  var newOptions = options.havingBaseStyle(Style$1.TEXT);\n  var inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: stack\n  }, newOptions);\n  return styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), Style$1.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, extraViniculum, options) {\n  var path = sqrtPath(sqrtName, extraViniculum, viewBoxHeight);\n  var pathNode = new PathNode(sqrtName, path);\n  var svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": height + \"em\",\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  var newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  var sizeMultiplier = newOptions.sizeMultiplier; // default\n  // The standard sqrt SVGs each have a 0.04em thick viniculum.\n  // If Settings.minRuleThickness is larger than that, we add extraViniculum.\n\n  var extraViniculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness); // Create a span containing an SVG image of a sqrt symbol.\n\n  var span;\n  var spanHeight = 0;\n  var texHeight = 0;\n  var viewBoxHeight = 0;\n  var advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    // 1000 unit normal glyph height.\n    viewBoxHeight = 1000 + 1000 * extraViniculum + vbPad;\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + extraViniculum + emPad) / sizeMultiplier;\n    texHeight = (1.00 + extraViniculum) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = (sizeToMaxHeight[delim.size] + extraViniculum) / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + extraViniculum + emPad) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + extraViniculum + emPad;\n    texHeight = height + extraViniculum;\n    viewBoxHeight = Math.floor(1000 * height + extraViniculum) + vbPad;\n    span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + \"em\";\n  return {\n    span,\n    advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraViniculum) * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nvar stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\"]; // and delimiters that never stack\n\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nvar makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nvar stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nvar stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nvar delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  var start = Math.min(2, 3 - options.style.size);\n\n  for (var i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    var metrics = getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      var newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nvar makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  var sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  var delimiterFactor = 901;\n  var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\nvar delimiter = {\n  sqrtImage: makeSqrtImage,\n  sizedDelim: makeSizedDelim,\n  sizeToMaxHeight: sizeToMaxHeight,\n  customSizedDelim: makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n};\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nvar delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27e8\", \"\\\\rangle\", \"\\u27e9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  var symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else if (symDelim) {\n    throw new ParseError(\"Invalid delimiter '\" + symDelim.text + \"' after '\" + context.funcName + \"'\", delim);\n  } else {\n    throw new ParseError(\"Invalid delimiter type '\" + delim.type + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: group => {\n    var children = [];\n\n    if (group.delim !== \".\") {\n      children.push(makeText(group.delim, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    node.setAttribute(\"stretchy\", \"true\");\n    node.setAttribute(\"minsize\", delimiter.sizeToMaxHeight[group.size] + \"em\");\n    node.setAttribute(\"maxsize\", delimiter.sizeToMaxHeight[group.size] + \"em\");\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    var color = context.parser.gullet.macros.get(\"\\\\current@color\");\n\n    if (color && typeof color !== \"string\") {\n      throw new ParseError(\"\\\\current@color set to non-string in \\\\right\");\n    }\n\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text,\n      color // undefined if not set via \\color\n\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n    var parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    var body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    var right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim,\n      rightColor: right.color\n    };\n  },\n  htmlBuilder: (group, options) => {\n    assertParsed(group); // Build the inner expression\n\n    var inner = buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false; // Calculate its height and depth\n\n    for (var i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    var leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (var _i = 1; _i < inner.length; _i++) {\n        var middleDelim = inner[_i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        var isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    var rightDelim; // Same for the right delimiter, but using color specified by \\color\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      var colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: (group, options) => {\n    assertParsed(group);\n    var inner = buildExpression$1(group.body, options);\n\n    if (group.left !== \".\") {\n      var leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      var rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n\n      if (group.rightColor) {\n        rightNode.setAttribute(\"mathcolor\", group.rightColor);\n      }\n\n      inner.push(rightNode);\n    }\n\n    return makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      var isMiddle = {\n        delim: group.delim,\n        options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: (group, options) => {\n    // A Firefox \\middle will strech a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    var textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? makeText(\"|\", \"text\") : makeText(group.delim, group.mode);\n    var middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n\nvar htmlBuilder$2 = (group, options) => {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox, \\phase\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  var inner = buildCommon.wrapFragment(buildGroup(group.body, options), options);\n  var label = group.label.substr(1);\n  var scale = options.sizeMultiplier;\n  var img;\n  var imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  var isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else if (label === \"phase\") {\n    // Set a couple of dimensions from the steinmetz package.\n    var lineWeight = calculateSize({\n      number: 0.6,\n      unit: \"pt\"\n    }, options);\n    var clearance = calculateSize({\n      number: 0.35,\n      unit: \"ex\"\n    }, options); // Prevent size changes like \\Huge from affecting line thickness\n\n    var newOptions = options.havingBaseSizing();\n    scale = scale / newOptions.sizeMultiplier;\n    var angleHeight = inner.height + inner.depth + lineWeight + clearance; // Reserve a left pad for the angle.\n\n    inner.style.paddingLeft = angleHeight / 2 + lineWeight + \"em\"; // Create an SVG\n\n    var viewBoxHeight = Math.floor(1000 * angleHeight * scale);\n    var path = phasePath(viewBoxHeight);\n    var svgNode = new SvgNode([new PathNode(\"phase\", path)], {\n      \"width\": \"400em\",\n      \"height\": viewBoxHeight / 1000 + \"em\",\n      \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n      \"preserveAspectRatio\": \"xMinYMin slice\"\n    }); // Wrap it in a span with overflow: hidden.\n\n    img = buildCommon.makeSvgSpan([\"hide-tail\"], [svgNode], options);\n    img.style.height = angleHeight + \"em\";\n    imgShift = inner.depth + lineWeight + clearance;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else if (label === \"angl\") {\n      inner.classes.push(\"anglpad\");\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    var topPad = 0;\n    var bottomPad = 0;\n    var ruleThickness = 0; // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      ruleThickness = Math.max(options.fontMetrics().fboxrule, // default\n      options.minRuleThickness // User override.\n      );\n      topPad = options.fontMetrics().fboxsep + (label === \"colorbox\" ? 0 : ruleThickness);\n      bottomPad = topPad;\n    } else if (label === \"angl\") {\n      ruleThickness = Math.max(options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n      topPad = 4 * ruleThickness; // gap = 3 × line, plus the line itself.\n\n      bottomPad = Math.max(0, 0.25 - inner.depth);\n    } else {\n      topPad = isSingleChar ? 0.2 : 0;\n      bottomPad = topPad;\n    }\n\n    img = stretchy.encloseSpan(inner, label, topPad, bottomPad, options);\n\n    if (/fbox|boxed|fcolorbox/.test(label)) {\n      img.style.borderStyle = \"solid\";\n      img.style.borderWidth = ruleThickness + \"em\";\n    } else if (label === \"angl\" && ruleThickness !== 0.049) {\n      img.style.borderTopWidth = ruleThickness + \"em\";\n      img.style.borderRightWidth = ruleThickness + \"em\";\n    }\n\n    imgShift = inner.depth + bottomPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  var vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    var classes = /cancel|phase/.test(label) ? [\"svg-align\"] : [];\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: classes\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nvar mathmlBuilder$2 = (group, options) => {\n  var fboxsep = 0;\n  var node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildGroup$1(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\phase\":\n      node.setAttribute(\"notation\", \"phasorangle\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\angl\":\n      node.setAttribute(\"notation\", \"actuarial\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm;\n      node.setAttribute(\"width\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"height\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"lspace\", fboxsep + \"pt\"); //\n\n      node.setAttribute(\"voffset\", fboxsep + \"pt\");\n\n      if (group.label === \"\\\\fcolorbox\") {\n        var thk = Math.max(options.fontMetrics().fboxrule, // default\n        options.minRuleThickness // user override\n        );\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"text\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n\n  handler(_ref2, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var borderColor = assertNodeType(args[0], \"color-token\").color;\n    var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    var body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref3, args) {\n    var {\n      parser\n    } = _ref3;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\", \"\\\\phase\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref4, args) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    var body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\angl\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: false\n  },\n\n  handler(_ref5, args) {\n    var {\n      parser\n    } = _ref5;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\angl\",\n      body: args[0]\n    };\n  }\n\n});\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\nfunction defineEnvironment(_ref) {\n  var {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of environments.\n  var data = {\n    type,\n    numArgs: props.numArgs || 0,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n\n// Helper functions\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  var hlineInfo = [];\n  parser.consumeSpaces();\n  var nxt = parser.fetch().text;\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  return hlineInfo;\n}\n\nvar validateAmsEnvironmentContext = context => {\n  var settings = context.parser.settings;\n\n  if (!settings.displayMode) {\n    throw new ParseError(\"{\" + context.envName + \"} can be used only in\" + \" display mode.\");\n  }\n};\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  var {\n    hskipBeforeAndAfter,\n    addJot,\n    cols,\n    arraystretch,\n    colSeparationType,\n    addEqnNum,\n    singleRow,\n    emptySingleRow,\n    maxNumCols,\n    leqno\n  } = _ref;\n  parser.gullet.beginGroup();\n\n  if (!singleRow) {\n    // \\cr is equivalent to \\\\ without the optional size argument (see below)\n    // TODO: provide helpful error when \\cr is used outside array environment\n    parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  } // Get current arraystretch if it's not set by the environment\n\n\n  if (!arraystretch) {\n    var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n      }\n    }\n  } // Start group for first cell\n\n\n  parser.gullet.beginGroup();\n  var row = [];\n  var body = [row];\n  var rowGaps = [];\n  var hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Parse each cell in its own group (namespace)\n    var cell = parser.parseExpression(false, singleRow ? \"\\\\end\" : \"\\\\\\\\\");\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    var next = parser.fetch().text;\n\n    if (next === \"&\") {\n      if (maxNumCols && row.length === maxNumCols) {\n        if (singleRow || colSeparationType) {\n          // {equation} or {split}\n          throw new ParseError(\"Too many tab characters: &\", parser.nextToken);\n        } else {\n          // {array} environment\n          parser.settings.reportNonstrict(\"textEnv\", \"Too few columns \" + \"specified in the {array} column argument.\");\n        }\n      }\n\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.  However, AMS environments keep the\n      // empty row if it's the only one.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0 && (body.length > 1 || !emptySingleRow)) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\\\\\\") {\n      parser.consume();\n      var size = void 0; // \\def\\Let@{\\let\\\\\\math@cr}\n      // \\def\\math@cr{...\\math@cr@}\n      // \\def\\math@cr@{\\new@ifnextchar[\\math@cr@@{\\math@cr@@[\\z@]}}\n      // \\def\\math@cr@@[#1]{...\\math@cr@@@...}\n      // \\def\\math@cr@@@{\\cr}\n\n      if (parser.gullet.future().text !== \" \") {\n        size = parser.parseSizeGroup(true);\n      }\n\n      rowGaps.push(size ? size.value : null); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  } // End cell group\n\n\n  parser.gullet.endGroup(); // End array group defining \\cr\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot,\n    arraystretch,\n    body,\n    cols,\n    rowGaps,\n    hskipBeforeAndAfter,\n    hLinesBeforeRow,\n    colSeparationType,\n    addEqnNum,\n    leqno\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nvar htmlBuilder$3 = function htmlBuilder(group, options) {\n  var r;\n  var c;\n  var nr = group.body.length;\n  var hLinesBeforeRow = group.hLinesBeforeRow;\n  var nc = 0;\n  var body = new Array(nr);\n  var hlines = [];\n  var ruleThickness = Math.max( // From LaTeX \\showthe\\arrayrulewidth. Equals 0.04 em.\n  options.fontMetrics().arrayRuleWidth, options.minRuleThickness // User override.\n  ); // Horizontal spacing\n\n  var pt = 1 / options.fontMetrics().ptPerEm;\n  var arraycolsep = 5 * pt; // default value, i.e. \\arraycolsep in article.cls\n\n  if (group.colSeparationType && group.colSeparationType === \"small\") {\n    // We're in a {smallmatrix}. Default column space is \\thickspace,\n    // i.e. 5/18em = 0.2778em, per amsmath.dtx for {smallmatrix}.\n    // But that needs adjustment because LaTeX applies \\scriptstyle to the\n    // entire array, including the colspace, but this function applies\n    // \\scriptstyle only inside each element.\n    var localMultiplier = options.havingStyle(Style$1.SCRIPT).sizeMultiplier;\n    arraycolsep = 0.2778 * (localMultiplier / options.sizeMultiplier);\n  } // Vertical spacing\n\n\n  var baselineskip = group.colSeparationType === \"CD\" ? calculateSize({\n    number: 3,\n    unit: \"ex\"\n  }, options) : 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  var jot = 3 * pt;\n  var arrayskip = group.arraystretch * baselineskip;\n  var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  var totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (var i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    var inrow = group.body[r];\n    var height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    var depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    var outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      var elt = buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    var rowGap = group.rowGaps[r];\n    var gap = 0;\n\n    if (rowGap) {\n      gap = calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  var colDescriptions = group.cols || [];\n  var cols = [];\n  var colSep;\n  var colDescrNum;\n  var eqnNumSpans = [];\n\n  if (group.addEqnNum) {\n    // An environment with automatic equation numbers.\n    // Create node(s) that will trigger CSS counter increment.\n    for (r = 0; r < nr; ++r) {\n      var rw = body[r];\n      var shift = rw.pos - offset;\n      var eqnTag = buildCommon.makeSpan([\"eqn-num\"], [], options);\n      eqnTag.depth = rw.depth;\n      eqnTag.height = rw.height;\n      eqnNumSpans.push({\n        type: \"elem\",\n        elem: eqnTag,\n        shift\n      });\n    }\n  }\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    var colDescr = colDescriptions[colDescrNum] || {};\n    var firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\" || colDescr.separator === \":\") {\n        var lineType = colDescr.separator === \"|\" ? \"solid\" : \"dashed\";\n        var separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.borderRightWidth = ruleThickness + \"em\";\n        separator.style.borderRightStyle = lineType;\n        separator.style.margin = \"0 -\" + ruleThickness / 2 + \"em\";\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else {\n        throw new ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    var sepwidth = void 0;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n\n    var col = [];\n\n    for (r = 0; r < nr; ++r) {\n      var row = body[r];\n      var elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      var _shift = row.pos - offset;\n\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: _shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    var line = buildCommon.makeLineSpan(\"hline\", options, ruleThickness);\n    var dashes = buildCommon.makeLineSpan(\"hdashline\", options, ruleThickness);\n    var vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      var hline = hlines.pop();\n      var lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  if (!group.addEqnNum) {\n    return buildCommon.makeSpan([\"mord\"], [body], options);\n  } else {\n    var eqnNumCol = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: eqnNumSpans\n    }, options);\n    eqnNumCol = buildCommon.makeSpan([\"tag\"], [eqnNumCol], options);\n    return buildCommon.makeFragment([body, eqnNumCol]);\n  }\n};\n\nvar alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nvar mathmlBuilder$3 = function mathmlBuilder(group, options) {\n  var tbl = [];\n  var glue = new mathMLTree.MathNode(\"mtd\", [], [\"mtr-glue\"]);\n  var tag = new mathMLTree.MathNode(\"mtd\", [], [\"mml-eqn-num\"]);\n\n  for (var i = 0; i < group.body.length; i++) {\n    var rw = group.body[i];\n    var row = [];\n\n    for (var j = 0; j < rw.length; j++) {\n      row.push(new mathMLTree.MathNode(\"mtd\", [buildGroup$1(rw[j], options)]));\n    }\n\n    if (group.addEqnNum) {\n      row.unshift(glue);\n      row.push(glue);\n\n      if (group.leqno) {\n        row.unshift(tag);\n      } else {\n        row.push(tag);\n      }\n    }\n\n    tbl.push(new mathMLTree.MathNode(\"mtr\", row));\n  }\n\n  var table = new mathMLTree.MathNode(\"mtable\", tbl); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found emprically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hines.\n\n  var gap = group.arraystretch === 0.5 ? 0.1 // {smallmatrix}, {subarray}\n  : 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", gap.toFixed(4) + \"em\"); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  var menclose = \"\";\n  var align = \"\";\n\n  if (group.cols && group.cols.length > 0) {\n    // Find column alignment, column spacing, and  vertical lines.\n    var cols = group.cols;\n    var columnLines = \"\";\n    var prevTypeWasAlign = false;\n    var iStart = 0;\n    var iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (var _i = iStart; _i < iEnd; _i++) {\n      if (cols[_i].type === \"align\") {\n        align += alignMap[cols[_i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[_i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[_i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    var _cols = group.cols || [];\n\n    var spacing = \"\";\n\n    for (var _i2 = 1; _i2 < _cols.length; _i2++) {\n      spacing += _i2 % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\" || group.colSeparationType === \"gather\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else if (group.colSeparationType === \"small\") {\n    table.setAttribute(\"columnspacing\", \"0.2778em\");\n  } else if (group.colSeparationType === \"CD\") {\n    table.setAttribute(\"columnspacing\", \"0.5em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  var rowLines = \"\";\n  var hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (var _i3 = 1; _i3 < hlines.length - 1; _i3++) {\n    rowLines += hlines[_i3].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[_i3][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose !== \"\") {\n    table = new mathMLTree.MathNode(\"menclose\", [table]);\n    table.setAttribute(\"notation\", menclose.trim());\n  }\n\n  if (group.arraystretch && group.arraystretch < 1) {\n    // A small array. Wrap in scriptstyle so row gap is not too large.\n    table = new mathMLTree.MathNode(\"mstyle\", [table]);\n    table.setAttribute(\"scriptlevel\", \"1\");\n  }\n\n  return table;\n}; // Convenience function for align, align*, aligned, alignat, alignat*, alignedat.\n\n\nvar alignedHandler = function alignedHandler(context, args) {\n  if (context.envName.indexOf(\"ed\") === -1) {\n    validateAmsEnvironmentContext(context);\n  }\n\n  var cols = [];\n  var separationType = context.envName.indexOf(\"at\") > -1 ? \"alignat\" : \"align\";\n  var res = parseArray(context.parser, {\n    cols,\n    addJot: true,\n    addEqnNum: context.envName === \"align\" || context.envName === \"alignat\",\n    emptySingleRow: true,\n    colSeparationType: separationType,\n    maxNumCols: context.envName === \"split\" ? 2 : undefined,\n    leqno: context.parser.settings.leqno\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  var numMaths;\n  var numCols = 0;\n  var emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n\n  if (args[0] && args[0].type === \"ordgroup\") {\n    var arg0 = \"\";\n\n    for (var i = 0; i < args[0].body.length; i++) {\n      var textord = assertNodeType(args[0].body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  var isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (var _i4 = 1; _i4 < row.length; _i4 += 2) {\n      // Modify ordgroup node within styling node\n      var styling = assertNodeType(row[_i4], \"styling\");\n      var ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n      ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      var curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (var _i5 = 0; _i5 < numCols; ++_i5) {\n    var align = \"r\";\n    var pregap = 0;\n\n    if (_i5 % 2 === 1) {\n      align = \"l\";\n    } else if (_i5 > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[_i5] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    var res = {\n      cols,\n      hskipBeforeAndAfter: true,\n      // \\@preamble in lttab.dtx\n      maxNumCols: cols.length\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n// The mathtools package adds starred versions of the same environments.\n// These have an optional argument to choose left|center|right justification.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\", \"matrix*\", \"pmatrix*\", \"bmatrix*\", \"Bmatrix*\", \"vmatrix*\", \"Vmatrix*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName.replace(\"*\", \"\")]; // \\hskip -\\arraycolsep in amsmath\n\n    var colAlign = \"c\";\n    var payload = {\n      hskipBeforeAndAfter: false,\n      cols: [{\n        type: \"align\",\n        align: colAlign\n      }]\n    };\n\n    if (context.envName.charAt(context.envName.length - 1) === \"*\") {\n      // It's one of the mathtools starred functions.\n      // Parse the optional alignment argument.\n      var parser = context.parser;\n      parser.consumeSpaces();\n\n      if (parser.fetch().text === \"[\") {\n        parser.consume();\n        parser.consumeSpaces();\n        colAlign = parser.fetch().text;\n\n        if (\"lcr\".indexOf(colAlign) === -1) {\n          throw new ParseError(\"Expected l or c or r\", parser.nextToken);\n        }\n\n        parser.consume();\n        parser.consumeSpaces();\n        parser.expect(\"]\");\n        parser.consume();\n        payload.cols = [{\n          type: \"align\",\n          align: colAlign\n        }];\n      }\n    }\n\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName)); // Populate cols with the correct number of column alignment specs.\n\n    var numCols = Math.max(0, ...res.body.map(row => row.length));\n    res.cols = new Array(numCols).fill({\n      type: \"align\",\n      align: colAlign\n    });\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1],\n      rightColor: undefined // \\right uninfluenced by \\color in array\n\n    } : res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"smallmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var payload = {\n      arraystretch: 0.5\n    };\n    var res = parseArray(context.parser, payload, \"script\");\n    res.colSeparationType = \"small\";\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"subarray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Parsing of {subarray} is similar to {array}\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text; // {subarray} only recognizes \"l\" & \"c\"\n\n      if (\"lc\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n\n    if (cols.length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    var res = {\n      cols,\n      hskipBeforeAndAfter: false,\n      arraystretch: 0.5\n    };\n    res = parseArray(context.parser, res, \"script\");\n\n    if (res.body.length > 0 && res.body[0].length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n// {rcases} is another mathtools environment. It's brace is on the right side.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\", \"rcases\", \"drcases\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: context.envName.indexOf(\"r\") > -1 ? \".\" : \"\\\\{\",\n      right: context.envName.indexOf(\"r\") > -1 ? \"\\\\}\" : \".\",\n      rightColor: undefined\n    };\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // In the align environment, one uses ampersands, &, to specify number of\n// columns in each row, and to locate spacing between each column.\n// align gets automatic numbering. align* and aligned do not.\n// The alignedat environment can be used in math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"align\", \"align*\", \"aligned\", \"split\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\", \"gather\", \"gather*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    if (utils.contains([\"gather\", \"gather*\"], context.envName)) {\n      validateAmsEnvironmentContext(context);\n    }\n\n    var res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true,\n      colSeparationType: \"gather\",\n      addEqnNum: context.envName === \"gather\",\n      emptySingleRow: true,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignat\", \"alignat*\", \"alignedat\"],\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"equation\", \"equation*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    var res = {\n      addEqnNum: context.envName === \"equation\",\n      emptySingleRow: true,\n      singleRow: true,\n      maxNumCols: 1,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"CD\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    return parseCD(context.parser);\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n\n  handler(context, args) {\n    throw new ParseError(context.funcName + \" valid only within array environment\");\n  }\n\n});\n\nvar environments = _environments;\n\n// defineEnvironment definitions.\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    var envName = \"\";\n\n    for (var i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!environments.hasOwnProperty(envName)) {\n        throw new ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      var env = environments[envName];\n      var {\n        args: _args,\n        optArgs\n      } = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n      var context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      var result = env.handler(context, _args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      var endNameToken = parser.nextToken;\n      var end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n      } // $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n\n});\n\nvar makeSpan$2 = buildCommon.makeSpan;\n\nfunction htmlBuilder$4(group, options) {\n  var elements = buildExpression(group.body, options, true);\n  return makeSpan$2([group.mclass], elements, options);\n}\n\nfunction mathmlBuilder$4(group, options) {\n  var node;\n  var inner = buildExpression$1(group.body, options);\n\n  if (group.mclass === \"minner\") {\n    return mathMLTree.newDocumentFragment(inner);\n  } else if (group.mclass === \"mord\") {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mi\";\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", inner);\n    }\n  } else {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mo\";\n    } else {\n      node = new mathMLTree.MathNode(\"mo\", inner);\n    } // Set spacing based on what is the most likely adjacent atom type.\n    // See TeXbook p170.\n\n\n    if (group.mclass === \"mbin\") {\n      node.attributes.lspace = \"0.22em\"; // medium space\n\n      node.attributes.rspace = \"0.22em\";\n    } else if (group.mclass === \"mpunct\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0.17em\"; // thinspace\n    } else if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0em\";\n    } // MathML <mo> default space is 5/18 em, so <mrel> needs no action.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mo\n\n  }\n\n  return node;\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.substr(5),\n      // TODO(kevinb): don't prefix with 'm'\n      body: ordargument(body),\n      isCharacterBox: utils.isCharacterBox(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\nvar binrelClass = arg => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser\n    } = _ref2;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[1]),\n      isCharacterBox: utils.isCharacterBox(args[1])\n    };\n  }\n\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref3, args) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    var baseArg = args[1];\n    var shiftedArg = args[0];\n    var mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    var baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n    var supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass,\n      body: [supsub],\n      isCharacterBox: utils.isCharacterBox(supsub)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\nvar htmlBuilder$5 = (group, options) => {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildGroup(group.body, newOptions);\n};\n\nvar mathmlBuilder$5 = (group, options) => {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildGroup$1(group.body, newOptions);\n};\n\nvar fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = normalizeArgument(args[0]);\n    var func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    var isCharacterBox = utils.isCharacterBox(body); // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body\n      }],\n      isCharacterBox: isCharacterBox\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\", \"\\\\cal\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    var {\n      parser,\n      funcName,\n      breakOnTokenText\n    } = _ref3;\n    var {\n      mode\n    } = parser;\n    var body = parser.parseExpression(true, breakOnTokenText);\n    var style = \"math\" + funcName.slice(1);\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\n\nvar adjustStyle = (size, originalStyle) => {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  var style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= Style$1.SCRIPT.id ? style.text() : Style$1.DISPLAY;\n  } else if (size === \"text\" && style.size === Style$1.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = Style$1.TEXT;\n  } else if (size === \"script\") {\n    style = Style$1.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = Style$1.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nvar htmlBuilder$6 = (group, options) => {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  var style = adjustStyle(group.size, options.style);\n  var nstyle = style.fracNum();\n  var dstyle = style.fracDen();\n  var newOptions;\n  newOptions = options.havingStyle(nstyle);\n  var numerm = buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  var denomm = buildGroup(group.denom, newOptions, options);\n  var rule;\n  var ruleWidth;\n  var ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  var numShift;\n  var clearance;\n  var denomShift;\n\n  if (style.size === Style$1.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  var frac;\n\n  if (!rule) {\n    // Rule 15c\n    var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    var axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    var midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  var delimSize;\n\n  if (style.size === Style$1.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else if (style.size === Style$1.SCRIPTSCRIPT.size) {\n    delimSize = options.havingStyle(Style$1.SCRIPT).fontMetrics().delim2;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  var leftDelim;\n  var rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar mathmlBuilder$6 = (group, options) => {\n  var node = new mathMLTree.MathNode(\"mfrac\", [buildGroup$1(group.numer, options), buildGroup$1(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    var ruleWidth = calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n  }\n\n  var style = adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    var isDisplay = style.size === Style$1.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    var withDelims = [];\n\n    if (group.leftDelim != null) {\n      var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\" // ditto\n  ],\n  props: {\n    numArgs: 2,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: false,\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      size,\n      barSize: null\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\"],\n  props: {\n    numArgs: 2\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var numer = args[0];\n    var denom = args[1];\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: true,\n      numer,\n      denom,\n      hasBarLine: true,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"display\",\n      barSize: null\n    };\n  }\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref3;\n    var replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n\n});\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n  var delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    allowedInArgument: true,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n\n  handler(_ref4, args) {\n    var {\n      parser\n    } = _ref4;\n    var numer = args[4];\n    var denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    var leftNode = normalizeArgument(args[0]);\n    var leftDelim = leftNode.type === \"atom\" && leftNode.family === \"open\" ? delimFromValue(leftNode.text) : null;\n    var rightNode = normalizeArgument(args[1]);\n    var rightDelim = rightNode.type === \"atom\" && rightNode.family === \"close\" ? delimFromValue(rightNode.text) : null;\n    var barNode = assertNodeType(args[2], \"size\");\n    var hasBarLine;\n    var barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    var size = \"auto\";\n    var styl = args[3];\n\n    if (styl.type === \"ordgroup\") {\n      if (styl.body.length > 0) {\n        var textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(styl, \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      size\n    };\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n\n  handler(_ref5, args) {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref5;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: (_ref6, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref6;\n    var numer = args[0];\n    var barSize = assert(assertNodeType(args[1], \"infix\").size);\n    var denom = args[2];\n    var hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\n// also \"supsub\" since an over/underbrace can affect super/subscripting.\nvar htmlBuilder$7 = (grp, options) => {\n  var style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  var supSubGroup;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = grp.sup ? buildGroup(grp.sup, options.havingStyle(style.sup()), options) : buildGroup(grp.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(grp.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  var body = buildGroup(group.base, options.havingBaseStyle(Style$1.DISPLAY)); // Create the stretchy element\n\n  var braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  var vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar mathmlBuilder$7 = (group, options) => {\n  var accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildGroup$1(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    var body = args[1];\n    var href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\href\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\href\");\n    }\n\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: (group, options) => {\n    var math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof MathNode)) {\n      math = new MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\url\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\url\");\n    }\n\n    var chars = [];\n\n    for (var i = 0; i < href.length; i++) {\n      var c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    var body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  }\n});\n\n// In LaTeX, \\vcenter can act only on a box, as in\n// \\vcenter{\\hbox{$\\frac{a+b}{\\dfrac{c}{d}}$}}\n// This function by itself doesn't do anything but prevent a soft line break.\n\ndefineFunction({\n  type: \"hbox\",\n  names: [\"\\\\hbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"hbox\",\n      mode: parser.mode,\n      body: ordargument(args[0])\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var elements = buildExpression(group.body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", buildExpression$1(group.body, options));\n  }\n\n});\n\ndefineFunction({\n  type: \"html\",\n  names: [\"\\\\htmlClass\", \"\\\\htmlId\", \"\\\\htmlStyle\", \"\\\\htmlData\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"raw\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref;\n    var value = assertNodeType(args[0], \"raw\").string;\n    var body = args[1];\n\n    if (parser.settings.strict) {\n      parser.settings.reportNonstrict(\"htmlExtension\", \"HTML extension is disabled on strict mode\");\n    }\n\n    var trustContext;\n    var attributes = {};\n\n    switch (funcName) {\n      case \"\\\\htmlClass\":\n        attributes.class = value;\n        trustContext = {\n          command: \"\\\\htmlClass\",\n          class: value\n        };\n        break;\n\n      case \"\\\\htmlId\":\n        attributes.id = value;\n        trustContext = {\n          command: \"\\\\htmlId\",\n          id: value\n        };\n        break;\n\n      case \"\\\\htmlStyle\":\n        attributes.style = value;\n        trustContext = {\n          command: \"\\\\htmlStyle\",\n          style: value\n        };\n        break;\n\n      case \"\\\\htmlData\":\n        {\n          var data = value.split(\",\");\n\n          for (var i = 0; i < data.length; i++) {\n            var keyVal = data[i].split(\"=\");\n\n            if (keyVal.length !== 2) {\n              throw new ParseError(\"Error parsing key-value for \\\\htmlData\");\n            }\n\n            attributes[\"data-\" + keyVal[0].trim()] = keyVal[1].trim();\n          }\n\n          trustContext = {\n            command: \"\\\\htmlData\",\n            attributes\n          };\n          break;\n        }\n\n      default:\n        throw new Error(\"Unrecognized html command\");\n    }\n\n    if (!parser.settings.isTrusted(trustContext)) {\n      return parser.formatUnsupportedCmd(funcName);\n    }\n\n    return {\n      type: \"html\",\n      mode: parser.mode,\n      attributes,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.body, options, false);\n    var classes = [\"enclosing\"];\n\n    if (group.attributes.class) {\n      classes.push(...group.attributes.class.trim().split(/\\s+/));\n    }\n\n    var span = buildCommon.makeSpan(classes, elements, options);\n\n    for (var attr in group.attributes) {\n      if (attr !== \"class\" && group.attributes.hasOwnProperty(attr)) {\n        span.setAttribute(attr, group.attributes[attr]);\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.body, options);\n  }\n});\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: ordargument(args[0]),\n      mathml: ordargument(args[1])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n\nvar sizeData = function sizeData(str) {\n  if (/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(str)) {\n    // str is a number with no unit specified.\n    // default unit is bp, per graphix package.\n    return {\n      number: +str,\n      unit: \"bp\"\n    };\n  } else {\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(str);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + str + \"' in \\\\includegraphics\");\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"' in \\\\includegraphics.\");\n    }\n\n    return data;\n  }\n};\n\ndefineFunction({\n  type: \"includegraphics\",\n  names: [\"\\\\includegraphics\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    argTypes: [\"raw\", \"url\"],\n    allowedInText: false\n  },\n  handler: (_ref, args, optArgs) => {\n    var {\n      parser\n    } = _ref;\n    var width = {\n      number: 0,\n      unit: \"em\"\n    };\n    var height = {\n      number: 0.9,\n      unit: \"em\"\n    }; // sorta character sized.\n\n    var totalheight = {\n      number: 0,\n      unit: \"em\"\n    };\n    var alt = \"\";\n\n    if (optArgs[0]) {\n      var attributeStr = assertNodeType(optArgs[0], \"raw\").string; // Parser.js does not parse key/value pairs. We get a string.\n\n      var attributes = attributeStr.split(\",\");\n\n      for (var i = 0; i < attributes.length; i++) {\n        var keyVal = attributes[i].split(\"=\");\n\n        if (keyVal.length === 2) {\n          var str = keyVal[1].trim();\n\n          switch (keyVal[0].trim()) {\n            case \"alt\":\n              alt = str;\n              break;\n\n            case \"width\":\n              width = sizeData(str);\n              break;\n\n            case \"height\":\n              height = sizeData(str);\n              break;\n\n            case \"totalheight\":\n              totalheight = sizeData(str);\n              break;\n\n            default:\n              throw new ParseError(\"Invalid key: '\" + keyVal[0] + \"' in \\\\includegraphics.\");\n          }\n        }\n      }\n    }\n\n    var src = assertNodeType(args[0], \"url\").url;\n\n    if (alt === \"\") {\n      // No alt given. Use the file name. Strip away the path.\n      alt = src;\n      alt = alt.replace(/^.*[\\\\/]/, '');\n      alt = alt.substring(0, alt.lastIndexOf('.'));\n    }\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\includegraphics\",\n      url: src\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\includegraphics\");\n    }\n\n    return {\n      type: \"includegraphics\",\n      mode: parser.mode,\n      alt: alt,\n      width: width,\n      height: height,\n      totalheight: totalheight,\n      src: src\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var height = calculateSize(group.height, options);\n    var depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      depth = Number(depth.toFixed(2));\n    }\n\n    var width = 0;\n\n    if (group.width.number > 0) {\n      width = calculateSize(group.width, options);\n    }\n\n    var style = {\n      height: height + depth + \"em\"\n    };\n\n    if (width > 0) {\n      style.width = width + \"em\";\n    }\n\n    if (depth > 0) {\n      style.verticalAlign = -depth + \"em\";\n    }\n\n    var node = new Img(group.src, group.alt, style);\n    node.height = height;\n    node.depth = depth;\n    return node;\n  },\n  mathmlBuilder: (group, options) => {\n    var node = new mathMLTree.MathNode(\"mglyph\", []);\n    node.setAttribute(\"alt\", group.alt);\n    var height = calculateSize(group.height, options);\n    var depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      depth = depth.toFixed(2);\n      node.setAttribute(\"valign\", \"-\" + depth + \"em\");\n    }\n\n    node.setAttribute(\"height\", height + depth + \"em\");\n\n    if (group.width.number > 0) {\n      var width = calculateSize(group.width, options);\n      node.setAttribute(\"width\", width + \"em\");\n    }\n\n    node.setAttribute(\"src\", group.src);\n    return node;\n  }\n});\n\n// Horizontal spacing commands\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    primitive: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      var muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n\n  mathmlBuilder(group, options) {\n    var dimension = calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    var inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options)]);\n    }\n\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    var node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n    // This code resolved issue #1153\n\n    var strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = node.height + node.depth + \"em\";\n    strut.style.verticalAlign = -node.depth + \"em\";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n    // This code resolves issue #1234\n\n    node = buildCommon.makeSpan([\"thinbox\"], [node], options);\n    return buildCommon.makeSpan([\"mord\", \"vbox\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(_ref, args) {\n    var {\n      funcName,\n      parser\n    } = _ref;\n    var outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    var body = parser.parseExpression(false, close);\n    parser.expect(close);\n    parser.switchMode(outerMode);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body\n    };\n  }\n\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(context, args) {\n    throw new ParseError(\"Mismatched \" + context.funcName);\n  }\n\n});\n\nvar chooseMathStyle = (group, options) => {\n  switch (options.style.size) {\n    case Style$1.DISPLAY.size:\n      return group.display;\n\n    case Style$1.TEXT.size:\n      return group.text;\n\n    case Style$1.SCRIPT.size:\n      return group.script;\n\n    case Style$1.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4,\n    primitive: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var body = chooseMathStyle(group, options);\n    var elements = buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    var body = chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n\n// For an operator with limits, assemble the base, sup, and sub into a span.\nvar assembleSupSub = (base, supGroup, subGroup, options, style, slant, baseShift) => {\n  base = buildCommon.makeSpan([], [base]);\n  var subIsSingleCharacter = subGroup && utils.isCharacterBox(subGroup);\n  var sub;\n  var sup; // We manually have to handle the superscripts and subscripts. This,\n  // aside from the kern calculations, is copied from supsub.\n\n  if (supGroup) {\n    var elem = buildGroup(supGroup, options.havingStyle(style.sup()), options);\n    sup = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n    };\n  }\n\n  if (subGroup) {\n    var _elem = buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n    sub = {\n      elem: _elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n    };\n  } // Build the final group as a vlist of the possible subscript, base,\n  // and possible superscript.\n\n\n  var finalGroup;\n\n  if (sup && sub) {\n    var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: -slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else if (sub) {\n    var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n    // that we are supposed to shift the limits by 1/2 of the slant,\n    // but since we are centering the limits adding a full slant of\n    // margin will shift by 1/2 that.\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: top,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: -slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }]\n    }, options);\n  } else if (sup) {\n    var _bottom = base.depth + baseShift;\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: _bottom,\n      children: [{\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else {\n    // This case probably shouldn't occur (this would mean the\n    // supsub was sending us a group with no superscript or\n    // subscript) but be safe.\n    return base;\n  }\n\n  var parts = [finalGroup];\n\n  if (sub && slant !== 0 && !subIsSingleCharacter) {\n    // A negative margin-left was applied to the lower limit.\n    // Avoid an overlap by placing a spacer on the left on the group.\n    var spacer = buildCommon.makeSpan([\"mspace\"], [], options);\n    spacer.style.marginRight = slant + \"em\";\n    parts.unshift(spacer);\n  }\n\n  return buildCommon.makeSpan([\"mop\", \"op-limits\"], parts, options);\n};\n\n// Limits, symbols\n// Most operators have a large successor symbol, but these don't.\nvar noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nvar htmlBuilder$8 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  var style = options.style;\n  var large = false;\n\n  if (style.size === Style$1.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  var base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    var stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1);\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      var italic = base.italic;\n      var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options);\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    var inner = buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], inner, options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    var output = [];\n\n    for (var i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode, options));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  var baseShift = 0;\n  var slant = 0;\n\n  if ((base instanceof SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = baseShift + \"em\";\n    }\n\n    return base;\n  }\n};\n\nvar mathmlBuilder$8 = (group, options) => {\n  var node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildExpression$1(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    var operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new MathNode(\"mrow\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nvar singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22c0\", \"\\u22c1\", \"\\u22c2\", \"\\u22c3\", \"\\u2a00\", \"\\u2a01\", \"\\u2a02\", \"\\u2a04\", \"\\u2a06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref4) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222b\", \"\\u222c\", \"\\u222d\", \"\\u222e\", \"\\u222f\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref5) {\n    var {\n      parser,\n      funcName\n    } = _ref5;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n});\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\nvar builtinMacros = {};\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n\ndefineMacro(\"\\\\noexpand\", function (context) {\n  // The expansion is the token itself; but that token is interpreted\n  // as if its meaning were ‘\\relax’ if it is a control sequence that\n  // would ordinarily be expanded by TeX’s expansion rules.\n  var t = context.popToken();\n\n  if (context.isExpandable(t.text)) {\n    t.noexpand = true;\n    t.treatAsRelax = true;\n  }\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n});\ndefineMacro(\"\\\\expandafter\", function (context) {\n  // TeX first reads the token that comes immediately after \\expandafter,\n  // without expanding it; let’s call this token t. Then TeX reads the\n  // token that comes after t (and possibly more tokens, if that token\n  // has an argument), replacing it by its expansion. Finally TeX puts\n  // t back in front of that expansion.\n  var t = context.popToken();\n  context.expandOnce(true); // expand only an expandable token\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n}); // LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol that isn't a space, consuming any spaces but not consuming the\n// first nonspace character.  If that nonspace character matches #1, then\n// the macro expands to #2; otherwise, it expands to #3.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  var args = context.consumeArgs(3); // symbol, if, else\n\n  context.consumeSpaces();\n  var nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  var args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nvar digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  var token = context.popToken();\n  var base;\n  var number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n    }\n\n    var digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return \"\\\\@char{\" + number + \"}\";\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nvar newcommand = (context, existsOK, nonexistsOK) => {\n  var arg = context.consumeArg().tokens;\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text;\n  var exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n  }\n\n  var numArgs = 0;\n  arg = context.consumeArg().tokens;\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    var argText = '';\n    var token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new ParseError(\"Invalid number of arguments: \" + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArg().tokens;\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs\n  });\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", context => newcommand(context, false, true));\ndefineMacro(\"\\\\renewcommand\", context => newcommand(context, true, false));\ndefineMacro(\"\\\\providecommand\", context => newcommand(context, true, true)); // terminal (console) tools\n\ndefineMacro(\"\\\\message\", context => {\n  var arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.log(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\errmessage\", context => {\n  var arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.error(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\show\", context => {\n  var tok = context.popToken();\n  var name = tok.text; // eslint-disable-next-line no-console\n\n  console.log(tok, context.macros.get(name), functions[name], symbols.math[name], symbols.text[name]);\n  return '';\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def~{\\nobreakspace{}}\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"~\", \"\\\\nobreakspace\");\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\u00b7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\mathstrut from the TeXbook, p 360\n\ndefineMacro(\"\\\\mathstrut\", \"\\\\vphantom{(}\"); // \\underbar from TeXbook p 353\n\ndefineMacro(\"\\\\underbar\", \"\\\\underline{\\\\text{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\u00A9\", \"\\\\copyright\");\ndefineMacro(\"\\u00AE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); // The KaTeX fonts have corners at codepoints that don't match Unicode.\n// For MathML purposes, use the Unicode code point.\n\ndefineMacro(\"\\\\ulcorner\", \"\\\\html@mathml{\\\\@ulcorner}{\\\\mathop{\\\\char\\\"231c}}\");\ndefineMacro(\"\\\\urcorner\", \"\\\\html@mathml{\\\\@urcorner}{\\\\mathop{\\\\char\\\"231d}}\");\ndefineMacro(\"\\\\llcorner\", \"\\\\html@mathml{\\\\@llcorner}{\\\\mathop{\\\\char\\\"231e}}\");\ndefineMacro(\"\\\\lrcorner\", \"\\\\html@mathml{\\\\@lrcorner}{\\\\mathop{\\\\char\\\"231f}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); //\\newcommand{\\substack}[1]{\\subarray{c}#1\\endsubarray}\n\ndefineMacro(\"\\\\substack\", \"\\\\begin{subarray}{c}#1\\\\end{subarray}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nvar dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  var thedots = '\\\\dotso';\n  var next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in symbols.math) {\n    if (utils.contains(['bin', 'rel'], symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nvar spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  var next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", context => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); // \\pmb    --   A simulation of bold.\n// The version in ambsy.sty works by typesetting three copies of the argument\n// with small offsets. We use two copies. We omit the vertical offset because\n// of rendering problems that makeVList encounters in Safari.\n\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\" + \"\\\\@binrel{#1}{\\\\mathrlap{#1}\\\\kern0.5px#1}}\" + \"{\\\\mathbf{#1}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\expandafter\\let\\expandafter\\@normalcr\n//     \\csname\\expandafter\\@gobble\\string\\\\ \\endcsname\n// \\DeclareRobustCommand\\newline{\\@normalcr\\relax}\n\ndefineMacro(\"\\\\newline\", \"\\\\\\\\\\\\relax\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered in \\normalsize\n// \\scriptstyle, which has a scale factor of 0.7 (see Options.js).\n\nvar latexRaiseA = fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // ≔\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // ≕\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\"); //////////////////////////////////////////////////////////////////////\n// From amsopn.sty\n\ndefineMacro(\"\\\\injlim\", \"\\\\DOTSB\\\\operatorname*{inj\\\\,lim}\");\ndefineMacro(\"\\\\projlim\", \"\\\\DOTSB\\\\operatorname*{proj\\\\,lim}\");\ndefineMacro(\"\\\\varlimsup\", \"\\\\DOTSB\\\\operatorname*{\\\\overline{lim}}\");\ndefineMacro(\"\\\\varliminf\", \"\\\\DOTSB\\\\operatorname*{\\\\underline{lim}}\");\ndefineMacro(\"\\\\varinjlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underrightarrow{lim}}\");\ndefineMacro(\"\\\\varprojlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underleftarrow{lim}}\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{∤}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{∦}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{⊊}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{⫋}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{⊋}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{⫌}\");\ndefineMacro(\"\\\\imath\", \"\\\\html@mathml{\\\\@imath}{\\u0131}\");\ndefineMacro(\"\\\\jmath\", \"\\\\html@mathml{\\\\@jmath}{\\u0237}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27e6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27e7}}\");\ndefineMacro(\"\\u27e6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27e7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n// The stmaryrd function `\\minuso` provides a \"Plimsoll\" symbol that\n// superimposes the characters \\circ and \\mathminus. Used in chemistry.\n\ndefineMacro(\"\\\\minuso\", \"\\\\mathbin{\\\\html@mathml{\" + \"{\\\\mathrlap{\\\\mathchoice{\\\\kern{0.145em}}{\\\\kern{0.145em}}\" + \"{\\\\kern{0.1015em}}{\\\\kern{0.0725em}}\\\\circ}{-}}}\" + \"{\\\\char`⦵}}\");\ndefineMacro(\"⦵\", \"\\\\minuso\"); //////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\");\ndefineMacro(\"\\\\plim\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{plim}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// braket.sty\n// http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/braket/braket.pdf\n\ndefineMacro(\"\\\\bra\", \"\\\\mathinner{\\\\langle{#1}|}\");\ndefineMacro(\"\\\\ket\", \"\\\\mathinner{|{#1}\\\\rangle}\");\ndefineMacro(\"\\\\braket\", \"\\\\mathinner{\\\\langle{#1}\\\\rangle}\");\ndefineMacro(\"\\\\Bra\", \"\\\\left\\\\langle#1\\\\right|\");\ndefineMacro(\"\\\\Ket\", \"\\\\left|#1\\\\right\\\\rangle\"); //////////////////////////////////////////////////////////////////////\n// actuarialangle.dtx\n\ndefineMacro(\"\\\\angln\", \"{\\\\angl n}\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{#1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only\n// \"operatorname\", but also  \"supsub\" since \\operatorname* can\n// affect super/subscripting.\nvar htmlBuilder$9 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"operatorname\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"operatorname\");\n  }\n\n  var base;\n\n  if (group.body.length > 0) {\n    var body = group.body.map(child => {\n      // $FlowFixMe: Check if the node has a string `text` property.\n      var childText = child.text;\n\n      if (typeof childText === \"string\") {\n        return {\n          type: \"textord\",\n          mode: child.mode,\n          text: childText\n        };\n      } else {\n        return child;\n      }\n    }); // Consolidate function names into symbol characters.\n\n    var expression = buildExpression(body, options.withFont(\"mathrm\"), true);\n\n    for (var i = 0; i < expression.length; i++) {\n      var child = expression[i];\n\n      if (child instanceof SymbolNode) {\n        // Per amsopn package,\n        // change minus to hyphen and \\ast to asterisk\n        child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n      }\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], expression, options);\n  } else {\n    base = buildCommon.makeSpan([\"mop\"], [], options);\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0);\n  } else {\n    return base;\n  }\n};\n\nvar mathmlBuilder$9 = (group, options) => {\n  // The steps taken here are similar to the html version.\n  var expression = buildExpression$1(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n  var isAllString = true; // default\n\n  for (var i = 0; i < expression.length; i++) {\n    var node = expression[i];\n\n    if (node instanceof mathMLTree.SpaceNode) ; else if (node instanceof mathMLTree.MathNode) {\n      switch (node.type) {\n        case \"mi\":\n        case \"mn\":\n        case \"ms\":\n        case \"mspace\":\n        case \"mtext\":\n          break;\n        // Do nothing yet.\n\n        case \"mo\":\n          {\n            var child = node.children[0];\n\n            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n              child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n            } else {\n              isAllString = false;\n            }\n\n            break;\n          }\n\n        default:\n          isAllString = false;\n      }\n    } else {\n      isAllString = false;\n    }\n  }\n\n  if (isAllString) {\n    // Write a single TextNode instead of multiple nested tags.\n    var word = expression.map(node => node.toText()).join(\"\");\n    expression = [new mathMLTree.TextNode(word)];\n  }\n\n  var identifier = new mathMLTree.MathNode(\"mi\", expression);\n  identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n  // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n  var operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n  if (group.parentIsSupSub) {\n    return new mathMLTree.MathNode(\"mrow\", [identifier, operator]);\n  } else {\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n}; // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname@\", \"\\\\operatornamewithlimits\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body),\n      alwaysHandleSupSub: funcName === \"\\\\operatornamewithlimits\",\n      limits: false,\n      parentIsSupSub: false\n    };\n  },\n  htmlBuilder: htmlBuilder$9,\n  mathmlBuilder: mathmlBuilder$9\n});\ndefineMacro(\"\\\\operatorname\", \"\\\\@ifstar\\\\operatornamewithlimits\\\\operatorname@\");\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n\n  htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildExpression(group.body, options, true), options);\n  },\n\n  mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options, true);\n  }\n\n});\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    var line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    var vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: defaultRuleThickness\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression$1(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var node = buildCommon.makeSpan([], [buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression$1(ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    var {\n      parser\n    } = _ref3;\n    var body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options.withPhantom())]);\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression$1(ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var amount = assertNodeType(args[0], \"size\").value;\n    var body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var body = buildGroup(group.body, options);\n    var dy = calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n    var dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var shift = optArgs[0];\n    var width = assertNodeType(args[0], \"size\");\n    var height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    var width = calculateSize(group.width, options);\n    var height = calculateSize(group.height, options);\n    var shift = group.shift ? calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n\n  mathmlBuilder(group, options) {\n    var width = calculateSize(group.width, options);\n    var height = calculateSize(group.height, options);\n    var shift = group.shift ? calculateSize(group.shift, options) : 0;\n    var color = options.color && options.getColor() || \"black\";\n    var rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", width + \"em\");\n    rule.setAttribute(\"height\", height + \"em\");\n    var wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", \"+\" + shift + \"em\");\n    } else {\n      wrapper.setAttribute(\"height\", shift + \"em\");\n      wrapper.setAttribute(\"depth\", \"+\" + -shift + \"em\");\n    }\n\n    wrapper.setAttribute(\"voffset\", shift + \"em\");\n    return wrapper;\n  }\n\n});\n\nfunction sizingGroup(value, options, baseOptions) {\n  var inner = buildExpression(value, options, false);\n  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (var i = 0; i < inner.length; i++) {\n    var pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nvar htmlBuilder$a = (group, options) => {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  var newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    var body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$a,\n  mathmlBuilder: (group, options) => {\n    var newOptions = options.havingSize(group.size);\n    var inner = buildExpression$1(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n    return node;\n  }\n});\n\n// smash, with optional [tb], as in AMS\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args, optArgs) => {\n    var {\n      parser\n    } = _ref;\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      var letter = \"\";\n\n      for (var i = 0; i < tbArg.body.length; ++i) {\n        var node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var node = buildCommon.makeSpan([], [buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (var _i = 0; _i < node.children.length; _i++) {\n          node.children[_i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    var smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n    var phi = theta;\n\n    if (options.style.id < Style$1.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    var lineClearance = theta + phi / 4;\n    var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    var {\n      span: img,\n      ruleWidth,\n      advanceWidth\n    } = delimiter.sqrtImage(minDelimiterHeight, options);\n    var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + \"em\"; // Overlay the image and the argument.\n\n    var body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      var newOptions = options.havingStyle(Style$1.SCRIPTSCRIPT);\n      var rootm = buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      var rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    var {\n      body,\n      index\n    } = group;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildGroup$1(body, options), buildGroup$1(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildGroup$1(body, options)]);\n  }\n\n});\n\nvar styleMap$1 = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    // parse out the implicit body\n    var body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    var style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    var newStyle = styleMap$1[group.style];\n    var newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    var newStyle = styleMap$1[group.style];\n    var newOptions = options.havingStyle(newStyle);\n    var inner = buildExpression$1(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n    var styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    var attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n\n});\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  var base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    var delegate = base.limits && (options.style.size === Style$1.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? htmlBuilder$8 : null;\n  } else if (base.type === \"operatorname\") {\n    var _delegate = base.alwaysHandleSupSub && (options.style.size === Style$1.DISPLAY.size || base.limits);\n\n    return _delegate ? htmlBuilder$9 : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    var isSup = !group.sub;\n    return isSup === base.isOver ? htmlBuilder$7 : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n\n  htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    var builderDelegate = htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    var {\n      base: valueBase,\n      sup: valueSup,\n      sub: valueSub\n    } = group;\n    var base = buildGroup(valueBase, options);\n    var supm;\n    var subm;\n    var metrics = options.fontMetrics(); // Rule 18a\n\n    var supShift = 0;\n    var subShift = 0;\n    var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      var newOptions = options.havingStyle(options.style.sup());\n      supm = buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      var _newOptions = options.havingStyle(options.style.sub());\n\n      subm = buildGroup(valueSub, _newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    var minSupShift;\n\n    if (options.style === Style$1.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    var multiplier = options.sizeMultiplier;\n    var marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n    var marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + \"em\";\n      }\n    }\n\n    var supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      var ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      var maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      var vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight,\n        marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      var _vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: _vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    var isBrace = false;\n    var isOver;\n    var isSup;\n\n    if (group.base && group.base.type === \"horizBrace\") {\n      isSup = !!group.sup;\n\n      if (isSup === group.base.isOver) {\n        isBrace = true;\n        isOver = group.base.isOver;\n      }\n    }\n\n    if (group.base && (group.base.type === \"op\" || group.base.type === \"operatorname\")) {\n      group.base.parentIsSupSub = true;\n    }\n\n    var children = [buildGroup$1(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildGroup$1(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildGroup$1(group.sup, options));\n    }\n\n    var nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      var base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      var _base = group.base;\n\n      if (_base && _base.type === \"op\" && _base.limits && (options.style === Style$1.DISPLAY || _base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else if (_base && _base.type === \"operatorname\" && _base.alwaysHandleSupSub && (_base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      var _base2 = group.base;\n\n      if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === Style$1.DISPLAY) {\n        nodeType = \"munderover\";\n      } else if (_base2 && _base2.type === \"operatorname\" && _base2.alwaysHandleSupSub && (options.style === Style$1.DISPLAY || _base2.limits)) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    return new mathMLTree.MathNode(nodeType, children);\n  }\n\n});\n\ndefineFunctionBuilders({\n  type: \"atom\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      var variant = getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n\n});\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\nvar defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mi\", [makeText(group.text, group.mode, options)]);\n    var variant = getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n\n  mathmlBuilder(group, options) {\n    var text = makeText(group.text, group.mode, options);\n    var variant = getVariant(group, options) || \"normal\";\n    var node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\n\nvar cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nvar regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n\n  htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      var className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        var ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    var node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n\n    return node;\n  }\n\n});\n\nvar pad = () => {\n  var padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n\n  mathmlBuilder(group, options) {\n    var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n\n});\n\nvar textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nvar textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nvar textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nvar optionsWithFont = (group, options) => {\n  var font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInArgument: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    var inner = buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], inner, newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n\n});\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildGroup(group.body, options); // Create the line to go below the body\n\n    var line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"vcenter\",\n  names: [\"\\\\vcenter\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"original\"],\n    // In LaTeX, \\vcenter can act only on a box.\n    allowedInText: false\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"vcenter\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var body = buildGroup(group.body, options);\n    var axisHeight = options.fontMetrics().axisHeight;\n    var dy = 0.5 * (body.height - axisHeight - (body.depth + axisHeight));\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // There is no way to do this in MathML.\n    // Write a class as a breadcrumb in case some post-processor wants\n    // to perform a vcenter adjustment.\n    return new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)], [\"vcenter\"]);\n  }\n\n});\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n\n  htmlBuilder(group, options) {\n    var text = makeVerb(group);\n    var body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    var newOptions = options.havingStyle(options.style.text());\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    var text = new mathMLTree.TextNode(makeVerb(group));\n    var node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nvar makeVerb = group => group.body.replace(/ /g, group.star ? '\\u2423' : '\\xA0');\n\n/** Include this to ensure that all functions are defined. */\nvar functions = _functions;\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more whitespace characters\n * - matches a backslash followed by one or more letters then whitespace\n * - matches a backslash followed by any BMP character\n * Capturing groups:\n *   [1] regular whitespace\n *   [2] backslash followed by whitespace\n *   [3] anything else, which may include:\n *     [4] left character of \\verb*\n *     [5] left character of \\verb\n *     [6] backslash followed by word, excluding any trailing whitespace\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"(\" + controlWordRegexString + \")\" + spaceRegexString + \"*\";\nvar controlSpaceRegexString = \"\\\\\\\\(\\n|[ \\r\\t]+\\n?)[ \\r\\t]*\";\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + ( // whitespace\ncontrolSpaceRegexString + \"|\") + // \\whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\4\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\5\" + ( // \\verb unstarred\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nclass Lexer {\n  // Category codes. The lexer only supports comment characters (14) for now.\n  // MacroExpander additionally distinguishes active (13).\n  constructor(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14,\n      // comment character\n      \"~\": 13 // active character\n\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n\n\n  lex() {\n    var input = this.input;\n    var pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    var match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    var text = match[6] || match[3] || (match[2] ? \"\\\\ \" : \" \");\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      var nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n\n}\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n\n\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    var undefs = this.undefStack.pop();\n\n    for (var undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n\n\n  has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n\n\n  get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n\n\n  set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (var i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      var top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  }\n\n}\n\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n  \"\\\\relax\": true,\n  // MacroExpander.js\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace(builtinMacros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n\n\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n\n\n  endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n\n\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n\n\n  popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n\n\n  pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n\n\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n  /**\n   * Find an macro argument without expanding tokens and append the array of\n   * tokens to the token stack. Uses Token as a container for the result.\n   */\n\n\n  scanArgument(isOptional) {\n    var start;\n    var end;\n    var tokens;\n\n    if (isOptional) {\n      this.consumeSpaces(); // \\@ifnextchar gobbles any space following it\n\n      if (this.future().text !== \"[\") {\n        return null;\n      }\n\n      start = this.popToken(); // don't include [ in tokens\n\n      ({\n        tokens,\n        end\n      } = this.consumeArg([\"]\"]));\n    } else {\n      ({\n        tokens,\n        start,\n        end\n      } = this.consumeArg());\n    } // indicate the end of an argument\n\n\n    this.pushToken(new Token(\"EOF\", end.loc));\n    this.pushTokens(tokens);\n    return start.range(end, \"\");\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n\n\n  consumeSpaces() {\n    for (;;) {\n      var token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume an argument from the token stream, and return the resulting array\n   * of tokens and start/end token.\n   */\n\n\n  consumeArg(delims) {\n    // The argument for a delimited parameter is the shortest (possibly\n    // empty) sequence of tokens with properly nested {...} groups that is\n    // followed ... by this particular list of non-parameter tokens.\n    // The argument for an undelimited parameter is the next nonblank\n    // token, unless that token is ‘{’, when the argument will be the\n    // entire {...} group that follows.\n    var tokens = [];\n    var isDelimited = delims && delims.length > 0;\n\n    if (!isDelimited) {\n      // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments.\"\n      this.consumeSpaces();\n    }\n\n    var start = this.future();\n    var tok;\n    var depth = 0;\n    var match = 0;\n\n    do {\n      tok = this.popToken();\n      tokens.push(tok);\n\n      if (tok.text === \"{\") {\n        ++depth;\n      } else if (tok.text === \"}\") {\n        --depth;\n\n        if (depth === -1) {\n          throw new ParseError(\"Extra }\", tok);\n        }\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Unexpected end of input in a macro argument\" + \", expected '\" + (delims && isDelimited ? delims[match] : \"}\") + \"'\", tok);\n      }\n\n      if (delims && isDelimited) {\n        if ((depth === 0 || depth === 1 && delims[match] === \"{\") && tok.text === delims[match]) {\n          ++match;\n\n          if (match === delims.length) {\n            // don't include delims in tokens\n            tokens.splice(-match, match);\n            break;\n          }\n        } else {\n          match = 0;\n        }\n      }\n    } while (depth !== 0 || isDelimited); // If the argument found ... has the form ‘{<nested tokens>}’,\n    // ... the outermost braces enclosing the argument are removed\n\n\n    if (start.text === \"{\" && tokens[tokens.length - 1].text === \"}\") {\n      tokens.pop();\n      tokens.shift();\n    }\n\n    tokens.reverse(); // to fit in with stack order\n\n    return {\n      tokens,\n      start,\n      end: tok\n    };\n  }\n  /**\n   * Consume the specified number of (delimited) arguments from the token\n   * stream and return the resulting array of arguments.\n   */\n\n\n  consumeArgs(numArgs, delimiters) {\n    if (delimiters) {\n      if (delimiters.length !== numArgs + 1) {\n        throw new ParseError(\"The length of delimiters doesn't match the number of args!\");\n      }\n\n      var delims = delimiters[0];\n\n      for (var i = 0; i < delims.length; i++) {\n        var tok = this.popToken();\n\n        if (delims[i] !== tok.text) {\n          throw new ParseError(\"Use of the macro doesn't match its definition\", tok);\n        }\n      }\n    }\n\n    var args = [];\n\n    for (var _i = 0; _i < numArgs; _i++) {\n      args.push(this.consumeArg(delimiters && delimiters[_i + 1]).tokens);\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * If expandableOnly, only expandable tokens are expanded and\n   * an undefined control sequence results in an error.\n   */\n\n\n  expandOnce(expandableOnly) {\n    var topToken = this.popToken();\n    var name = topToken.text;\n    var expansion = !topToken.noexpand ? this._getExpansion(name) : null;\n\n    if (expansion == null || expandableOnly && expansion.unexpandable) {\n      if (expandableOnly && expansion == null && name[0] === \"\\\\\" && !this.isDefined(name)) {\n        throw new ParseError(\"Undefined control sequence: \" + name);\n      }\n\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n\n    var tokens = expansion.tokens;\n    var args = this.consumeArgs(expansion.numArgs, expansion.delimiters);\n\n    if (expansion.numArgs) {\n      // paste arguments in place of the placeholders\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (var i = tokens.length - 1; i >= 0; --i) {\n        var tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n\n\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n\n\n  expandNextToken() {\n    for (;;) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        // \\relax stops the expansion, but shouldn't get returned (a\n        // null return value couldn't get implemented as a function).\n        // the token after \\noexpand is interpreted as if its meaning\n        // were ‘\\relax’\n        if (expanded.text === \"\\\\relax\" || expanded.treatAsRelax) {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacro(name) {\n    return this.macros.has(name) ? this.expandTokens([new Token(name)]) : undefined;\n  }\n  /**\n   * Fully expand the given token stream and return the resulting list of tokens\n   */\n\n\n  expandTokens(tokens) {\n    var output = [];\n    var oldStackLength = this.stack.length;\n    this.pushTokens(tokens);\n\n    while (this.stack.length > oldStackLength) {\n      var expanded = this.expandOnce(true); // expand only expandable tokens\n      // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        if (expanded.treatAsRelax) {\n          // the expansion of \\noexpand is the token itself\n          expanded.noexpand = false;\n          expanded.treatAsRelax = false;\n        }\n\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacroAsText(name) {\n    var tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(token => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n\n\n  _getExpansion(name) {\n    var definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    } // If a single character has an associated catcode other than 13\n    // (active character), then don't expand it.\n\n\n    if (name.length === 1) {\n      var catcode = this.lexer.catcodes[name];\n\n      if (catcode != null && catcode !== 13) {\n        return;\n      }\n    }\n\n    var expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      var numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        var stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      var bodyLexer = new Lexer(expansion, this.settings);\n      var tokens = [];\n      var tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      var expanded = {\n        tokens,\n        numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n\n\n  isDefined(name) {\n    return this.macros.has(name) || functions.hasOwnProperty(name) || symbols.math.hasOwnProperty(name) || symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  }\n  /**\n   * Determine whether a command is expandable.\n   */\n\n\n  isExpandable(name) {\n    var macro = this.macros.get(name);\n    return macro != null ? typeof macro === \"string\" || typeof macro === \"function\" || !macro.unexpandable : functions.hasOwnProperty(name) && !functions[name].primitive;\n  }\n\n}\n\n/* eslint no-constant-condition:0 */\n\nvar unicodeAccents = {\n  \"́\": {\n    \"text\": \"\\\\'\",\n    \"math\": \"\\\\acute\"\n  },\n  \"̀\": {\n    \"text\": \"\\\\`\",\n    \"math\": \"\\\\grave\"\n  },\n  \"̈\": {\n    \"text\": \"\\\\\\\"\",\n    \"math\": \"\\\\ddot\"\n  },\n  \"̃\": {\n    \"text\": \"\\\\~\",\n    \"math\": \"\\\\tilde\"\n  },\n  \"̄\": {\n    \"text\": \"\\\\=\",\n    \"math\": \"\\\\bar\"\n  },\n  \"̆\": {\n    \"text\": \"\\\\u\",\n    \"math\": \"\\\\breve\"\n  },\n  \"̌\": {\n    \"text\": \"\\\\v\",\n    \"math\": \"\\\\check\"\n  },\n  \"̂\": {\n    \"text\": \"\\\\^\",\n    \"math\": \"\\\\hat\"\n  },\n  \"̇\": {\n    \"text\": \"\\\\.\",\n    \"math\": \"\\\\dot\"\n  },\n  \"̊\": {\n    \"text\": \"\\\\r\",\n    \"math\": \"\\\\mathring\"\n  },\n  \"̋\": {\n    \"text\": \"\\\\H\"\n  }\n};\nvar unicodeSymbols = {\n  \"á\": \"á\",\n  \"à\": \"à\",\n  \"ä\": \"ä\",\n  \"ǟ\": \"ǟ\",\n  \"ã\": \"ã\",\n  \"ā\": \"ā\",\n  \"ă\": \"ă\",\n  \"ắ\": \"ắ\",\n  \"ằ\": \"ằ\",\n  \"ẵ\": \"ẵ\",\n  \"ǎ\": \"ǎ\",\n  \"â\": \"â\",\n  \"ấ\": \"ấ\",\n  \"ầ\": \"ầ\",\n  \"ẫ\": \"ẫ\",\n  \"ȧ\": \"ȧ\",\n  \"ǡ\": \"ǡ\",\n  \"å\": \"å\",\n  \"ǻ\": \"ǻ\",\n  \"ḃ\": \"ḃ\",\n  \"ć\": \"ć\",\n  \"č\": \"č\",\n  \"ĉ\": \"ĉ\",\n  \"ċ\": \"ċ\",\n  \"ď\": \"ď\",\n  \"ḋ\": \"ḋ\",\n  \"é\": \"é\",\n  \"è\": \"è\",\n  \"ë\": \"ë\",\n  \"ẽ\": \"ẽ\",\n  \"ē\": \"ē\",\n  \"ḗ\": \"ḗ\",\n  \"ḕ\": \"ḕ\",\n  \"ĕ\": \"ĕ\",\n  \"ě\": \"ě\",\n  \"ê\": \"ê\",\n  \"ế\": \"ế\",\n  \"ề\": \"ề\",\n  \"ễ\": \"ễ\",\n  \"ė\": \"ė\",\n  \"ḟ\": \"ḟ\",\n  \"ǵ\": \"ǵ\",\n  \"ḡ\": \"ḡ\",\n  \"ğ\": \"ğ\",\n  \"ǧ\": \"ǧ\",\n  \"ĝ\": \"ĝ\",\n  \"ġ\": \"ġ\",\n  \"ḧ\": \"ḧ\",\n  \"ȟ\": \"ȟ\",\n  \"ĥ\": \"ĥ\",\n  \"ḣ\": \"ḣ\",\n  \"í\": \"í\",\n  \"ì\": \"ì\",\n  \"ï\": \"ï\",\n  \"ḯ\": \"ḯ\",\n  \"ĩ\": \"ĩ\",\n  \"ī\": \"ī\",\n  \"ĭ\": \"ĭ\",\n  \"ǐ\": \"ǐ\",\n  \"î\": \"î\",\n  \"ǰ\": \"ǰ\",\n  \"ĵ\": \"ĵ\",\n  \"ḱ\": \"ḱ\",\n  \"ǩ\": \"ǩ\",\n  \"ĺ\": \"ĺ\",\n  \"ľ\": \"ľ\",\n  \"ḿ\": \"ḿ\",\n  \"ṁ\": \"ṁ\",\n  \"ń\": \"ń\",\n  \"ǹ\": \"ǹ\",\n  \"ñ\": \"ñ\",\n  \"ň\": \"ň\",\n  \"ṅ\": \"ṅ\",\n  \"ó\": \"ó\",\n  \"ò\": \"ò\",\n  \"ö\": \"ö\",\n  \"ȫ\": \"ȫ\",\n  \"õ\": \"õ\",\n  \"ṍ\": \"ṍ\",\n  \"ṏ\": \"ṏ\",\n  \"ȭ\": \"ȭ\",\n  \"ō\": \"ō\",\n  \"ṓ\": \"ṓ\",\n  \"ṑ\": \"ṑ\",\n  \"ŏ\": \"ŏ\",\n  \"ǒ\": \"ǒ\",\n  \"ô\": \"ô\",\n  \"ố\": \"ố\",\n  \"ồ\": \"ồ\",\n  \"ỗ\": \"ỗ\",\n  \"ȯ\": \"ȯ\",\n  \"ȱ\": \"ȱ\",\n  \"ő\": \"ő\",\n  \"ṕ\": \"ṕ\",\n  \"ṗ\": \"ṗ\",\n  \"ŕ\": \"ŕ\",\n  \"ř\": \"ř\",\n  \"ṙ\": \"ṙ\",\n  \"ś\": \"ś\",\n  \"ṥ\": \"ṥ\",\n  \"š\": \"š\",\n  \"ṧ\": \"ṧ\",\n  \"ŝ\": \"ŝ\",\n  \"ṡ\": \"ṡ\",\n  \"ẗ\": \"ẗ\",\n  \"ť\": \"ť\",\n  \"ṫ\": \"ṫ\",\n  \"ú\": \"ú\",\n  \"ù\": \"ù\",\n  \"ü\": \"ü\",\n  \"ǘ\": \"ǘ\",\n  \"ǜ\": \"ǜ\",\n  \"ǖ\": \"ǖ\",\n  \"ǚ\": \"ǚ\",\n  \"ũ\": \"ũ\",\n  \"ṹ\": \"ṹ\",\n  \"ū\": \"ū\",\n  \"ṻ\": \"ṻ\",\n  \"ŭ\": \"ŭ\",\n  \"ǔ\": \"ǔ\",\n  \"û\": \"û\",\n  \"ů\": \"ů\",\n  \"ű\": \"ű\",\n  \"ṽ\": \"ṽ\",\n  \"ẃ\": \"ẃ\",\n  \"ẁ\": \"ẁ\",\n  \"ẅ\": \"ẅ\",\n  \"ŵ\": \"ŵ\",\n  \"ẇ\": \"ẇ\",\n  \"ẘ\": \"ẘ\",\n  \"ẍ\": \"ẍ\",\n  \"ẋ\": \"ẋ\",\n  \"ý\": \"ý\",\n  \"ỳ\": \"ỳ\",\n  \"ÿ\": \"ÿ\",\n  \"ỹ\": \"ỹ\",\n  \"ȳ\": \"ȳ\",\n  \"ŷ\": \"ŷ\",\n  \"ẏ\": \"ẏ\",\n  \"ẙ\": \"ẙ\",\n  \"ź\": \"ź\",\n  \"ž\": \"ž\",\n  \"ẑ\": \"ẑ\",\n  \"ż\": \"ż\",\n  \"Á\": \"Á\",\n  \"À\": \"À\",\n  \"Ä\": \"Ä\",\n  \"Ǟ\": \"Ǟ\",\n  \"Ã\": \"Ã\",\n  \"Ā\": \"Ā\",\n  \"Ă\": \"Ă\",\n  \"Ắ\": \"Ắ\",\n  \"Ằ\": \"Ằ\",\n  \"Ẵ\": \"Ẵ\",\n  \"Ǎ\": \"Ǎ\",\n  \"Â\": \"Â\",\n  \"Ấ\": \"Ấ\",\n  \"Ầ\": \"Ầ\",\n  \"Ẫ\": \"Ẫ\",\n  \"Ȧ\": \"Ȧ\",\n  \"Ǡ\": \"Ǡ\",\n  \"Å\": \"Å\",\n  \"Ǻ\": \"Ǻ\",\n  \"Ḃ\": \"Ḃ\",\n  \"Ć\": \"Ć\",\n  \"Č\": \"Č\",\n  \"Ĉ\": \"Ĉ\",\n  \"Ċ\": \"Ċ\",\n  \"Ď\": \"Ď\",\n  \"Ḋ\": \"Ḋ\",\n  \"É\": \"É\",\n  \"È\": \"È\",\n  \"Ë\": \"Ë\",\n  \"Ẽ\": \"Ẽ\",\n  \"Ē\": \"Ē\",\n  \"Ḗ\": \"Ḗ\",\n  \"Ḕ\": \"Ḕ\",\n  \"Ĕ\": \"Ĕ\",\n  \"Ě\": \"Ě\",\n  \"Ê\": \"Ê\",\n  \"Ế\": \"Ế\",\n  \"Ề\": \"Ề\",\n  \"Ễ\": \"Ễ\",\n  \"Ė\": \"Ė\",\n  \"Ḟ\": \"Ḟ\",\n  \"Ǵ\": \"Ǵ\",\n  \"Ḡ\": \"Ḡ\",\n  \"Ğ\": \"Ğ\",\n  \"Ǧ\": \"Ǧ\",\n  \"Ĝ\": \"Ĝ\",\n  \"Ġ\": \"Ġ\",\n  \"Ḧ\": \"Ḧ\",\n  \"Ȟ\": \"Ȟ\",\n  \"Ĥ\": \"Ĥ\",\n  \"Ḣ\": \"Ḣ\",\n  \"Í\": \"Í\",\n  \"Ì\": \"Ì\",\n  \"Ï\": \"Ï\",\n  \"Ḯ\": \"Ḯ\",\n  \"Ĩ\": \"Ĩ\",\n  \"Ī\": \"Ī\",\n  \"Ĭ\": \"Ĭ\",\n  \"Ǐ\": \"Ǐ\",\n  \"Î\": \"Î\",\n  \"İ\": \"İ\",\n  \"Ĵ\": \"Ĵ\",\n  \"Ḱ\": \"Ḱ\",\n  \"Ǩ\": \"Ǩ\",\n  \"Ĺ\": \"Ĺ\",\n  \"Ľ\": \"Ľ\",\n  \"Ḿ\": \"Ḿ\",\n  \"Ṁ\": \"Ṁ\",\n  \"Ń\": \"Ń\",\n  \"Ǹ\": \"Ǹ\",\n  \"Ñ\": \"Ñ\",\n  \"Ň\": \"Ň\",\n  \"Ṅ\": \"Ṅ\",\n  \"Ó\": \"Ó\",\n  \"Ò\": \"Ò\",\n  \"Ö\": \"Ö\",\n  \"Ȫ\": \"Ȫ\",\n  \"Õ\": \"Õ\",\n  \"Ṍ\": \"Ṍ\",\n  \"Ṏ\": \"Ṏ\",\n  \"Ȭ\": \"Ȭ\",\n  \"Ō\": \"Ō\",\n  \"Ṓ\": \"Ṓ\",\n  \"Ṑ\": \"Ṑ\",\n  \"Ŏ\": \"Ŏ\",\n  \"Ǒ\": \"Ǒ\",\n  \"Ô\": \"Ô\",\n  \"Ố\": \"Ố\",\n  \"Ồ\": \"Ồ\",\n  \"Ỗ\": \"Ỗ\",\n  \"Ȯ\": \"Ȯ\",\n  \"Ȱ\": \"Ȱ\",\n  \"Ő\": \"Ő\",\n  \"Ṕ\": \"Ṕ\",\n  \"Ṗ\": \"Ṗ\",\n  \"Ŕ\": \"Ŕ\",\n  \"Ř\": \"Ř\",\n  \"Ṙ\": \"Ṙ\",\n  \"Ś\": \"Ś\",\n  \"Ṥ\": \"Ṥ\",\n  \"Š\": \"Š\",\n  \"Ṧ\": \"Ṧ\",\n  \"Ŝ\": \"Ŝ\",\n  \"Ṡ\": \"Ṡ\",\n  \"Ť\": \"Ť\",\n  \"Ṫ\": \"Ṫ\",\n  \"Ú\": \"Ú\",\n  \"Ù\": \"Ù\",\n  \"Ü\": \"Ü\",\n  \"Ǘ\": \"Ǘ\",\n  \"Ǜ\": \"Ǜ\",\n  \"Ǖ\": \"Ǖ\",\n  \"Ǚ\": \"Ǚ\",\n  \"Ũ\": \"Ũ\",\n  \"Ṹ\": \"Ṹ\",\n  \"Ū\": \"Ū\",\n  \"Ṻ\": \"Ṻ\",\n  \"Ŭ\": \"Ŭ\",\n  \"Ǔ\": \"Ǔ\",\n  \"Û\": \"Û\",\n  \"Ů\": \"Ů\",\n  \"Ű\": \"Ű\",\n  \"Ṽ\": \"Ṽ\",\n  \"Ẃ\": \"Ẃ\",\n  \"Ẁ\": \"Ẁ\",\n  \"Ẅ\": \"Ẅ\",\n  \"Ŵ\": \"Ŵ\",\n  \"Ẇ\": \"Ẇ\",\n  \"Ẍ\": \"Ẍ\",\n  \"Ẋ\": \"Ẋ\",\n  \"Ý\": \"Ý\",\n  \"Ỳ\": \"Ỳ\",\n  \"Ÿ\": \"Ÿ\",\n  \"Ỹ\": \"Ỹ\",\n  \"Ȳ\": \"Ȳ\",\n  \"Ŷ\": \"Ŷ\",\n  \"Ẏ\": \"Ẏ\",\n  \"Ź\": \"Ź\",\n  \"Ž\": \"Ž\",\n  \"Ẑ\": \"Ẑ\",\n  \"Ż\": \"Ż\",\n  \"ά\": \"ά\",\n  \"ὰ\": \"ὰ\",\n  \"ᾱ\": \"ᾱ\",\n  \"ᾰ\": \"ᾰ\",\n  \"έ\": \"έ\",\n  \"ὲ\": \"ὲ\",\n  \"ή\": \"ή\",\n  \"ὴ\": \"ὴ\",\n  \"ί\": \"ί\",\n  \"ὶ\": \"ὶ\",\n  \"ϊ\": \"ϊ\",\n  \"ΐ\": \"ΐ\",\n  \"ῒ\": \"ῒ\",\n  \"ῑ\": \"ῑ\",\n  \"ῐ\": \"ῐ\",\n  \"ό\": \"ό\",\n  \"ὸ\": \"ὸ\",\n  \"ύ\": \"ύ\",\n  \"ὺ\": \"ὺ\",\n  \"ϋ\": \"ϋ\",\n  \"ΰ\": \"ΰ\",\n  \"ῢ\": \"ῢ\",\n  \"ῡ\": \"ῡ\",\n  \"ῠ\": \"ῠ\",\n  \"ώ\": \"ώ\",\n  \"ὼ\": \"ὼ\",\n  \"Ύ\": \"Ύ\",\n  \"Ὺ\": \"Ὺ\",\n  \"Ϋ\": \"Ϋ\",\n  \"Ῡ\": \"Ῡ\",\n  \"Ῠ\": \"Ῠ\",\n  \"Ώ\": \"Ώ\",\n  \"Ὼ\": \"Ὼ\"\n};\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nclass Parser {\n  constructor(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.fetch().text !== text) {\n      throw new ParseError(\"Expected '\" + text + \"', got '\" + this.fetch().text + \"'\", this.fetch());\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Discards the current lookahead token, considering it consumed.\n   */\n\n\n  consume() {\n    this.nextToken = null;\n  }\n  /**\n   * Return the current lookahead token, or if there isn't one (at the\n   * beginning, or if the previous lookahead token was consume()d),\n   * fetch the next token as the new lookahead token and return it.\n   */\n\n\n  fetch() {\n    if (this.nextToken == null) {\n      this.nextToken = this.gullet.expandNextToken();\n    }\n\n    return this.nextToken;\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n\n\n  parse() {\n    if (!this.settings.globalGroup) {\n      // Create a group namespace for the math expression.\n      // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n      this.gullet.beginGroup();\n    } // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    } // Try to parse the input\n\n\n    var parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n    this.expect(\"EOF\"); // End the group namespace for the expression\n\n    if (!this.settings.globalGroup) {\n      this.gullet.endGroup();\n    }\n\n    return parse;\n  }\n\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n  parseExpression(breakOnInfix, breakOnTokenText) {\n    var body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var lex = this.fetch();\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n        break;\n      }\n\n      var atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      } else if (atom.type === \"internal\") {\n        continue;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n\n\n  handleInfixNodes(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n      if (body[i].type === \"infix\") {\n        if (overIndex !== -1) {\n          throw new ParseError(\"only one infix operator per group\", body[i].token);\n        }\n\n        overIndex = i;\n        funcName = body[i].replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      var numerNode;\n      var denomNode;\n      var numerBody = body.slice(0, overIndex);\n      var denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      var node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [node];\n    } else {\n      return body;\n    }\n  }\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n\n\n  handleSupSubscript(name) {\n    var symbolToken = this.fetch();\n    var symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    var group = this.parseGroup(name);\n\n    if (!group) {\n      throw new ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n\n\n  formatUnsupportedCmd(text) {\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    var textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    var colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n\n\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseGroup(\"atom\", breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    var superscript;\n    var subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      var lex = this.fetch();\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        if (base && base.type === \"op\") {\n          var limits = lex.text === \"\\\\limits\";\n          base.limits = limits;\n          base.alwaysHandleSupSub = true;\n        } else if (base && base.type === \"operatorname\") {\n          if (base.alwaysHandleSupSub) {\n            base.limits = lex.text === \"\\\\limits\";\n          }\n        } else {\n          throw new ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        var prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        var primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.fetch().text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.fetch().text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n\n\n  parseFunction(breakOnTokenText, name) {\n    var token = this.fetch();\n    var func = token.text;\n    var funcData = functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    this.consume(); // consume command token\n\n    if (name && name !== \"atom\" && !funcData.allowedInArgument) {\n      throw new ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    }\n\n    var {\n      args,\n      optArgs\n    } = this.parseArguments(func, funcData);\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n\n\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    var context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    var func = functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new ParseError(\"No function handler for \" + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n\n\n  parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    var args = [];\n    var optArgs = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n      var argType = funcData.argTypes && funcData.argTypes[i];\n      var isOptional = i < funcData.numOptionalArgs;\n\n      if (funcData.primitive && argType == null || // \\sqrt expands into primitive if optional argument doesn't exist\n      funcData.type === \"sqrt\" && i === 1 && optArgs[0] == null) {\n        argType = \"primitive\";\n      }\n\n      var arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional);\n\n      if (isOptional) {\n        optArgs.push(arg);\n      } else if (arg != null) {\n        args.push(arg);\n      } else {\n        // should be unreachable\n        throw new ParseError(\"Null argument, please report this as a bug\");\n      }\n    }\n\n    return {\n      args,\n      optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n\n\n  parseGroupOfType(name, type, optional) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseArgumentGroup(optional, type);\n\n      case \"hbox\":\n        {\n          // hbox argument type wraps the argument in the equivalent of\n          // \\hbox, which is like \\text but switching to \\textstyle size.\n          var group = this.parseArgumentGroup(optional, \"text\");\n          return group != null ? {\n            type: \"styling\",\n            mode: group.mode,\n            body: [group],\n            style: \"text\" // simulate \\textstyle\n\n          } : null;\n        }\n\n      case \"raw\":\n        {\n          var token = this.parseStringGroup(\"raw\", optional);\n          return token != null ? {\n            type: \"raw\",\n            mode: \"text\",\n            string: token.text\n          } : null;\n        }\n\n      case \"primitive\":\n        {\n          if (optional) {\n            throw new ParseError(\"A primitive argument cannot be optional\");\n          }\n\n          var _group = this.parseGroup(name);\n\n          if (_group == null) {\n            throw new ParseError(\"Expected group as \" + name, this.fetch());\n          }\n\n          return _group;\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseArgumentGroup(optional);\n\n      default:\n        throw new ParseError(\"Unknown group type as \" + name, this.fetch());\n    }\n  }\n  /**\n   * Discard any space tokens, fetching the next non-space token.\n   */\n\n\n  consumeSpaces() {\n    while (this.fetch().text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n\n\n  parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional) {\n    var argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    var str = \"\";\n    var nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\") {\n      str += nextToken.text;\n      this.consume();\n    }\n\n    this.consume(); // consume the end of the argument\n\n    argToken.text = str;\n    return argToken;\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n\n\n  parseRegexGroup(regex, modeName) {\n    var firstToken = this.fetch();\n    var lastToken = firstToken;\n    var str = \"\";\n    var nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\" && regex.test(str + nextToken.text)) {\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n\n\n  parseColorGroup(optional) {\n    var res = this.parseStringGroup(\"color\", optional);\n\n    if (res == null) {\n      return null;\n    }\n\n    var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    var color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n\n\n  parseSizeGroup(optional) {\n    var res;\n    var isBlank = false; // don't expand before parseStringGroup\n\n    this.gullet.consumeSpaces();\n\n    if (!optional && this.gullet.future().text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols,\n   * and setting the catcode of % as an active character (as in \\hyperref).\n   */\n\n\n  parseUrlGroup(optional) {\n    this.gullet.lexer.setCatcode(\"%\", 13); // active character\n\n    this.gullet.lexer.setCatcode(\"~\", 12); // other character\n\n    var res = this.parseStringGroup(\"url\", optional);\n    this.gullet.lexer.setCatcode(\"%\", 14); // comment character\n\n    this.gullet.lexer.setCatcode(\"~\", 13); // active character\n\n    if (res == null) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    var url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n  /**\n   * Parses an argument with the mode specified.\n   */\n\n\n  parseArgumentGroup(optional, mode) {\n    var argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    var outerMode = this.mode;\n\n    if (mode) {\n      // Switch to specified mode\n      this.switchMode(mode);\n    }\n\n    this.gullet.beginGroup();\n    var expression = this.parseExpression(false, \"EOF\"); // TODO: find an alternative way to denote the end\n\n    this.expect(\"EOF\"); // expect the end of the argument\n\n    this.gullet.endGroup();\n    var result = {\n      type: \"ordgroup\",\n      mode: this.mode,\n      loc: argToken.loc,\n      body: expression\n    };\n\n    if (mode) {\n      // Switch mode back\n      this.switchMode(outerMode);\n    }\n\n    return result;\n  }\n  /**\n   * Parses an ordinary group, which is either a single nucleus (like \"x\")\n   * or an expression in braces (like \"{x+y}\") or an implicit group, a group\n   * that starts at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   */\n\n\n  parseGroup(name, // For error reporting.\n  breakOnTokenText) {\n    var firstToken = this.fetch();\n    var text = firstToken.text;\n    var result; // Try to parse an open brace or \\begingroup\n\n    if (text === \"{\" || text === \"\\\\begingroup\") {\n      this.consume();\n      var groupEnd = text === \"{\" ? \"}\" : \"\\\\endgroup\";\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      var expression = this.parseExpression(false, groupEnd);\n      var lastToken = this.fetch();\n      this.expect(groupEnd); // Check that we got a matching closing brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.formatUnsupportedCmd(text);\n        this.consume();\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n\n\n  formLigatures(group) {\n    var n = group.length - 1;\n\n    for (var i = 0; i < n; ++i) {\n      var a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      var v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like \\verb.\n   */\n\n\n  parseSymbol() {\n    var nucleus = this.fetch();\n    var text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      var arg = text.slice(5);\n      var star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    var match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = '\\u0131'; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = '\\u0237'; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    var symbol;\n\n    if (symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      var group = symbols[this.mode][text].group;\n      var loc = SourceLocation.range(nucleus);\n      var s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        var family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      } // $FlowFixMe\n\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n        }\n      } // All nonmathematical Unicode characters are rendered as if they\n      // are in text mode (wrapped in \\text) because that's what it\n      // takes to render them in LaTeX.  Setting `mode: this.mode` is\n      // another natural choice (the user requested math mode), but\n      // this makes it more difficult for getCharacterMetrics() to\n      // distinguish Unicode characters without metrics and those for\n      // which we want to simulate the letter M.\n\n\n      symbol = {\n        type: \"textord\",\n        mode: \"text\",\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (var i = 0; i < match[0].length; i++) {\n        var accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n        }\n\n        var command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          // $FlowFixMe\n          base: symbol\n        };\n      }\n    } // $FlowFixMe\n\n\n    return symbol;\n  }\n\n}\nParser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  var parser = new Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  var tree = parser.parse(); // Prevent a color definition from persisting between calls to katex.render().\n\n  delete parser.gullet.macros.current[\"\\\\current@color\"];\n  delete parser.gullet.macros.current[\"\\\\color\"]; // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    parser.gullet.feed(\"\\\\df@tag\");\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* eslint no-console:0 */\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  var node = renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    render = function render() {\n      throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nvar renderToString = function renderToString(expression, options) {\n  var markup = renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nvar generateParseTree = function generateParseTree(expression, options) {\n  var settings = new Settings(options);\n  return parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nvar renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof ParseError)) {\n    throw error;\n  }\n\n  var node = buildCommon.makeSpan([\"katex-error\"], [new SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", \"color:\" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nvar renderToDomTree = function renderToDomTree(expression, options) {\n  var settings = new Settings(options);\n\n  try {\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nvar renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  var settings = new Settings(options);\n\n  try {\n    var tree = parseTree(expression, settings);\n    return buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\nvar katex = {\n  /**\n   * Current KaTeX version\n   */\n  version: \"0.13.13\",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span,\n    Anchor,\n    SymbolNode,\n    SvgNode,\n    PathNode,\n    LineNode\n  }\n};\n\nexport default katex;\n", "/**\n * @constructor\n * @param {!{patterns: !Object, leftmin: !number, rightmin: !number}} language The language pattern file. Compatible with Hyphenator.js.\n */\nfunction Hypher(language) {\n    var exceptions = [],\n        i = 0;\n    /**\n     * @type {!Hypher.TrieNode}\n     */\n    this.trie = this.createTrie(language['patterns']);\n\n    /**\n     * @type {!number}\n     * @const\n     */\n    this.leftMin = language['leftmin'];\n\n    /**\n     * @type {!number}\n     * @const\n     */\n    this.rightMin = language['rightmin'];\n\n    /**\n     * @type {!Object.<string, !Array.<string>>}\n     */\n    this.exceptions = {};\n\n    if (language['exceptions']) {\n        exceptions = language['exceptions'].split(/,\\s?/g);\n\n        for (; i < exceptions.length; i += 1) {\n            this.exceptions[exceptions[i].replace(/\\u2027/g, '').toLowerCase()] = new RegExp('(' + exceptions[i].split('\\u2027').join(')(') + ')', 'i');\n        }\n    }\n}\n\n/**\n * @typedef {{_points: !Array.<number>}}\n */\nHypher.TrieNode;\n\n/**\n * Creates a trie from a language pattern.\n * @private\n * @param {!Object} patternObject An object with language patterns.\n * @return {!Hypher.TrieNode} An object trie.\n */\nHypher.prototype.createTrie = function (patternObject) {\n    var size = 0,\n        i = 0,\n        c = 0,\n        p = 0,\n        chars = null,\n        points = null,\n        codePoint = null,\n        t = null,\n        tree = {\n            _points: []\n        },\n        patterns;\n\n    for (size in patternObject) {\n        if (patternObject.hasOwnProperty(size)) {\n            patterns = patternObject[size].match(new RegExp('.{1,' + (+size) + '}', 'g'));\n\n            for (i = 0; i < patterns.length; i += 1) {\n                chars = patterns[i].replace(/[0-9]/g, '').split('');\n                points = patterns[i].split(/\\D/);\n                t = tree;\n\n                for (c = 0; c < chars.length; c += 1) {\n                    codePoint = chars[c].charCodeAt(0);\n\n                    if (!t[codePoint]) {\n                        t[codePoint] = {};\n                    }\n                    t = t[codePoint];\n                }\n\n                t._points = [];\n\n                for (p = 0; p < points.length; p += 1) {\n                    t._points[p] = points[p] || 0;\n                }\n            }\n        }\n    }\n    return tree;\n};\n\n/**\n * Hyphenates a text.\n *\n * @param {!string} str The text to hyphenate.\n * @return {!string} The same text with soft hyphens inserted in the right positions.\n */\nHypher.prototype.hyphenateText = function (str, minLength) {\n    minLength = minLength || 4;\n\n    // Regexp(\"\\b\", \"g\") splits on word boundaries,\n    // compound separators and ZWNJ so we don't need\n    // any special cases for those characters. Unfortunately\n    // it does not support unicode word boundaries, so\n    // we implement it manually.\n    var words = str.split(/([a-zA-Z0-9_\\u0027\\u00AD\\u00DF-\\u00EA\\u00EB\\u00EC-\\u00EF\\u00F1-\\u00F6\\u00F8-\\u00FD\\u0101\\u0103\\u0105\\u0107\\u0109\\u010D\\u010F\\u0111\\u0113\\u0117\\u0119\\u011B\\u011D\\u011F\\u0123\\u0125\\u012B\\u012F\\u0131\\u0135\\u0137\\u013C\\u013E\\u0142\\u0144\\u0146\\u0148\\u0151\\u0153\\u0155\\u0159\\u015B\\u015D\\u015F\\u0161\\u0165\\u016B\\u016D\\u016F\\u0171\\u0173\\u017A\\u017C\\u017E\\u017F\\u0219\\u021B\\u02BC\\u0390\\u03AC-\\u03CE\\u03F2\\u0401\\u0410-\\u044F\\u0451\\u0454\\u0456\\u0457\\u045E\\u0491\\u0531-\\u0556\\u0561-\\u0587\\u0902\\u0903\\u0905-\\u090B\\u090E-\\u0910\\u0912\\u0914-\\u0928\\u092A-\\u0939\\u093E-\\u0943\\u0946-\\u0948\\u094A-\\u094D\\u0982\\u0983\\u0985-\\u098B\\u098F\\u0990\\u0994-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BE-\\u09C3\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u0A02\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A14-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A82\\u0A83\\u0A85-\\u0A8B\\u0A8F\\u0A90\\u0A94-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABE-\\u0AC3\\u0AC7\\u0AC8\\u0ACB-\\u0ACD\\u0B02\\u0B03\\u0B05-\\u0B0B\\u0B0F\\u0B10\\u0B14-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3E-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B57\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C02\\u0C03\\u0C05-\\u0C0B\\u0C0E-\\u0C10\\u0C12\\u0C14-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C43\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C82\\u0C83\\u0C85-\\u0C8B\\u0C8E-\\u0C90\\u0C92\\u0C94-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC3\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u1F00-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB2-\\u1FB4\\u1FB6\\u1FB7\\u1FBD\\u1FBF\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD2\\u1FD3\\u1FD6\\u1FD7\\u1FE2-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u200D\\u2019]+)/gi);\n\n    for (var i = 0; i < words.length; i += 1) {\n        if (words[i].indexOf('/') !== -1) {\n            // Don't insert a zero width space if the slash is at the beginning or end\n            // of the text, or right after or before a space.\n            if (i !== 0 && i !== words.length - 1 && !(/\\s+\\/|\\/\\s+/.test(words[i]))) {\n                words[i] += '\\u200B';\n            }\n        } else if (words[i].length > minLength) {\n            words[i] = this.hyphenate(words[i]).join('\\u00AD');\n        }\n    }\n    return words.join('');\n};\n\n/**\n * Hyphenates a word.\n *\n * @param {!string} word The word to hyphenate\n * @return {!Array.<!string>} An array of word fragments indicating valid hyphenation points.\n */\nHypher.prototype.hyphenate = function (word) {\n    var characters,\n        characterPoints = [],\n        originalCharacters,\n        i,\n        j,\n        k,\n        node,\n        points = [],\n        wordLength,\n        lowerCaseWord = word.toLowerCase(),\n        nodePoints,\n        nodePointsLength,\n        m = Math.max,\n        trie = this.trie,\n        result = [''];\n\n    if (this.exceptions.hasOwnProperty(lowerCaseWord)) {\n        return word.match(this.exceptions[lowerCaseWord]).slice(1);\n    }\n\n    if (word.indexOf('\\u00AD') !== -1) {\n        return [word];\n    }\n\n    word = '_' + word + '_';\n\n    characters = word.toLowerCase().split('');\n    originalCharacters = word.split('');\n    wordLength = characters.length;\n\n    for (i = 0; i < wordLength; i += 1) {\n        points[i] = 0;\n        characterPoints[i] = characters[i].charCodeAt(0);\n    }\n\n    for (i = 0; i < wordLength; i += 1) {\n        node = trie;\n        for (j = i; j < wordLength; j += 1) {\n            node = node[characterPoints[j]];\n\n            if (node) {\n                nodePoints = node._points;\n                if (nodePoints) {\n                    for (k = 0, nodePointsLength = nodePoints.length; k < nodePointsLength; k += 1) {\n                        points[i + k] = m(points[i + k], nodePoints[k]);\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    for (i = 1; i < wordLength - 1; i += 1) {\n        if (i > this.leftMin && i < (wordLength - this.rightMin) && points[i] % 2) {\n            result.push(originalCharacters[i]);\n        } else {\n            result[result.length - 1] += originalCharacters[i];\n        }\n    }\n\n    return result;\n};\n\nmodule.exports = Hypher;\n", "// The en-US hyphenation patterns are retrieved from\n// http://tug_org/svn/texhyphen/trunk/collaboration/repository/hyphenator/\nmodule.exports = {\n\t'id': ['en-us', 'en'],\n\t'leftmin': 2,\n\t'rightmin': 3,\n\t'patterns': {\n\t\t3 : \"x1qei2e1je1f1to2tlou2w3c1tue1q4tvtw41tyo1q4tz4tcd2yd1wd1v1du1ta4eu1pas4y1droo2d1psw24sv1dod1m1fad1j1su4fdo2n4fh1fi4fm4fn1fopd42ft3fu1fy1ga2sss1ru5jd5cd1bg3bgd44uk2ok1cyo5jgl2g1m4pf4pg1gog3p1gr1soc1qgs2oi2g3w1gysk21coc5nh1bck1h1fh1h4hk1zo1ci4zms2hh1w2ch5zl2idc3c2us2igi3hi3j4ik1cab1vsa22btr1w4bp2io2ipu3u4irbk4b1j1va2ze2bf4oar1p4nz4zbi1u2iv4iy5ja1jeza1y1wk1bk3fkh4k1ikk4k1lk1mk5tk1w2ldr1mn1t2lfr1lr3j4ljl1l2lm2lp4ltn1rrh4v4yn1q1ly1maw1brg2r1fwi24ao2mhw4kr1cw5p4mkm1m1mo4wtwy4x1ar1ba2nn5mx1ex1h4mtx3i1muqu2p3wx3o4mwa1jx3p1naai2x1ua2fxx4y1ba2dn1jy1cn3fpr2y1dy1i\",\n\t\t4 : \"4dryn2itni4on1inn1im_up3nik4ni4dy5giye4tyes4_ye44ab_nhe4nha4abe2n2gyn1guy1ery5eep2pe4abry3lay3lone4wne4v1nesy3chn1erne2q3neo1nenp2seps4hy2cey5lu2nedne2cyme44nk2y5at2adine2b2ne_y5ac2p1tp2ten1den1cun1cryn5dp2th4adup4twpub3ae4rxu3ayn5gaff4pue4n2au4p1ppuf4n2atag1ipu4mag1na2gon4asx3tix1t2pu2na4gya3haa3heah4la3ho_ti2a5ian2an5puspu2tnak4_th2n1kl_te4_ta4mu4u4mupmun23mum2alex4ob_sy25ynxal1i_st4y1o4xi5cxi5a4alm_si2_sh2m5sixhu4m4sh4m3r4amam2py2rabm2pixhi2yo5dr2ai4m1pmo2vmos2x2edmo2r4n1la2mor2asx3c2xas5yom4x4apxam3nme44mokrbi2nne44andy4osp4ot3noemn4omn4a4m1n4nog4m1l2angws4l1posw3shwri4wra4yp3iwom11wo2m2izrb4ow4nopo4pr2cem2isrd2iano4mig4y3pomi3awiz55mi_no4n4m1fme4v2re_wir42mes1menme2mme2gre1o2med4me_4nop4m5c4m1bwil21noureu2whi4w3ev4maprev2w1era2plpo4crfu4r4fyy5pu2maha3pu2mab2a2rn1p4npi44lyb4lya2p3nwam42l1w1lut4luplu3or1glluf4lu5a2wacltu2y3rol1tr4vv4r3guyr4rl1te4rh_nru4ar1il2sel4sc4l1rl5prl4plys4c4lovri3ar4ib4lof3lo_ar2par3q_os3ll4oll2i4as_ri1o3vokl2levoi44p1mlka35vo_ns4cas4ll1izr4iqr2is3vivl1it3lika2tan2sen2slrle42l3hlgo3l5gal5frns3mvi4p3ley_od2r2meles24athr4myle2al3drv1inldi4l2de2vilnt2il3civik4lce42l1b4lavv3ifrno4r3nua1trr2ocnt4sy4sok4syks4la2tuk4sck3ouko5ryss4a2tyau4b4klyys1tnu1akis4au3rki4pro4ek4ima2va5ki_nu4dn4umn3uokes4k1erav1irok2ke4g1keek2ed_me2aw3ikal4aws4k5agk3ab3ka_aye4ays4veg3jo4p5ba_4vedjew3n1v24ve_ja4pzar23vatizi4n1w41batba4z2b1bb2beix4o4i5w4b1d4be_rox5nym4nyp4n3za4ittr3por1r4i1ti1bel2ith2itei2su4rs2r1sars4cr2seis1p3betvag4i2sor1shbe3wr1sioad34b3hbi2bbi4d3bie3isf4ise2is_1bilr1sp5va_r5sw_le2uz4eir1ibi2tuxu3r1tiu1v2i1raze4nze4pb2l2uu4mo1biip3iz1eripe4b4louts44b1m4b3no3br3bodi4osbo4eru3aio4mi1ol4io_3booo1ce4inyin1u2insru2n2inn4inl4inkrv4e2inioch42iner3vo4indpi2np4idbt4lb4tob3trry4cry3t2in_o4elbu4ni2muim1i5saiil3v4ilnil1iil5fs1apo3er4b5w5by_bys4_in1sau4i1lazet4u2suo3ev2z1ii2go4igius1p5saw4s5bo2fi4ifti3fl4if_i3etsch2usc22ie4i2dui4dri2diid5dpi3au3ruz4ils1cuz4is4s5d4se_se4a2ce_2ici4ich3ceii1bri5bo1ceni1blse2g5seiibe43cepi2aniam4ur2li2al2i1acet4hy2scew41phy4ch_5phuhu4thu4gche2h4tyh4shur1durc44hr44h5p5sev5sexu1ra4s3fup3p2s3gph3t2sh_ho4g2h1n_he23ciau3pl4h1mci5ch2lozo4m4ciihi2vhi4p2cim2cin4phsu1peu1ouo1geu5osheu4sho4he4th1es4shwun5zun5ysi1bunu45cizo4glck3ihep5he2nh4ed1sioph2l5hazsi2rcly4zte4_ge21siscoe22cog5siu1siv5siz_ga24skes1l2s2leha4m2s1ms3ma1ogyo1h2u1ni3gus3gun2guegu4acov1gth3_eu3g4ros1n4_es3u2nez4zyum2pu1mi3som_ev2oig4cri2gov15goos4opgon2ul5v5goeu3lugob53go_2c1t4ph_g1nog1nic2te4sov4ulsgn4ag4myc4twcud5c4ufc4uipe2t3glo1gleul2igla4_eg23giz3cun5givgi4u3gir5gio1cusul4e2spagil4g1ic5gi__eb4cze41d2a5da_u1laggo44daf2dagg2gege4v1geo1gen2ged3dato1la2ge_ol2dol2i5daypek4p4eed1d42de_4gazol2tuiv3ol2vo2lys1sa2gamgaf4o2meui4n2ui2pe2cd4em4fugi4jku3fl3ufaf2tyf4to1denu4du4pe_2f3sfri2de1ps1si4f5pfos5d3eqs4sls4snfo2rss2tdes25fon4p1b_ci23payss5w2st_de1tf4l2de1v2fin4dey4d1fd4gast2idg1id2gyd1h25di_ud5dfi3au4cy_ch4pav43didu3cud1iff2fyu3crd1inst4r4f1ffev4fer11dio2fedfe4bdir2s2ty4fe_dis1on1au3ca4f5bon1c2ondd5k25far4fagpa1peys45eyc1exps4ul2dlyp4ale3whon3s3do_e1wa5doee5vud4oge1visu2msu2nub4euav4su2rp4ai6rk_d4or3dosu1atdo4v3doxp4adoo4k4swoo2padre4eus4e3upe5un2ophet5z4syc3syl4y3hoy1ads4pd4swd4syd2tho4wo3ta_du2c4etn2tabta2luac4es4wdu4g2ess4uabdu4n4duptav4st5bow1io1pr5dyn2tawe1sp2t1bop1uead1tz4et4chopy5ea4l4t1d4te_2tyle1si4esh1tee4tyat1cr4twoteg4es2c4eru1teoer1s2eroea2tte4po1rat1wh3tusea2v3teu3texer1i2e1ber1h4tey2t1f4t1ge3br2th_th2e4thle1ce3tumec2i2ths2erb1tia4tueer1aou5vtud2tif22tige1potu1aou4lttu41timt5toos4le1cre2pat4swe5owe1cue4ottsh4eos4e1ort4sce3ol4edieo2ge5of1tio4eno4enn5tiq4edoti4u1tive3my1tiz4othee2ct5laee2ft5lo4t1mee2mtme4e1meem5bcoi4to3be5exo1ry2tof1effel2iel2ftos24t1pe1la1traos2ceig2ei5de5ico2soe1h45egyeg5n\",\n\t\t5 : \"_ach4e4go_e4goseg1ule5gurtre5feg4iceher4eg5ibeger44egaltre4mei5gle3imbe3infe1ingtra3beir4deit3eei3the5ity5triae4jud3efiteki4nek4la2trime4la_e4lactri4v4toute4law5toure3leaefil45elece4ledto2rae5len4tonye1lestro3ve4fic4tonoto3mytom4bto2mato5ice5limto2gre3lioe2listru5i4todo4ellaee4tyello4e5locel5ogeest4el2shel4tae5ludel5uge4mace4mage5man2t1n2ee2s4ee4p1e2mele4metee4naemi4eee4lyeel3i3tled3tle_e4mistlan4eed3iem3iztrus4emo4gti3zaem3pie4mule4dulemu3ne4dritiv4aedon2e4dolti3tle5neae5neeen3emtis4pti5sotis4m3tisee3newti3sae5niee5nile3nioedi5zen3ite5niu5enized1ited3imeno4ge4nosen3oven4swti5oc4t1s2en3uaen5ufe3ny_4en3zed3ibe3diae4oi4ede4s3tini4ed3deo3ret2ina2e2dae4culeo4toe5outec4te4t3t2t4tes2t1ine5pel4timpe2corephe4e4plie2col5tigutu3arti5fytu4bie3pro3tienep4sh5tidie4putt4icoeci4t4tick2ti2bec3imera4bti4aber3ar4tuf45tu3ier4bler3che4cib2ere_4thooecca54thil3thet4thea3turethan4e4cade4bitere4qe4ben5turieret4tur5oeav5oeav5itu5ry4tess4tes_ter5ve1rio4eriter4iueri4v1terier3m4ter3cte5pe4t1waer3noeast3er5obe5rocero4rer1oue3assea5sp1tent4ertler3twtwis4eru4t3tende1s4a3tenc5telsear2te2scateli4e3scres5cue1s2ee2sec3tel_te5giear5kear4cte5diear3ae3sha2t1ede5ande2sice2sid5tecttece44teattype3ty5phesi4uea4gees4mie2sole3acte2sone1a4bdys5pdy4sedu4petaun4d3uleta5sytas4e4tare4tarctar4ata5pl2estrta5mo4talke2surtal3idu5eleta4bta5lae3teoua5naet1ic4taf4etin4ta5doe5tir4taciuan4id1ucad1u1ae3trae3tre2d1s2syn5ouar2d4drowet3uaet5ymdro4pdril4dri4b5dreneu3rouar3ieute44draieu5truar3te2vasdop4pe5veadoo3ddoni4u4belsum3iev1erdoli4do4laev3idevi4le4vinevi4ve5voc2d5ofdo5dee4wage5wee4d1n4ewil54d5lue3wit2d3lou3ber5eye_u1b4i3dledfa3blfab3rfa4ce3dle_fain4suit3su5issu2g34d5lasu4b3fa3tasu1al4fato1di1vd2iti5disiuci4bfeas4di1redi4pl4feca5fectdio5gfe3life4mofen2d4st3wuc4it5ferr5diniucle3f4fesf4fie4stry1dinaf4flydi3ge3dictd4icedia5bs4tops1tle5stirs3tifs4ties1ticfic4is5tias4ti_4ficsfi3cuud3ers3thefil5iste2w4filyudev45finas4tedfi2nes2talfin4ns2tagde2tode4suflin4u1dicf2ly5ud5isu5ditde1scd2es_der5sfon4tu4don5dermss4lid4erhfor4is4siede2pudepi4fra4tf5reade3pade3nufril4frol5ud4side3nou4eneuens4ug5infu5el5dem_s5setfu5nefu3rifusi4fus4s4futade5lode5if4dee_5gal_3galiga3lo2d1eds3selg5amos2s5cssas3u1ing4ganouir4mgass4gath3uita4deaf5dav5e5dav44dato4darygeez44spotspor4s4pon4gelydark5s4ply4spio4geno4genydard5ge3omg4ery5gesigeth54getoge4tydan3g4g1g2da2m2g3gergglu5dach4gh3inspil4gh4to4cutr1gi4agia5rula5bspho5g4icogien5s2pheulch42sperspa4n5spai3c4utu1lenul4gigir4lg3islcu5pycu3picu4mic3umecu2maso5vi5glasu5liagli4bg3lig5culiglo3r4ul3mctu4ru1l4og4na_c3terul1tig2ning4nio4ultug4noncta4b4c3s2cru4dul5ulsor5dgo3isum5absor5ccris4go3nic4rinson4gsona45gos_cri5fcre4vum4bi5credg4raigran25solvsoft3so4ceunat44graygre4nco5zi4gritcoz5egruf4cow5ag5stecove4cos4es5menun4ersmel44corbco4pl4gu4tco3pacon5tsman3gy5racon3ghach4hae4mhae4th5aguha3lac4onecon4aun4ims3latu2ninhan4gs3ket5colocol5ihan4kuni3vhap3lhap5ttras4co4grhar2dco5agsir5aclim45sionhas5shaun44clichaz3acle4m1head3hearun3s4s3ingun4sws2ina2s1in4silysil4eh5elohem4p4clarhena45sidiheo5r1c4l4h4eras5icc2c1itu4orsh3ernshor4h3eryci3phshon34cipecion45cinoc1ingc4inahi5anhi4cohigh5h4il2shiv5h4ina3ship3cilihir4lhi3rohir4phir4rsh3iohis4ssh1inci4lau5pia4h1l4hlan44cier5shevcia5rhmet4ch4tish1erh5ods3cho2hoge4chi2z3chitho4mahome3hon4aho5ny3hoodhoon45chiouptu44ura_ho5ruhos4esew4ihos1p1housu4ragses5tu4rasur4behree5se5shs1e4s4h1s24chedh4tarht1enht5esur4fru3rifser4os4erlhun4tsen5gur1inu3riosen4dhy3pehy3phu1ritces5tur3iz4cesa4sencur4no4iancian3i4semeia5peiass45selv5selfi4atu3centse1le4ceniib5iaib3inseg3ruros43cencib3li3cell5cel_s5edli5bun4icam5icap4icar4s4ed3secticas5i4cayiccu44iceour4pe4ced_i5cidsea5wi2cipseas4i4clyur4pi4i1cr5icrai4cryic4teictu2ccon4urti4ic4umic5uoi3curcci4ai4daiccha5ca4thscof4ide4s4casys4cliscle5i5dieid3ios4choid1itid5iui3dlei4domid3owu5sadu5sanid5uous4apied4ecany4ield3s4cesien4ei5enn4sceii1er_i3esci1estus3ciuse5as4cedscav5if4frsca4pi3fieu5siau3siccan4eiga5bcan5d4calous5sli3gibig3ilig3inig3iti4g4lus1trig3orig5oti5greigu5iig1ur2c5ah4i5i44cag4cach4ca1blusur4sat3usa5tab5utoi3legil1erilev4uta4b4butail3iail2ibil3io3sanc2ilitil2izsal4t5bustil3oqil4tyil5uru3tati4magsa5losal4m4ute_4imetbu3res3act5sack2s1ab4imitim4nii3mon4utelbumi4bu3libu4ga4inav4utenbsor42b5s2u4tis4briti3neervi4vr3vic4inga4inger3vey4ingir3ven4ingo4inguu4t1li5ni_i4niain3ioin1isbo4tor5uscrunk5both5b5ota5bos42i1no5boriino4si4not5borein3seru3in2int_ru4glbor5di5nusut5of5bor_uto5gioge4io2grbon4au5tonru3enu4touion3iio5phior3ibod3iio5thi5otiio4toi4ourbne5gb3lisrt4shblen4ip4icr3triip3uli3quar4tivr3tigrti4db4le_b5itzira4bi4racird5ert5ibi4refbi3tri4resir5gibi5ourte5oir4isr3tebr4tagbin4diro4gvac3uir5ul2b3ifis5agis3arisas52is1cis3chbi4eris3erbi5enrson3be5yor5shais3ibisi4di5sisbe3tw4is4krs3es4ismsbe5trr3secva4geis2piis4py4is1sbe3sp4bes4be5nuval5ois1teis1tirrys4rros44be5mis5us4ita_rron4i4tagrri4vi3tani3tatbe3lorri4or4reoit4esbe1libe5gu4itiarre4frre4cbe3giit3igbe3dii2tim2itio4itisrp4h4r3pet4itonr4peait5rybe3debe3dai5tudit3ul4itz_4be2dbeat3beak4ro4varo4tyros4sro5roiv5ioiv1itror3i5root1roomval1ub3berva5mo4izarva5piron4eban3ijac4qban4ebal1ajer5srom4prom4iba4geazz5i5judgay5alax4idax4ickais4aw4ly3awaya1vorav5ocav3igke5liv3el_ve4lov4elyro1feke4tyv4erdv4e2sa5vanav3ag5k2ick4illkilo5au1thk4in_4ves_ro3crkin4gve4teaun5dk5ishau4l2au3gu4kleyaugh3ve4tyk5nes1k2noat3ulkosh4at5uekro5n4k1s2at5uaat4that5te5vianat4sk5vidil4abolaci4l4adela3dylag4nlam3o3landrob3la4tosr4noular4glar3ilas4ea4topr3nivr3nita2tomr5nica4toglbin44l1c2vi5gnat3ifat1ica5tiar3neyr5net4ati_ld5isat4hol4driv2incle4bileft55leg_5leggr4nerr3nel4len_3lencr4nar1lentle3phle4prvin5dler4e3lergr3mitl4eroat5evr4mio5lesq3lessr3menl3eva4vingrma5cvio3lvi1ou4leyevi5rovi3so4l1g4vi3sulgar3l4gesate5cat5apli4agli2amr3lo4li4asr4lisli5bir4ligr2led4lics4vitil4icul3icyl3idaat5ac3lidirk4lel4iffli4flr3ket3lighvit3r4vityriv3iri2tulim3ili4moris4pl4inar3ishris4clin3ir4is_li5og4l4iqlis4pas1trl2it_as4shas5phri2pla4socask3ia3sicl3kallka4ta3sibl4lawashi4l5leal3lecl3legl3lel5riphas4abar2shrin4grin4ear4sarin4dr2inal5lowarre4l5met3rimol4modlmon42l1n2a3roorim5ilo4civo4la5rigil5ogo3loguri5et5longlon4iri1erlood5r4icolop3il3opmlora44ricir4icerib3a5los_v5oleri4agria4blos4tlo4taar2mi2loutar2izar3iolpa5bl3phal5phi4rhall3pit5voltar4im3volv2l1s2vom5ivori4l4siear4fllt5agar4fivo4rylten4vo4talth3ia3reeltis4ar4drw5ablrgo4naraw4lu3brluch4lu3cilu3enwag5olu5idlu4ma5lumia5raur5gitwait5luo3rw5al_luss4r5gisar4atl5venrgi4nara3pwar4tar3alwas4tly5mely3no2lys4l5ysewa1teaque5ma2car3gicma4clr3get5magnwed4nmaid54maldrg3erweet3wee5vwel4lapoc5re4whwest3ap3in4aphires2tr4es_mar3vre5rumas4emas1t5matemath3rero4r4eriap5atr1er4m5bilre1pumbi4vapar4a5nuran3ul4med_an3uare5lure1lian4twre5itmel4tan2trre4fy4antomen4are3fire2fe4menemen4imens4re1de3ment2r2edme5onre4awwin4g5reavme4tare3anme1tere1alm4etr3wiserdin4rdi4aan4stwith3an2span4snan2samid4amid4gan5otwl4esr4dalm4illmin4a3mindrcum3rc4itr3charcen4min4tm4inumiot4wl3ina3niumis5lan3ita3nip4mithan3ioan1gla3neuws4per2bina3nena5neem4ninw5s4tan1dl4mocrrbi4fmo2d1mo4gomois2xac5ex4agor4bagmo3mer4baba3narrau4ta5monrare4rar5cra5nor4aniam1inr2amiam5ifra4lomo3spmoth3m5ouf3mousam3icxer4ixe5roraf4tr5aclm3petra3bixhil5mpi4aam3ag3quetm5pirmp5is3quer2que_qua5vmpov5mp4tram5ab3alyz4m1s25alyt4alysa4ly_ali4exi5di5multx4ime4aldia4laral3adal5abak1enain5opu3trn4abu4nac_na4can5act5putexpe3dna4lia4i4n4naltai5lya3ic_pur4rag5ulnank4nar3c4narenar3inar4ln5arm3agognas4c4ag4l4ageupul3cage4oaga4na4gab3nautnav4e4n1b4ncar5ad5umn3chaa3ducptu4rpti3mnc1innc4itad4suad3owad4len4dain5dana5diua3ditndi4ba3dion1ditn3dizn5ducndu4rnd2we3yar4n3eara3dianeb3uac4um5neckac3ulp4siba3cio5negene4laac1inne5mine4moa3cie4nene4a2cine4poyc5erac1er2p1s2pro1tn2erepro3lner4rych4e2nes_4nesp2nest4neswpri4sycom4n5evea4carab3uln4gabn3gelpre3vpre3rycot4ng5han3gibng1inn5gitn4glangov4ng5shabi5an4gumy4erf4n1h4a5bannhab3a5bal3n4iani3anni4apni3bani4bl_us5ani5dini4erni2fip3petn5igr_ure3_un3up3per_un5op3pennin4g_un5k5nis_p5pel_un1en4ithp4ped_un1ani3tr_to4pympa3_til4n3ketnk3inyn5ic_se2ny4o5gy4onsnmet44n1n2_ru4d5pounnni4vnob4lpo4tan5ocly4ped_ro4qyper5noge4pos1s_ri4gpo4ry1p4or_res2no4mono3my_ree2po4ninon5ipoin2y4poc5po4gpo5em5pod_4noscnos4enos5tno5tayp2ta3noun_ra4cnowl3_pi2tyra5m_pi4eyr5ia_out3_oth32n1s2ns5ab_or3t_or1d_or3cplu4mnsid1nsig4y3s2eys3ion4socns4pen5spiploi4_odd5nta4bpli4n_ni4cn5tib4plignti2fpli3a3plannti4p1p2l23ysis2p3k2ys3ta_mis1nu5enpi2tun3uinp3ithysur4nu1men5umi3nu4nyt3icnu3trz5a2b_li4t_li3o_li2n_li4g_lev1_lep5_len4pion4oard3oas4e3pi1ooat5ip4inoo5barobe4l_la4mo2binpind4_ju3rob3ul_is4i_ir5rp4in_ocif3o4cil_in3so4codpi3lopi3enocre33piec5pidipi3dep5ida_in2kod3icodi3oo2do4odor3pi4cypian4_ine2o5engze3rooe4ta_im3m_id4l_hov5_hi3b_het3_hes3_go4r_gi4bpho4ro5geoo4gero3gie3phobog3it_gi5azo5ol3phizo4groogu5i4z1z22ogyn_fes3ohab5_eye55phieph1icoiff4_en3sph4ero3ing_en3go5ism_to2qans3v_el5d_eer4bbi4to3kenok5iebio5mo4lanper1v4chs_old1eol3erpe5ruo3letol4fi_du4co3liaper3op4ernp4erio5lilpe5ono5liop4encpe4la_do4tpee4do5livcin2q3pediolo4rol5pld3tabol3ub3pedeol3uno5lusedg1le1loaom5ahoma5l2p2edom2beom4bl_de3o3fich3pe4ao4met_co4ro3mia_co3ek3shao5midom1inll1fll3teapa2teo4monom3pi3pare_ca4tlue1pon4aco3nanm2an_pa4pum2en_on5doo3nenng1hoon4guon1ico3nioon1iso5niupa3nypan4ao3nou_bri2pain4ra1oronsu4rk1hopac4tpa4ceon5umonva5_ber4ood5eood5i6rks_oop3io3ordoost5rz1scope5dop1erpa4ca_ba4g_awn4_av4i_au1down5io3pito5pon1sync_as1s_as1p_as3ctch1c_ar5so5ra_ow3elo3visov4enore5auea1mor3eioun2d_ant4orew4or4guou5etou3blo5rilor1ino1rio_ang4o3riuor2miorn2eo5rofoto5sor5pe3orrhor4seo3tisorst4o3tif_an5cor4tyo5rum_al3tos3al_af1tos4ceo4teso4tano5scros2taos4poos4paz2z3wosi4ue3pai\",\n\t\t6 : \"os3ityos3itoz3ian_os4i4ey1stroos5tilos5titxquis3_am5atot3er_ot5erso3scopor3thyweek1noth3i4ot3ic_ot5icao3ticeor3thiors5enor3ougor3ityor3icaouch5i4o5ria_ani5mv1ativore5sho5realus2er__an3teover3sov4erttot3icoviti4o5v4olow3dero4r3agow5esto4posiop3ingo5phero5phanthy3sc3operaontif5on3t4ionten45paganp3agattele2gonspi4on3omyon4odipan3elpan4tyon3keyon5est3oncil_ar4tyswimm6par5diompro5par5elp4a4ripar4isomo4gepa5terst5scrpa5thy_atom5sta1tio5miniom3icaom3ic_ss3hatsky1scpear4lom3ena_ba5naol3umer1veilpedia4ped4icolli4er1treuo5liteol3ishpeli4epe4nano5lis_pen4thol3ingp4era_r1thoup4erago3li4f_bas4er1krauperme5ol5id_o3liceper3tio3lescolass4oi3terpe5tenpe5tiz_be5raoi5son_be3smphar5iphe3nooi5letph4es_oi3deroic3esph5ingr3ial_3ognizo5g2ly1o1gis3phone5phonio5geneo4gatora3mour2amenofit4tof5itera3chupi4ciepoly1eod5dedo5cureoc3ula1pole_5ocritpee2v1param4oc3raco4clamo3chetob5ingob3a3boast5eoke1st3nu3itpi5thanuf4fentu3meoerst2o3chasplas5tn3tinepli5ernti4ernter3sntre1pn4s3esplum4bnsati4npre4cns4moonon1eqnor5abpo3et5n5lessn5oniz5pointpoly5tnon4agnk3rup3nomicng1sprno5l4inois5i4n3o2dno3blenni3aln5keroppa5ran3itor3nitionis4ta5nine_ni3miznd3thrmu2dron3geripray4e5precipre5copre3emm3ma1bpre4lan5gerep3rese3press_can5cmedi2c5pri4e_ce4la3neticpris3op3rocal3chain4er5ipros3en4erarnera5bnel5iz_cit5rne4gatn5d2ifpt5a4bjanu3aign4itn3chisn5chiln5cheon4ces_nau3seid4iosna3talnas5tinan4itnanci4na5mitna5liahnau3zput3er2n1a2bhex2a3hatch1multi3hair1sm4pousg1utanmpo3rim4p1inmp5iesmphas4rach4empar5iraf5figriev1mpara5mo5seyram3et4mora_rane5oran4gemo3ny_monol4rap3er3raphymo3nizgno5morar5ef4raril1g2nacg1leadmoni3ara5vairav3elra5ziemon5gemon5etght1wemoi5sege3o1dmma5ryr5bine3fluoren1dixmis4ti_de3ra_de3rie3chasrch4err4ci4bm4inglm5ineedu2al_3miliame3tryrdi4er_des4crd3ingdi2rerme5thimet3alre5arr3mestim5ersadi2rende2ticdes3icre4cremen4temensu5re3disred5itre4facmen4dede2mosmen5acmem1o3reg3ismel5onm5e5dyme3died2d5ibren4te5mediare5pindd5a5bdata1bmba4t5cle4arma3tisma5scemar4lyre4spichs3huma5riz_dumb5re3strre4terbrus4qre3tribio1rhre5utiman3izre4valrev3elbi1orbbe2vie_eas3ire5vilba1thyman5is5maniamal4tymal4lima5linma3ligmag5inav3ioul5vet4rg3inglus3teanti1dl5umn_ltur3a_el3emltera4ltane5lp5ingloun5dans5gra2cabllos5etlor5ouric5aslo5rie_enam35ricidri4cie5lope_rid5erri3encri3ent_semi5lom3errig5an3logicril3iz5rimanlob5allm3ingrim4pell5out5rina__er4ril5linal2lin4l3le4tl3le4nriph5eliv3er_ge5og_han5k_hi3er_hon3olin3ea1l4inel4im4p_idol3_in3ci_la4cy_lath5rit3iclim4blrit5urriv5elriv3et4l4i4lli4gra_leg5elif3errk4linlid5er4lict_li4cor5licioli4atorl5ish_lig5a_mal5o_man5a_mer3c5less_rm5ersrm3ingy3thinle5sco3l4erilera5b5lene__mon3ele4matld4erild4erela4v4ar1nis44lativ_mo3rola5tanlan4telan5etlan4dllab3ic_mu5takin4dek3est_ro5filk3en4dro5ker5role__of5te4jestyys3icaron4al5izont_os4tlron4tai4v3ot_pe5tero3pelrop3ici5voreiv5il__pio5n_pre3mro4the_ran4tiv3en_rov5eliv3ellit3uati4tramr5pentrp5er__rit5ui4tismrp3ingit5ill_ros5tit3ica4i2tici5terirre4stit3era4ita5mita4bi_row5dist4lyis4ta_is4sesrsa5tiissen4is4sal_sci3erse4crrs5er_islan4rse5v2yo5netish5opis3honr4si4bis5han5iron_ir4minrtach4_self5iri3turten4diri5dei4rel4ire4de_sell5r4tieriq3uidrtil3irtil4lr4tilyr4tistiq5uefip4re4_sing4_ting4yn3chrru3e4lion3at2in4th_tin5krum3pli4no4cin3ityrun4ty_ton4aruti5nymbol5rvel4i_top5irv5er_r5vestin5geni5ness_tou5s_un3cein3cerincel45ryngei4n3auim3ulai5miniimi5lesac3riim5ida_ve5rasalar4ima5ryim3ageill5abil4istsan4deila5rai2l5am_wil5ii4ladeil3a4bsa5voright3iig3eraab5erd4ific_iff5enif5eroi3entiien5a45ie5gaidi5ou3s4cieab5latidi4arid5ianide3al4scopyab5rogid5ancic3ulaac5ardi2c5ocic3ipaic5inase2c3oi4carai4car_se4d4ei2b5riib5iteib5it_ib5ertib3eraac5aroi4ativ4ian4tse4molsen5ata5ceouh4warts5enedhus3t4s5enin4sentd4sentlsep3a34s1er_hun5kehu4min4servohro3poa5chethov5el5se5umhouse3sev3enho5senhort3eho5rishor5at3hol4ehol5arh5odizhlo3riac5robhis3elhion4ehimer4het4edsh5oldhe2s5ph5eroushort5here5aher4bahera3p3side_5sideshen5atsi5diz4signahel4lyact5ifhe3l4ihe5do55sine_h5ecathe4canad4dinsion5aad5er_har4lehard3e3sitioha5rasha3ranhan4tead3icahang5oadi4ersk5inesk5ing5hand_han4cyhan4cislith5hala3mh3ab4lsmall32g5y3n5gui5t3guard5smithad5ranaeri4eag5ellag3onia5guerso4labsol3d2so3licain5in4grada3s4on_gor5ougo5rizgondo5xpan4dait5ens5ophyal3end3g4o4ggnet4tglad5i5g4insgin5ge3g4in_spen4d2s5peog3imen5gies_3spher5giciagh5outsp5ingge5nizge4natge5lizge5lisgel4inxi5miz4gativgar5n4a5le5oga3nizgan5isga5mets5sengs4ses_fu4minfres5cfort5assi4erss5ilyfore5tfor5ayfo5ratal4ia_fon4dessur5aflo3ref5lessfis4tif1in3gstam4i5stands4ta4p5stat_fin2d5al5levs5tero4allicstew5afight5fi5del5ficie5ficiafi3cer5stickf3icena5log_st3ingf3icanama5ra5stockstom3a5stone2f3ic_3storef2f5iss4tradam5ascs4trays4tridf5fin_fend5efeath3fault5fa3thefar5thfam5is4fa4mafall5eew3inge5verbeven4ie5vengevel3oev3ellev5asteva2p5euti5let5roset3roget5rifsy5rinet3ricet5onaam5eraam5ilyami4noamor5ieti4noe5tidetai5loethod3eten4dtal5enes5urramp5enan3ageta5loge5strotan4detanta3ta5pere3ston4es2toes5times3tigta3rizestan43analy4taticta4tures4prean3arces3pertax4ises5onaes3olue5skintch5etanar4ies4i4ntead4ie2s5ima3natiande4sesh5enan3disan4dowang5iete5geres5ences5ecres5cana4n1icte2ma2tem3at3tenanwrita45erwau4tenesert3era3nieser3set5erniz4erniter4nis5ter3de4rivaan3i3fter3isan4imewo5vener3ineeri4ere3rient3ess_teth5e5ericke1ria4er3ester5esser3ent4erenea5nimier5enaer3emoth3easthe5atthe3iser5el_th5ic_th5icaere3in5thinkere5coth5odea5ninee3realan3ishan4klier4che5anniz4erandti4atoanoth5equi3lep5utat4ic1uan4scoe4probep3rehe4predans3poe4precan4surantal4e3penttim5ulep5anceo5rol3tine_eop3aran4tiewin4deap5eroen3ishen5icsen3etren5esten5esien5eroa3pheren3dicap3itae4nanten5amoem5ulaa3pituti3zen5emnize5missem5ishap5olaem5ine3tles_t5let_em1in2apor5iem3icaem5anael3op_el4labapos3te3liv3el5ishaps5esweath3e3lierel3icaar3actwa5verto3nate3libee4l1erel3egato3rietor5iza5radeelaxa4aran4gto3warelan4dej5udie5insttra5chtraci4ar5av4wa5gere5git5arbal4ar5easeg5ing4voteetrem5iar3enta5ressar5ial4tricsvor5abe3finetro5mitron5i4tronyar3iantro3sp5eficia3rieted5uloed3icae4d1erec3ulaec4tane4cremeco5roec3orae4concar5o5de4comme4cluse4clame5citeec5ifya5ronias3anta5sia_tu4nis2t3up_ecan5ce4belstur3ise4bel_eav3ene4a3tue5atifeath3ieat5eneart3eear4ilear4icear5eseam3ereal3oueal5erea5geread5iedum4be4ducts4duct_duc5eras3tenasur5adrea5rat3abl4d5outdo3natdom5izdo5lor4dlessu4bero3dles_at3alou3ble_d4is3tdirt5idi5niz3dine_at5ech5di3endi4cam1d4i3ad3ge4tud5estdev3ilde3strud3iedud3iesdes3tide2s5oat3egovis3itde4nardemor5at3en_uen4teuer4ilde5milat3eraugh3en3demicater5nuil5izdeli4ede5comde4cildecan4de4bonv3io4rdeb5it4dativ2d3a4bat3estu5laticu4tie5ulcheul3dercuss4icu5riaath5em3cultua5thenul3ingul5ishul4lar4vi4naul4liscu5ityctim3ic4ticuuls5esc5tantultra3ct5angcros4ecrop5ocro4pl5critiath5omum4blycre3at5vilitumor5oat5i5b5crat_cras5tcoro3ncop3iccom5ercol3orun5ishco3inc5clareat3ituunt3abat5ropun4tescit3iz4cisti4cista4cipicc5ing_cin3em3cinatuper5s5videsup3ingci2a5b5chini5videdupt5ib5vide_at4tag4ch1inch3ersch3er_ch5ene3chemiche5loure5atur4fercheap3vi5aliat3uravet3er4ch3abc5e4taau5sib3cessives4tece5ram2cen4e4cedenccou3turs5erur5tesur3theaut5enur4tiecav5al4cativave4nover3thcar5omca5percan4tycan3izcan5iscan4icus4lin3versecal4laver3ieca3latca5dencab3in3butiobuss4ebus5iebunt4iv4eresuten4i4u1t2iv3erenu3tineut3ingv4erelbroth35u5tizbound34b1orabon5at5vere_bom4bibol3icblun4t5blespblath5av3erav5enuebi3ogrbi5netven3om2v1a4bvac5ilbi3lizbet5izbe5strva5liebe5nigbbi4nabas4siva5nizbari4aav5ernbarbi5av5eryvel3liazi4eravi4er\",\n\t\t7 : \"_dri5v4ban5dagvar5iedbina5r43bi3tio3bit5ua_ad4derution5auti5lizver5encbuf4ferus5terevermi4ncall5incast5ercas5tigccompa5z3o1phros5itiv5chanicuri4fico5stati5chine_y5che3dupport54v3iden5cific_un4ter_at5omiz4oscopiotele4g5craticu4m3ingv3i3liz4c3retaul4li4bcul4tiscur5a4b4c5utiva5ternauiv4er_del5i5qdem5ic_de4monsdenti5fdern5izdi4latou4b5ingdrag5on5drupliuar5ant5a5si4tec5essawo4k1enec5ifiee4compear5inate4f3eretro5phewide5sp5triciatri5cesefor5ese4fuse_oth5esiar5dinear4chantra5ventrac4tetrac4itar5ativa5ratioel5ativor5est_ar5adisel5ebraton4alie4l5ic_wea5rieel5igibe4l3ingto5cratem5igraem3i3niemoni5oench4erwave1g4a4pillavoice1ption5eewill5inent5age4enthesvaude3vtill5inep5recaep5ti5bva6guer4erati_tho5rizthor5it5thodicer5ence5ternitteri5zater5iesten4tage4sage_e4sagese4sert_an5est_e4sertse4servaes5idenes5ignaesis4tees5piraes4si4btal4lisestruc5e5titioounc5erxe4cutota5bleset5itiva4m5atoa4matis5stratu4f3ical5a5lyst4ficatefill5instern5isspend4gani5zasqual4la4lenti4g3o3nas5ophiz5sophicxpecto55graph_or5angeuri4al_4graphy4gress_smol5d4hang5erh5a5nizharp5enhar5terhel4lishith5erhro5niziam5eteia4tricic4t3uascour5au2r1al_5scin4dover4nescan4t55sa3tiou5do3ny_ven4de_under5ty2p5al_anti5sylla5bliner4arturn3ari5nite_5initioinsur5aion4eryiphras4_tim5o5_ten5an_sta5blrtroph4_se5rieiq3ui3t5i5r2izis5itiviso5mer4istral5i5ticki2t5o5mtsch3ie_re5mittro3fiti4v3er_i4vers_ros5per_pe5titiv3o3ro_ped5alro5n4is_or5ato4jestierom5ete_muta5bk5iness4latelitr4ial__mist5i_me5terr4ming_lev4er__mar5tilev4eralev4ers_mag5a5liar5iz5ligaterit5ers_lat5errit5er_r5ited__im5pinri3ta3blink5er_hon5ey5litica_hero5ior5aliz_hand5irip5lic_gen3t4tolo2gylloqui5_con5grt1li2erbad5ger4operag_eu4lertho3donter2ic__ar4tie_ge4ome_ge5ot1_he3mo1_he3p6a_he3roe_in5u2tpara5bl5tar2rht1a1mintalk1a5ta3gon_par5age_aster5_ne6o3f_noe1thstyl1is_poly1s5pathic_pre1ampa4tricl3o3niz_sem4ic_semid6_semip4_semir45ommend_semiv4lea4s1a_spin1oom5etryspher1o_to6poglo4ratospe3cio3s2paceso2lute_we2b1l_re1e4ca5bolicom5erseaf6fishside5swanal6ysano5a2cside5stl5ties_5lumniasid2ed_anti1reshoe1stscy4th1s4chitzsales5wsales3cat6tes_augh4tlau5li5fom5atizol5ogizo5litiorev5olure5vertre5versbi5d2ifbil2lab_earth5pera5blro1tronro3meshblan2d1blin2d1blon2d2bor1no5ro1bot1re4ti4zr5le5quperi5stper4malbut2ed_but4tedcad5e1moist5enre5stalress5ibchie5vocig3a3roint5er4matizariv1o1lcous2ticri3tie5phisti_be5stoog5ativo2g5a5rr3a3digm4b3ingre4posir4en4tade4als_od5uctsquasis6quasir6re5fer_p5trol3rec5olldic1aiddif5fra3pseu2dr5ebrat5metric2d1lead2d1li2epro2g1epre1neuod5uct_octor5apoin3came5triem5i5liepli5narpara3memin5glim5inglypi4grappal6matmis4er_m5istryeo3graporth1riop1ism__but4tio3normaonom1icfeb1ruafermi1o_de4moio5a5lesodit1icodel3lirb5ing_gen2cy_n4t3ingmo5lestration4get2ic_4g1lishobli2g1mon4ismnsta5blmon4istg2n1or_nov3el3ns5ceivno1vembmpa5rabno4rarymula5r4nom1a6lput4tinput4tedn5o5miz_cam4penag5er_nge5nesh2t1eoun1dieck2ne1skiifac1etncour5ane3backmono1s6mono3chmol1e5cpref5ac3militapre5tenith5i2lnge4n4end5est__capa5bje1re1mma1la1ply5styr1kovian_car5olprin4t3lo2ges_l2l3ishprof5it1s2tamp\",\n\t\t8 : \"lead6er_url5ing_ces5si5bch5a5nis1le1noidlith1o5g_chill5ilar5ce1nym5e5trych5inessation5arload4ed_load6er_la4c3i5elth5i2lyneg5ativ1lunk3erwrit6er_wrap3arotrav5es51ke6linga5rameteman3u1scmar1gin1ap5illar5tisticamedio6c1me3gran3i1tesima3mi3da5bves1titemil2l1agv1er1eigmi6n3is_1verely_e4q3ui3s5tabolizg5rapher5graphicmo5e2lasinfra1s2mon4ey1lim3ped3amo4no1enab5o5liz_cor5nermoth4et2m1ou3sinm5shack2ppo5sitemul2ti5uab5it5abimenta5rignit1ernato5mizhypo1thani5ficatuad1ratu4n5i4an_ho6r1ic_ua3drati5nologishite3sidin5dling_trib5utin5glingnom5e1non1o1mistmpos5itenon1i4so_re5stattro1p2istrof4ic_g2norespgnet1ism5glo5binlem5aticflow2er_fla1g6elntrol5lifit5ted_treach1etra1versl5i5ticso3mecha6_for5mer_de5rivati2n3o1me3spac6i2t3i4an_thy4l1antho1k2er_eq5ui5to4s3phertha4l1amt3ess2es3ter1geiou3ba3dotele1r6ooxi6d1iceli2t1isonspir5apar4a1leed1ulingea4n3iesoc5ratiztch3i1er_kil2n3ipi2c1a3dpli2c1abt6ap6athdrom3e5d_le6icesdrif2t1a_me4ga1l1prema3cdren1a5lpres2plipro2cess_met4ala3do5word1syth3i2_non1e2m_post1ampto3mat4rec5ompepu5bes5cstrib5utqu6a3si31stor1ab_sem6is4star3tliqui3v4arr1abolic_sph6in1de5clar12d3aloneradi1o6gs3qui3tosports3wsports3cra5n2hascro5e2cor3bin1gespokes5wspi2c1il_te3legrcroc1o1d_un3at5t_dictio5cat1a1s2buss4ingbus6i2esbus6i2erbo2t1u1lro5e2las1s2pacinb1i3tivema5rine_r3pau5li_un5err5r5ev5er__vi2c3arback2er_ma5chinesi5resid5losophyan3ti1n2sca6p1ersca2t1olar2rangesep3temb1sci2uttse3mes1tar3che5tsem1a1ph\",\n\t\t9 : \"re4t1ribuuto5maticl3chil6d1a4pe5able1lec3ta6bas5ymptotyes5ter1yl5mo3nell5losophizlo1bot1o1c5laratioba6r1onierse1rad1iro5epide1co6ph1o3nscrap4er_rec5t6angre2c3i1prlai6n3ess1lum5bia_3lyg1a1miec5ificatef5i5nites2s3i4an_1ki5neticjapan1e2smed3i3cinirre6v3ocde2c5linao3les3termil5li5listrat1a1gquain2t1eep5etitiostu1pi4d1v1oir5du1su2per1e6_mi1s4ers3di1methy_mim5i2c1i5nitely_5maph1ro15moc1ra1tmoro6n5isdu1op1o1l_ko6r1te1n3ar4chs_phi2l3ant_ga4s1om1teach4er_parag6ra4o6v3i4an_oth3e1o1sn3ch2es1to5tes3toro5test1eror5tively5nop5o5liha2p3ar5rttrib1ut1_eth1y6l1e2r3i4an_5nop1oly_graph5er_5eu2clid1o1lo3n4omtrai3tor1_ratio5na5mocratiz_rav5en1o\",\n\t\t10 : \"se1mi6t5ic3tro1le1um5sa3par5iloli3gop1o1am1en3ta5bath3er1o1s3slova1kia3s2og1a1myo3no2t1o3nc2tro3me6c1cu2r1ance5noc3er1osth1o5gen1ih3i5pel1a4nfi6n3ites_ever5si5bs2s1a3chu1d1ri3pleg5_ta5pes1trproc3i3ty_s5sign5a3b3rab1o1loiitin5er5arwaste3w6a2mi1n2ut1erde3fin3itiquin5tes5svi1vip3a3r\",\n\t\t11 : \"pseu3d6o3f2s2t1ant5shimi1n2ut1estpseu3d6o3d25tab1o1lismpo3lyph1onophi5lat1e3ltravers3a3bschro1ding12g1o4n3i1zat1ro1pol3it3trop1o5lis3trop1o5lesle3g6en2dreeth1y6l1eneor4tho3ni4t\",\n\t\t12 : \"3ra4m5e1triz1e6p3i3neph1\"\n\t}\n};\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n", "var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n", "var baseFlatten = require('./_baseFlatten');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\nmodule.exports = flattenDeep;\n", "/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n", "import\n    './generator': { Generator }\n    './symbols': { ligatures, diacritics }\n    '@svgdotjs/svg.js': { SVG }\n    'katex/dist/katex.mjs': katex\n\n    'hypher': Hypher\n    'hyphenation.en-us': h-en\n    'he'\n\n    'lodash/flattenDeep'\n    'lodash/compact'\n\n\nhe.decode.options.strict = true\n\n\n\nexport class HtmlGenerator extends Generator\n\n    ### public instance vars\n\n    # tokens translated to html\n    sp:                 ' '\n    brsp:               '\\u200B '               # U+200B + ' ' breakable but non-collapsible space\n    nbsp:               he.decode \"&nbsp;\"      # U+00A0\n    visp:               he.decode \"&blank;\"     # U+2423  visible space\n    zwnj:               he.decode \"&zwnj;\"      # U+200C  prevent ligatures\n    shy:                he.decode \"&shy;\"       # U+00AD  word break/hyphenation marker\n    thinsp:             he.decode \"&thinsp;\"    # U+2009\n\n\n    ### private static vars\n    create =            (type, classes) ->\n                            el = document.createElement type\n                            if classes\n                                el.setAttribute \"class\", classes\n                            return el\n\n    blockRegex =        //^(address|blockquote|body|center|dir|div|dl|fieldset|form|h[1-6]|hr|isindex|menu|noframes\n                           |noscript|ol|p|pre|table|ul|dd|dt|frameset|li|tbody|td|tfoot|th|thead|tr|html)$//i\n\n    isBlockLevel =      (el) -> blockRegex.test el.nodeName\n\n\n    # generic elements\n\n    inline:             \"span\"\n    block:              \"div\"\n\n\n    # typographic elements\n\n    titlepage:          ~> create @block, \"titlepage\"\n    title:              ~> create @block, \"title\"\n    author:             ~> create @block, \"author\"\n    date:               ~> create @block, \"date\"\n\n    abstract:           ~> create @block, \"abstract\"\n\n    part:               \"part\"\n    chapter:            \"h1\"\n    section:            \"h2\"\n    subsection:         \"h3\"\n    subsubsection:      \"h4\"\n    paragraph:          \"h5\"\n    subparagraph:       \"h6\"\n\n    linebreak:          \"br\"\n\n    par:                \"p\"\n\n    list:               ~> create @block, \"list\"\n\n    unordered-list:     ~> create \"ul\",   \"list\"\n    ordered-list:       ~> create \"ol\",   \"list\"\n    description-list:   ~> create \"dl\",   \"list\"\n\n    listitem:           \"li\"\n    term:               \"dt\"\n    description:        \"dd\"\n\n    itemlabel:          ~> create @inline, \"itemlabel\"\n\n    quote:              ~> create @block, \"list quote\"\n    quotation:          ~> create @block, \"list quotation\"\n    verse:              ~> create @block, \"list verse\"\n\n    multicols:          (c) ~> ~>\n                            el = create @block, \"multicols\"\n                            el.setAttribute \"style\", \"column-count:\" + c\n                            return el\n\n\n    anchor:             (id) ~> ->\n                            el = document.createElement \"a\"\n                            el.id? = id\n                            return el\n\n    link:               (url) ~> ->\n                            el = document.createElement \"a\"\n                            el.setAttribute \"href\", url if url\n                            return el\n\n    verb:               ~> create \"code\", \"tt\"\n    verbatim:           \"pre\"\n\n    img:                \"img\"\n\n    image:              (width, height, url) ~> ~>\n                            el = create @img\n                            el.src = url\n                            el.height = height\n                            el.width = width\n\n                            return el\n\n    picture:            ~> create @inline, \"picture\"\n    picture-canvas:     ~> create @inline, \"picture-canvas\"\n\n\n\n    ### public instance vars (vars beginning with \"_\" are meant to be private!)\n\n    SVG: SVG\n    KaTeX: katex\n\n    _dom:   null\n\n\n\n    # CTOR\n    #\n    # options:\n    #  - documentClass: the default document class if a document without preamble is parsed\n    #  - CustomMacros: a constructor (class/function) with additional custom macros\n    #  - hyphenate: boolean, enable or disable automatic hyphenation\n    #  - languagePatterns: language patterns object to use for hyphenation if it is enabled (default en)\n    #    TODO: infer language from LaTeX preamble and load hypenation patterns automatically\n    #  - styles: array with additional CSS stylesheets\n    #  - precision: precision of numbers in CSS and SVG\n    (options) ->\n        @_options = Object.assign {\n            documentClass: \"article\"\n            styles: []\n            hyphenate: true\n            languagePatterns: h-en\n            precision: 3\n        }, options\n\n        if @_options.hyphenate\n            @_h = new Hypher(@_options.languagePatterns)\n\n        @reset!\n\n\n    reset: !->\n        super!\n\n        @_dom = document.createDocumentFragment!\n\n\n\n    ### character/text creation\n\n    character: (c) ->\n        c\n\n    textquote: (q) ->\n        switch q\n        | '`'   => @symbol \\textquoteleft\n        | '\\''  => @symbol \\textquoteright\n\n    hyphen: ->\n        if @_activeAttributeValue('fontFamily') == 'tt'\n            '-'                                         # U+002D\n        else\n            he.decode \"&hyphen;\"                        # U+2010\n\n    ligature: (l) ->\n        # no ligatures in tt\n        if @_activeAttributeValue('fontFamily') == 'tt'\n            l\n        else\n            ligatures.get l\n\n\n    hasDiacritic: (d) ->\n        diacritics.has d\n\n    # diacritic d for char c\n    diacritic: (d, c) ->\n        if not c\n            diacritics.get(d)[1]        # if only d is given, use the standalone version of the diacritic\n        else\n            c + diacritics.get(d)[0]    # otherwise add it to the character c\n\n    controlSymbol: (c) ->\n        switch c\n        | '/'                   => @zwnj\n        | ','                   => @thinsp\n        | '-'                   => @shy\n        | '@'                   => '\\u200B'       # nothing, just prevent spaces from collapsing\n        | _                     => @character c\n\n\n    ### get the result\n\n\n    /* @return the HTMLDocument for use as a standalone webpage\n     * @param baseURL the base URL to use to build an absolute URL\n     */\n    htmlDocument: (baseURL) ->\n        doc = document.implementation.createHTMLDocument @documentTitle\n\n        ### head\n\n        charset = document.createElement \"meta\"\n        charset.setAttribute \"charset\", \"UTF-8\"\n        doc.head.appendChild charset\n\n        if not baseURL\n            # when used in a browser context, always insert all assets with absolute URLs;\n            # this is also useful when using a Blob in iframe.src (see also #12)\n            baseURL = window.location?.href\n\n        if baseURL\n            base = document.createElement \"base\"    # TODO: is the base element still needed??\n            base.href = baseURL                     # TODO: not in svgdom\n            doc.head.appendChild base\n\n            doc.head.appendChild @stylesAndScripts baseURL\n        else\n            doc.head.appendChild @stylesAndScripts!\n\n\n        ### body\n\n        doc.body.appendChild @domFragment!\n        @applyLengthsAndGeometryToDom doc.documentElement\n\n        return doc\n\n\n\n\n    /* @return a DocumentFragment consisting of stylesheets and scripts */\n    stylesAndScripts: (baseURL) ->\n        el = document.createDocumentFragment!\n\n        createStyleSheet = (url) ->\n            link = document.createElement \"link\"\n            link.type = \"text/css\"\n            link.rel = \"stylesheet\"\n            link.href = url\n            link\n\n        createScript = (url) ->\n            script = document.createElement \"script\"\n            script.src = url\n            script\n\n        if baseURL\n            el.appendChild createStyleSheet new URL(\"css/katex.css\", baseURL).toString!\n            el.appendChild createStyleSheet new URL(@documentClass@@css, baseURL).toString!\n\n            for style in @_options.styles\n                el.appendChild createStyleSheet new URL(style, baseURL).toString!\n\n            el.appendChild createScript new URL(\"js/base.js\", baseURL).toString!\n        else\n            el.appendChild createStyleSheet \"css/katex.css\"\n            el.appendChild createStyleSheet @documentClass@@css\n\n            for style in @_options.styles\n                el.appendChild createStyleSheet style\n\n            el.appendChild createScript \"js/base.js\"\n\n        return el\n\n\n\n    /* @return DocumentFragment, the full page without stylesheets or scripts */\n    domFragment: ->\n        el = document.createDocumentFragment!\n\n        # text body\n        el.appendChild @create @block, @_dom, \"body\"\n\n        if @_marginpars.length\n            # marginpar on the right - TODO: is there any configuration possible to select which margin?\n            #el.appendChild @create @block, null, \"margin-left\"\n            el.appendChild @create @block, @create(@block, @_marginpars, \"marginpar\"), \"margin-right\"\n\n        return el\n\n\n    /* write the TeX lengths and page geometry to the DOM */\n    applyLengthsAndGeometryToDom: (el) !->\n\n        # root font size\n        el.style.setProperty '--size', @length(\\@@size).value\n\n        ### calculate page geometry\n        #\n        # set body's and margins' width to percentage of viewport (= paperwidth)\n        #\n        # we cannot distinguish between even/oddsidemargin - currently, only oddsidemargin is used\n        #\n        # textwidth percent  = textwidth px/paperwidth px\n        # marginleftwidth  % = (oddsidemargin px + toPx(1in))/paperwidth px\n        # marginrightwidth % = 100% - (textwidth + marginleftwidth), if there is no room left, the margin is 0% width\n\n        # do this if a static, non-responsive page is desired (TODO: make configurable!)\n        #el.style.setProperty '--paperwidth', @length \\paperwidth).value\n\n        twp =  100 * (@length \\textwidth).ratio(@length \\paperwidth)\n        mlwp = 100 * (@length(\\oddsidemargin).add new @Length 1, \"in\").ratio(@length \\paperwidth)\n        mrwp = Math.max(100 - twp - mlwp, 0)\n\n        el.style.setProperty '--textwidth', @round(twp) + \"%\"\n        el.style.setProperty '--marginleftwidth', @round(mlwp) + \"%\"\n        el.style.setProperty '--marginrightwidth', @round(mrwp) + \"%\"\n\n        if mrwp > 0\n            # marginparwidth percentage relative to parent, which is marginrightwidth!\n            mpwp = 100 * 100 * (@length \\marginparwidth).ratio(@length \\paperwidth) / mrwp\n            el.style.setProperty '--marginparwidth', @round(mpwp) + \"%\"\n        else\n            el.style.setProperty '--marginparwidth', \"0px\"\n\n        # set the rest of the lengths (TODO: write all defined lengths to CSS, for each group)\n        el.style.setProperty '--marginparsep', @length(\\marginparsep).value\n        el.style.setProperty '--marginparpush', @length(\\marginparpush).value\n\n\n\n\n    ### document creation\n\n    createDocument: (fs) !->\n        appendChildren @_dom, fs\n\n\n\n    ### element creation\n\n    # type: string or function/element factory\n    # children: an Element or an array of Element\n    create: (type, children, classes = \"\") ->\n        if typeof type == \"function\"\n            el = type!\n            if el.hasAttribute \"class\"\n                classes = el.getAttribute(\"class\") + \" \" + classes\n        else\n            el = document.createElement type\n\n        if @alignment!\n            classes += \" \" + @alignment!\n\n\n        # if continue then do not add parindent or parskip, we are not supposed to start a new paragraph\n        if @_continue and @location!.end.offset > @_continue\n            classes = classes + \" continue\"\n            @break!\n\n        if classes.trim!\n            el.setAttribute \"class\", classes.replace(/\\s+/g, ' ').trim!\n\n        appendChildren el, children\n\n    # create a text node that has font attributes set and allows for hyphenation\n    createText: (t) ->\n        return if not t\n        @addAttributes document.createTextNode if @_options.hyphenate then @_h.hyphenateText t else t\n\n    # create a pure text node without font attributes and no hyphenation\n    createVerbatim: (t) ->\n        return if not t\n        document.createTextNode t\n\n    # create a fragment; arguments may be Node(s) and/or arrays of Node(s)\n    createFragment: ->\n        children = compact flattenDeep arguments\n\n        # only create an empty fragment if explicitely requested: no arguments given\n        return if arguments.length > 0 and (not children or !children.length)\n\n        # don't wrap a single node\n        return children.0 if children.length == 1 and children.0.nodeType\n\n        f = document.createDocumentFragment!\n        appendChildren f, children\n\n    createImage: (width, height, url) ->\n        @create @image(width, height, url)\n\n    createPicture: (size, offset, content) ->\n        # canvas\n        canvas = @create @picture-canvas            # TODO: this might add CSS classes... ok?\n        appendChildren canvas, content\n\n        # offset sets the coordinates of the lower left corner, so shift negatively\n        if offset\n            canvas.setAttribute \"style\", \"left:#{offset.x.mul(-1).value};bottom:#{offset.y.mul(-1).value}\"\n\n        # picture\n        pic = @create @picture\n        pic.appendChild canvas\n        pic.setAttribute \"style\", \"width:#{size.x.value};height:#{size.y.value}\"\n\n        pic\n\n\n\n\n\n    # for skip == smallskip, medskip, bigskip\n    createVSpaceSkip: (skip) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace \" + skip\n        return span\n\n    createVSpaceSkipInline: (skip) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace-inline \" + skip\n        return span\n\n\n    createVSpace: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace\"\n        span.setAttribute \"style\", \"margin-bottom:\" + length.value\n        return span\n\n    createVSpaceInline: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace-inline\"\n        span.setAttribute \"style\", \"margin-bottom:\" + length.value\n        return span\n\n    # create a linebreak with a given vspace between the lines\n    createBreakSpace: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"breakspace\"\n        span.setAttribute \"style\", \"margin-bottom:\" + length.value\n        # we need to add the current font in case it uses a relative length (e.g. em)\n        return @addAttributes span\n\n    createHSpace: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"style\", \"margin-right:\" + length.value\n        return span\n\n\n\n\n    parseMath: (math, display) ->\n        f = document.createDocumentFragment!\n        katex.render math, f,\n            displayMode: !!display\n            throwOnError: false\n        f\n\n\n\n    ## attributes and nodes/elements\n\n    # add the given attribute(s) to a single element\n    addAttribute: (el, attrs) !->\n        if el.hasAttribute \"class\"\n            attrs = el.getAttribute(\"class\") + \" \" + attrs\n        el.setAttribute \"class\", attrs\n\n    hasAttribute: (el, attr) ->\n        el.hasAttribute \"class\" and //\\b#{attr}\\b//.test el.getAttribute \"class\"\n\n\n    # this wraps the current attribute values around the given element or array of elements\n    addAttributes: (nodes) ->\n        attrs = @_inlineAttributes!\n        return nodes if not attrs\n\n        if nodes instanceof window.Element\n            if isBlockLevel nodes\n                return @create @block, nodes, attrs\n            else\n                return @create @inline, nodes, attrs\n        else if nodes instanceof window.Text or nodes instanceof window.DocumentFragment\n            return @create @inline, nodes, attrs\n        else if Array.isArray nodes\n            return nodes.map (node) -> @create @inline, node, attrs\n        else\n            console.warn \"addAttributes got an unknown/unsupported argument:\", nodes\n\n        return nodes\n\n\n\n\n    ### private helpers\n\n    appendChildren = (parent, children) ->\n        if children\n            if Array.isArray children\n                for i to children.length\n                    parent.appendChild children[i] if children[i]?\n            else\n                parent.appendChild children\n\n        return parent\n\n\n\n    # private utilities\n\n    debugDOM = (oParent, oCallback) !->\n        if oParent.hasChildNodes()\n            oNode = oParent.firstChild\n            while oNode, oNode = oNode.nextSibling\n                debugDOM(oNode, oCallback)\n\n        oCallback.call(oParent)\n\n\n    debugNode = (n) !->\n        return if not n\n        if typeof n.nodeName !~= \"undefined\"\n            console.log n.nodeName + \":\", n.textContent\n        else\n            console.log \"not a node:\", n\n\n    debugNodes = (l) !->\n        for n in l\n            debugNode n\n\n    debugNodeContent = !->\n        if @nodeValue\n            console.log @nodeValue\n", "import { parse } from './latex-parser'\nimport { HtmlGenerator } from './html-generator'\n\nexport let LaTeXJSComponent = null\n\n// only define LaTeXJSComponent in browser context, i.e., if HTMLElement exists\nif (typeof HTMLElement != 'undefined') {\n  //  path of this script\n  let path = import.meta.url\n\n  LaTeXJSComponent = class extends HTMLElement {\n    constructor() {\n      super()\n      this.shadow =  this.attachShadow({mode: 'open'})\n      // wait for some LaTeX source to appear in the upgrade-case\n      if (!this.textContent) {\n        const observer = new MutationObserver(mutationList => {\n          if (this.textContent) {\n            // no longer need to watch for change\n            // TODO: actually, we could keep watching to support editing!\n            observer.disconnect();\n            this.onContentReady();\n          }\n        })\n        observer.observe(this, {\n          childList: true\n        })\n      } else {\n        this.onContentReady();\n      }\n    }\n\n    async onContentReady() {\n      // empty DOM\n      while (this.shadow.lastChild) {\n        this.shadow.lastChild.remove()\n      }\n\n      // read options\n      const hyphenate = this.getAttribute(\"hyphenate\") !== \"false\"\n\n      if (this.hasAttribute(\"baseURL\"))\n        path = this.getAttribute(\"baseURL\")\n\n      let CustomMacros;\n      if (this.hasAttribute(\"macros\"))\n        CustomMacros = (await import(this.getAttribute(\"macros\"))).default\n\n\n      // parse\n      const generator = parse(this.textContent, { generator: new HtmlGenerator({ hyphenate, CustomMacros }) })\n\n      // create DOM\n      let page = document.createElement(\"div\")\n      page.setAttribute(\"class\", \"page\")\n      page.appendChild(generator.domFragment())\n      if (this.hasAttribute(\"stylesheet\")) {\n        const style = document.createElement(\"link\")\n        style.type = \"text/css\"\n        style.rel = \"stylesheet\"\n        style.href = this.getAttribute(\"stylesheet\")\n        this.shadow.appendChild(style)\n      }\n\n      this.shadow.appendChild(generator.stylesAndScripts(path))\n      this.shadow.appendChild(page)\n\n      generator.applyLengthsAndGeometryToDom(this.shadow.host)\n\n      // we need to add CMU fonts to the parent page (if they weren't added yet)\n      const pDoc = this.ownerDocument\n      const links = pDoc.querySelectorAll('link')\n      const cmu = new URL(\"fonts/cmu.css\", path)\n\n      for (let link of links) {\n        if (link.href == cmu.href)\n          return\n      }\n\n      const linkEl = pDoc.createElement(\"link\")\n      linkEl.type = \"text/css\"\n      linkEl.rel = \"stylesheet\"\n      linkEl.href = cmu.href\n\n      pDoc.head.appendChild(linkEl)\n    }\n\n    connectedCallback() { }\n  }\n}"],
  "mappings": "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Ae,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,MAAe,OAAM,KAAS,WAAU,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,MAAK,MAAe,QAAO,KAAS,QAAO,KAAS,MAAK,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,MAAe,QAAO,MAAe,OAAM,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,QAAO,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,KAAS,MAAK,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,MAAK,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAO,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,QAAO,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,MAAK,KAAO,SAAQ,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,WAAU,KAAS,WAAU,KAAS,MAAK,KAAS,OAAM,KAAS,MAAK,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,WAAU,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KA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,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAA,GACzB,MAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAA,GACzB,MAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAA,GACzB,MAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAA,GACzB,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ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AAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GA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G,GAAG,OAAA,GAChC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,MAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,MAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GAC5B,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,EAAA,GAE9B,aAAa,EACX,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,KAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,MAAM,GAAG,GAAG,KAAA,GACtB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAChC,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,KAAA,GAClC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,KAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,MAAM,SAAS,GAAG,GAAG,KAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,KAAA,GAC9B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACvC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,QAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,QAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,QAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,MAAM,GAAG,GAAG,OAAA,GACxB,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,OAAS,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC5B,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,EAAA,GAEpC,mBAAmB,EACjB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,SAAS,MAAM,SAAS,GAAG,OAAA,GAClC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,MAAM,SAAS,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAA,UAAW,SAAS,SAAS,GAAG,OAAA,GACtC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,OAAO,GAAG,OAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,OAAA,GAClC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,OAAO,GAAG,OAAA,GAC9B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,GAAA,GACtC,KAAO,CAAC,SAAS,SAAS,OAAO,GAAG,OAAA,GACpC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,QAAQ,GAAG,OAAA,GACrC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,OAAO,GAAG,OAAA,GACpC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,OAAO,GAAG,OAAA,GACpC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,MAAM,SAAS,SAAS,GAAG,OAAA,GACnC,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,KAAA,GACtC,KAAO,CAAC,GAAG,SAAS,OAAO,GAAG,OAAA,GAC9B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,OAAO,GAAG,OAAA,GAC9B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,KAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC/B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,EAAA,GAEnC,eAAe,EACb,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,SAAS,MAAM,SAAS,GAAG,OAAA,GAClC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,MAAM,SAAS,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,SAAS,SAAS,QAAQ,GAAG,OAAA,GACpC,IAAM,CAAA,UAAW,SAAS,SAAS,GAAG,OAAA,GACtC,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,OAAA,GAClC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,IAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC/B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,IAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,MAAM,SAAS,SAAS,GAAG,OAAA,GACnC,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAChC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,EAAA,GAE7B,gBAAgB,EACd,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,GAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,MAAM,GAAG,GAAG,GAAA,GACtB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC7B,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAChC,IAAM,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,OAAO,GAAG,IAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,GAAA,GAClC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,GAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,MAAM,SAAS,GAAG,GAAG,GAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,CAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,MAAM,GAAG,GAAG,KAAA,GACxB,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACvC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,GACjC,MAAQ,CAAC,OAAO,OAAO,GAAG,GAAG,CAAA,GAC7B,MAAQ,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC7B,MAAQ,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC7B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,OAAO,OAAO,GAAG,GAAG,CAAA,GAC7B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,SAAS,SAAS,MAAA,GACvC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,GAAA,GAC9B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAC,KAAK,KAAK,GAAG,GAAG,OAAA,GACzB,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,CAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACvC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,QAAS,OAAO,GAAG,GAAG,CAAA,GAC9B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,QAAS,MAAM,GAAG,GAAG,KAAA,GAC7B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,CAAA,GAC/B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,CAAA,GAC/B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,OAAO,MAAM,GAAG,GAAG,KAAA,GAC5B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAC,MAAO,OAAO,GAAG,GAAG,GAAA,GAC7B,MAAQ,CAAC,MAAM,KAAK,GAAG,GAAG,KAAA,GAC1B,MAAQ,CAAA,OAAQ,MAAM,GAAG,GAAG,KAAA,GAC5B,MAAQ,CAAA,MAAO,MAAM,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,CAAA,GAClC,MAAQ,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC7B,MAAQ,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC7B,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAA,UAAW,SAAS,GAAG,GAAG,GAAA,GAClC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,MAAM,GAAG,GAAG,OAAA,GACxB,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GACjC,OAAS,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,OAAO,OAAO,GAAG,GAAG,KAAA,GAC9B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC5B,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,CAAA,EAAA,GAEpC,mBAAmB,EACjB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,QAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,MAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,QAAQ,GAAG,OAAA,GACrC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,OAAQ,GAAG,OAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,GAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,MAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GAChC,MAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,MAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,OAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC5B,OAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,EAAA,GAEpC,eAAe,EACb,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,SAAS,IAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,MAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,QAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,MAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACrC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,MAAM,SAAS,OAAA,GACnC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,MAAA,GACtC,KAAO,CAAC,GAAG,SAAS,OAAQ,SAAS,MAAA,GACrC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,MAAA,GAC5C,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,MAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,QAAQ,SAAS,OAAA,GACrC,KAAO,CAAC,GAAG,SAAS,SAAS,SAAS,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACtC,KAAO,CAAC,SAAS,SAAS,SAAS,SAAS,OAAA,GAC5C,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,MAAQ,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,GACvC,MAAQ,CAAC,GAAG,SAAS,GAAG,SAAS,MAAA,GACjC,OAAS,CAAC,GAAG,SAAS,GAAG,SAAS,OAAA,GAClC,OAAS,CAAC,SAAS,SAAS,GAAG,SAAS,OAAA,EAAA,GAE1C,kBAAkB,EAChB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,IAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,MAAM,GAAG,GAAG,IAAA,GACtB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,OAAA,GAChC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GACzB,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,IAAA,GAClC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,IAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,GAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,MAAM,SAAS,GAAG,GAAG,IAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,IAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,IAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,EAAA,GAE7B,oBAAoB,EAClB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,QAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,SAAS,MAAM,SAAS,GAAG,GAAA,GAClC,IAAM,CAAC,SAAS,MAAM,SAAS,GAAG,OAAA,GAClC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,MAAM,SAAS,GAAG,GAAA,GAC5B,IAAM,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACrC,IAAM,CAAC,OAAO,SAAS,GAAG,GAAG,OAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,OAAO,SAAS,SAAS,GAAG,OAAA,GACnC,IAAM,CAAA,OAAQ,MAAM,SAAS,GAAG,OAAA,GAChC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,OAAO,SAAS,SAAS,GAAG,OAAA,GACnC,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,MAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC9B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,MAAM,MAAM,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,QAAQ,GAAG,GAAA,GAC9B,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,GAAA,GAClC,IAAM,CAAC,GAAG,SAAS,QAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,GAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,SAAS,SAAS,QAAQ,GAAG,OAAA,GACrC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,QAAQ,GAAG,OAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,MAAM,SAAS,SAAS,GAAG,GAAA,GACnC,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,QAAQ,GAAG,GAAA,GAC/B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,CAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,QAAS,GAAG,GAAA,EAAA,GAEnC,qBAAqB,EACnB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,GAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,MAAM,GAAG,GAAG,GAAA,GACtB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAC/B,IAAM,CAAC,OAAO,SAAS,GAAG,GAAG,OAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,OAAO,SAAS,GAAG,GAAG,OAAA,GAC7B,IAAM,CAAA,OAAQ,MAAM,GAAG,GAAG,OAAA,GAC1B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,OAAO,SAAS,GAAG,GAAG,OAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,MAAA,GACzB,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,OAAO,GAAG,OAAA,GAC7B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,MAAM,MAAM,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GACzB,IAAM,CAAC,MAAM,SAAS,SAAS,GAAG,GAAA,GAClC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,GAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,SAAS,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,SAAS,GAAG,OAAA,GACtC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,MAAM,SAAS,GAAG,GAAG,GAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,OAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,GAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,SAAS,GAAG,CAAA,GACjC,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,GAC3B,MAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAA,EAAA,GAE7B,kBAAkB,EAChB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,QAAQ,GAAG,OAAA,GAC1B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,SAAS,KAAK,SAAS,GAAG,OAAA,GACjC,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,QAAQ,GAAG,MAAA,GAC1B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,IAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,OAAA,GAC3B,IAAM,CAAC,GAAG,KAAK,QAAQ,GAAG,OAAA,GAC1B,IAAM,CAAC,GAAG,KAAK,SAAS,GAAG,MAAA,GAC3B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,EAAA,GAEtB,iBAAiB,EACf,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC7B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,OAAA,GAC1B,MAAQ,CAAA,QAAW,OAAO,GAAG,GAAG,OAAA,GAChC,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,CAAA,GAC9B,MAAQ,CAAA,SAAW,OAAO,GAAG,GAAG,OAAA,GAChC,MAAQ,CAAA,SAAW,OAAO,GAAG,GAAG,OAAA,GAChC,MAAQ,CAAC,SAAS,OAAO,SAAS,GAAG,OAAA,GACrC,MAAQ,CAAC,OAAO,OAAO,SAAS,GAAG,OAAA,GACnC,MAAQ,CAAC,OAAO,OAAO,SAAS,GAAG,OAAA,GACnC,MAAQ,CAAC,SAAS,OAAO,SAAS,GAAG,OAAA,GACrC,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAA,QAAW,OAAO,GAAG,GAAG,OAAA,GAChC,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,EAAA,GAEjC,iBAAiB,EACf,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC7B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,CAAA,GACvB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,CAAA,GACvB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,CAAA,GACvB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,CAAA,GACvB,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,CAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,SAAS,GAAG,OAAA,GACpC,MAAQ,CAAC,OAAO,MAAM,SAAS,GAAG,OAAA,GAClC,MAAQ,CAAC,OAAO,MAAM,SAAS,GAAG,OAAA,GAClC,MAAQ,CAAC,SAAS,MAAM,SAAS,GAAG,OAAA,GACpC,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,EAAA,GAEjC,iBAAiB,EACf,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,IAAA,GAC7B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,IAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,OAAA,GACvB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,OAAA,GACvB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,OAAA,GACvB,KAAO,CAAC,GAAG,MAAM,GAAG,GAAG,OAAA,GACvB,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,CAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,IAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,IAAA,EAAA,GAEjC,iBAAiB,EACf,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACnB,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,IAAM,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC5B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC7B,KAAO,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC7B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IAAA,GACpB,KAAO,CAAC,GAAG,OAAO,GAAG,GAAG,MAAA,GACxB,KAAO,CAAC,GAAG,OAAO,GAAG,GAAG,MAAA,GACxB,KAAO,CAAC,GAAG,OAAO,GAAG,GAAG,MAAA,GACxB,KAAO,CAAC,GAAG,OAAO,GAAG,GAAG,MAAA,GACxB,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,CAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,KAAA,GAC/B,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,KAAA,GAC/B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,KAAA,GAC/B,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,KAAA,GAC3B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,KAAA,GAC/B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAA,QAAW,OAAO,GAAG,GAAG,OAAA,GAChC,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAA,QAAW,OAAO,GAAG,GAAG,OAAA,GAChC,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,OAAA,GAC/B,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,GAAG,KAAK,GAAG,GAAG,OAAA,GACvB,MAAQ,CAAC,MAAO,KAAK,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC9B,MAAQ,CAAC,SAAS,GAAG,GAAG,GAAG,OAAA,GAC3B,MAAQ,CAAC,SAAS,OAAO,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAC,SAAS,MAAM,GAAG,GAAG,OAAA,GAC/B,OAAS,CAAA,SAAW,OAAO,GAAG,GAAG,OAAA,GACjC,OAAS,CAAA,SAAW,OAAO,GAAG,GAAG,OAAA,GACjC,OAAS,CAAC,GAAG,MAAM,GAAG,GAAG,IAAA,GACzB,OAAS,CAAC,GAAG,MAAM,GAAG,GAAG,IAAA,GACzB,OAAS,CAAC,GAAG,MAAM,GAAG,GAAG,IAAA,GACzB,OAAS,CAAC,GAAG,MAAM,GAAG,GAAG,IAAA,EAAA,GAE3B,sBAAsB,EACpB,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,KAAA,GACnB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAChC,IAAM,CAAC,SAAS,OAAO,GAAG,GAAG,KAAA,GAC7B,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAChC,IAAM,CAAC,GAAG,OAAO,GAAG,GAAG,KAAA,GACvB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAChC,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAChC,IAAM,CAAA,UAAW,SAAS,GAAG,GAAG,KAAA,GAChC,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAC/B,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,SAAS,GAAG,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,IAAM,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GACzB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,GAAG,GAAG,GAAG,KAAA,GACpB,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,GAAG,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAA,GAChC,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAA,GAC1B,KAAO,C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",
  "names": ["root", "freeExports", "exports", "freeModule", "module", "freeGlobal", "global", "window", "regexAstralSymbols", "regexAsciiWhitelist", "regexBmpWhitelist", "regexEncodeNonAscii", "encodeMap", "_", "undefined", "$", "fj", "regexEscape", "escapeMap", "regexInvalidEntity", "regexInvalidRawCodePoint", "regexDecode", "decodeMap", "aacute", "Aacute", "abreve", "Abreve", "ac", "acd", "acE", "acirc", "Acirc", "acute", "acy", "Acy", "aelig", "AElig", "af", "afr", "Afr", "agrave", "Agrave", "alefsym", "aleph", "alpha", "Alpha", "amacr", "Amacr", "amalg", "amp", "AMP", "and", "And", "andand", "andd", "andslope", "andv", "ang", "ange", "angle", "angmsd", "angmsdaa", "angmsdab", "angmsdac", "angmsdad", "angmsdae", "angmsdaf", "angmsdag", "angmsdah", "angrt", "angrtvb", "angrtvbd", "angsph", "angst", "angzarr", "aogon", "Aogon", "aopf", "Aopf", "ap", "apacir", "ape", "apE", "apid", "apos", "ApplyFunction", "approx", "approxeq", "aring", "Aring", "ascr", "Ascr", "Assign", "ast", "asymp", "asympeq", "atilde", "Atilde", "auml", "Auml", "awconint", "awint", "backcong", "backepsilon", "backprime", "backsim", "backsimeq", "Backslash", "Barv", "barvee", "barwed", "Barwed", "barwedge", "bbrk", "bbrktbrk", "bcong", "bcy", "Bcy", "bdquo", "becaus", "because", "Because", "bemptyv", "bepsi", "bernou", "Bernoullis", "beta", "Beta", "beth", "between", "bfr", "Bfr", "bigcap", "bigcirc", "bigcup", "bigodot", "bigoplus", "bigotimes", "bigsqcup", "bigstar", "bigtriangledown", "bigtriangleup", "biguplus", "bigvee", "bigwedge", "bkarow", "blacklozenge", "blacksquare", "blacktriangle", "blacktriangledown", "blacktriangleleft", "blacktriangleright", "blank", "blk12", "blk14", "blk34", "block", "bne", "bnequiv", "bnot", "bNot", "bopf", "Bopf", "bot", "bottom", "bowtie", "boxbox", "boxdl", "boxdL", "boxDl", "boxDL", "boxdr", "boxdR", "boxDr", "boxDR", "boxh", "boxH", "boxhd", "boxhD", "boxHd", "boxHD", "boxhu", "boxhU", "boxHu", "boxHU", "boxminus", "boxplus", "boxtimes", "boxul", "boxuL", "boxUl", "boxUL", "boxur", "boxuR", "boxUr", "boxUR", "boxv", "boxV", "boxvh", "boxvH", "boxVh", "boxVH", "boxvl", "boxvL", "boxVl", "boxVL", "boxvr", "boxvR", "boxVr", "boxVR", "bprime", "breve", "Breve", "brvbar", "bscr", "Bscr", "bsemi", "bsim", "bsime", "bsol", "bsolb", "bsolhsub", "bull", "bullet", "bump", "bumpe", "bumpE", "bumpeq", "Bumpeq", "cacute", "Cacute", "cap", "Cap", "capand", "capbrcup", "capcap", "capcup", "capdot", "CapitalDifferentialD", "caps", "caret", "caron", "Cayleys", "ccaps", "ccaron", "Ccaron", "ccedil", "Ccedil", "ccirc", "Ccirc", "Cconint", "ccups", "ccupssm", "cdot", "Cdot", "cedil", "Cedilla", "cemptyv", "cent", "centerdot", "CenterDot", "cfr", "Cfr", "chcy", "CHcy", "check", "checkmark", "chi", "Chi", "cir", "circ", "circeq", "circlearrowleft", "circlearrowright", "circledast", "circledcirc", "circleddash", "CircleDot", "circledR", "circledS", "CircleMinus", "CirclePlus", "CircleTimes", "cire", "cirE", "cirfnint", "cirmid", "cirscir", "ClockwiseContourIntegral", "CloseCurlyDoubleQuote", "CloseCurlyQuote", "clubs", "clubsuit", "colon", "Colon", "colone", "Colone", "coloneq", "comma", "commat", "comp", "compfn", "complement", "complexes", "cong", "congdot", "Congruent", "conint", "Conint", "ContourIntegral", "copf", "Copf", "coprod", "Coproduct", "copy", "COPY", "copysr", "CounterClockwiseContourIntegral", "crarr", "cross", "Cross", "cscr", "Cscr", "csub", "csube", "csup", "csupe", "ctdot", "cudarrl", "cudarrr", "cuepr", "cuesc", "cularr", "cularrp", "cup", "Cup", "cupbrcap", "cupcap", "CupCap", "cupcup", "cupdot", "cupor", "cups", "curarr", "curarrm", "curlyeqprec", "curlyeqsucc", "curlyvee", "curlywedge", "curren", "curvearrowleft", "curvearrowright", "cuvee", "cuwed", "cwconint", "cwint", "cylcty", "dagger", "Dagger", "daleth", "darr", "dArr", "Darr", "dash", "dashv", "Dashv", "dbkarow", "dblac", "dcaron", "Dcaron", "dcy", "Dcy", "dd", "DD", "ddagger", "ddarr", "DDotrahd", "ddotseq", "deg", "Del", "delta", "Delta", "demptyv", "dfisht", "dfr", "Dfr", "dHar", "dharl", "dharr", "DiacriticalAcute", "DiacriticalDot", "DiacriticalDoubleAcute", "DiacriticalGrave", "DiacriticalTilde", "diam", "diamond", "Diamond", "diamondsuit", "diams", "die", "DifferentialD", "digamma", "disin", "div", "divide", "divideontimes", "divonx", "djcy", "DJcy", "dlcorn", "dlcrop", "dollar", "dopf", "Dopf", "dot", "Dot", "DotDot", "doteq", "doteqdot", "DotEqual", "dotminus", "dotplus", "dotsquare", "doublebarwedge", "DoubleContourIntegral", "DoubleDot", "DoubleDownArrow", "DoubleLeftArrow", "DoubleLeftRightArrow", "DoubleLeftTee", "DoubleLongLeftArrow", "DoubleLongLeftRightArrow", "DoubleLongRightArrow", "DoubleRightArrow", "DoubleRightTee", "DoubleUpArrow", "DoubleUpDownArrow", "DoubleVerticalBar", "downarrow", "Downarrow", "DownArrow", "DownArrowBar", "DownArrowUpArrow", "DownBreve", "downdownarrows", "downharpoonleft", "downharpoonright", "DownLeftRightVector", "DownLeftTeeVector", "DownLeftVector", "DownLeftVectorBar", "DownRightTeeVector", "DownRightVector", "DownRightVectorBar", "DownTee", "DownTeeArrow", "drbkarow", "drcorn", "drcrop", "dscr", "Dscr", "dscy", "DScy", "dsol", "dstrok", "Dstrok", "dtdot", "dtri", "dtrif", "duarr", "duhar", "dwangle", "dzcy", "DZcy", "dzigrarr", "eacute", "Eacute", "easter", "ecaron", "Ecaron", "ecir", "ecirc", "Ecirc", "ecolon", "ecy", "Ecy", "eDDot", "edot", "eDot", "Edot", "ee", "efDot", "efr", "Efr", "eg", "egrave", "Egrave", "egs", "egsdot", "el", "Element", "elinters", "ell", "els", "elsdot", "emacr", "Emacr", "empty", "emptyset", "EmptySmallSquare", "emptyv", "EmptyVerySmallSquare", "emsp", "emsp13", "emsp14", "eng", "ENG", "ensp", "eogon", "Eogon", "eopf", "Eopf", "epar", "eparsl", "eplus", "epsi", "epsilon", "Epsilon", "epsiv", "eqcirc", "eqcolon", "eqsim", "eqslantgtr", "eqslantless", "Equal", "equals", "EqualTilde", "equest", "Equilibrium", "equiv", "equivDD", "eqvparsl", "erarr", "erDot", "escr", "Escr", "esdot", "esim", "Esim", "eta", "Eta", "eth", "ETH", "euml", "Euml", "euro", "excl", "exist", "Exists", "expectation", "exponentiale", "ExponentialE", "fallingdotseq", "fcy", "Fcy", "female", "ffilig", "fflig", "ffllig", "ffr", "Ffr", "filig", "FilledSmallSquare", "FilledVerySmallSquare", "fjlig", "flat", "fllig", "fltns", "fnof", "fopf", "Fopf", "forall", "ForAll", "fork", "forkv", "Fouriertrf", "fpartint", "frac12", "frac13", "frac14", "frac15", "frac16", "frac18", "frac23", "frac25", "frac34", "frac35", "frac38", "frac45", "frac56", "frac58", "frac78", "frasl", "frown", "fscr", "Fscr", "gacute", "gamma", "Gamma", "gammad", "Gammad", "gap", "gbreve", "Gbreve", "Gcedil", "gcirc", "Gcirc", "gcy", "Gcy", "gdot", "Gdot", "ge", "gE", "gel", "gEl", "geq", "geqq", "geqslant", "ges", "gescc", "gesdot", "gesdoto", "gesdotol", "gesl", "gesles", "gfr", "Gfr", "gg", "Gg", "ggg", "gimel", "gjcy", "GJcy", "gl", "gla", "glE", "glj", "gnap", "gnapprox", "gne", "gnE", "gneq", "gneqq", "gnsim", "gopf", "Gopf", "grave", "GreaterEqual", "GreaterEqualLess", "GreaterFullEqual", "GreaterGreater", "GreaterLess", "GreaterSlantEqual", "GreaterTilde", "gscr", "Gscr", "gsim", "gsime", "gsiml", "gt", "Gt", "GT", "gtcc", "gtcir", "gtdot", "gtlPar", "gtquest", "gtrapprox", "gtrarr", "gtrdot", "gtreqless", "gtreqqless", "gtrless", "gtrsim", "gvertneqq", "gvnE", "Hacek", "hairsp", "half", "hamilt", "hardcy", "HARDcy", "harr", "hArr", "harrcir", "harrw", "Hat", "hbar", "hcirc", "Hcirc", "hearts", "heartsuit", "hellip", "hercon", "hfr", "Hfr", "HilbertSpace", "hksearow", "hkswarow", "hoarr", "homtht", "hookleftarrow", "hookrightarrow", "hopf", "Hopf", "horbar", "HorizontalLine", "hscr", "Hscr", "hslash", "hstrok", "Hstrok", "HumpDownHump", "HumpEqual", "hybull", "hyphen", "iacute", "Iacute", "ic", "icirc", "Icirc", "icy", "Icy", "Idot", "iecy", "IEcy", "iexcl", "iff", "ifr", "Ifr", "igrave", "Igrave", "ii", "iiiint", "iiint", "iinfin", "iiota", "ijlig", "IJlig", "Im", "imacr", "Imacr", "image", "ImaginaryI", "imagline", "imagpart", "imath", "imof", "imped", "Implies", "in", "incare", "infin", "infintie", "inodot", "int", "Int", "intcal", "integers", "Integral", "intercal", "Intersection", "intlarhk", "intprod", "InvisibleComma", "InvisibleTimes", "iocy", "IOcy", "iogon", "Iogon", "iopf", "Iopf", "iota", "Iota", "iprod", "iquest", "iscr", "Iscr", "isin", "isindot", "isinE", "isins", "isinsv", "isinv", "it", "itilde", "Itilde", "iukcy", "Iukcy", "iuml", "Iuml", "jcirc", "Jcirc", "jcy", "Jcy", "jfr", "Jfr", "jmath", "jopf", "Jopf", "jscr", "Jscr", "jsercy", "Jsercy", "jukcy", "Jukcy", "kappa", "Kappa", "kappav", "kcedil", "Kcedil", "kcy", "Kcy", "kfr", "Kfr", "kgreen", "khcy", "KHcy", "kjcy", "KJcy", "kopf", "Kopf", "kscr", "Kscr", "lAarr", "lacute", "Lacute", "laemptyv", "lagran", "lambda", "Lambda", "lang", "Lang", "langd", "langle", "lap", "Laplacetrf", "laquo", "larr", "lArr", "Larr", "larrb", "larrbfs", "larrfs", "larrhk", "larrlp", "larrpl", "larrsim", "larrtl", "lat", "latail", "lAtail", "late", "lates", "lbarr", "lBarr", "lbbrk", "lbrace", "lbrack", "lbrke", "lbrksld", "lbrkslu", "lcaron", "Lcaron", "lcedil", "Lcedil", "lceil", "lcub", "lcy", "Lcy", "ldca", "ldquo", "ldquor", "ldrdhar", "ldrushar", "ldsh", "le", "lE", "LeftAngleBracket", "leftarrow", "Leftarrow", "LeftArrow", "LeftArrowBar", "LeftArrowRightArrow", "leftarrowtail", "LeftCeiling", "LeftDoubleBracket", "LeftDownTeeVector", "LeftDownVector", "LeftDownVectorBar", "LeftFloor", "leftharpoondown", "leftharpoonup", "leftleftarrows", "leftrightarrow", "Leftrightarrow", "LeftRightArrow", "leftrightarrows", "leftrightharpoons", "leftrightsquigarrow", "LeftRightVector", "LeftTee", "LeftTeeArrow", "LeftTeeVector", "leftthreetimes", "LeftTriangle", "LeftTriangleBar", "LeftTriangleEqual", "LeftUpDownVector", "LeftUpTeeVector", "LeftUpVector", "LeftUpVectorBar", "LeftVector", "LeftVectorBar", "leg", "lEg", "leq", "leqq", "leqslant", "les", "lescc", "lesdot", "lesdoto", "lesdotor", "lesg", "lesges", "lessapprox", "lessdot", "lesseqgtr", "lesseqqgtr", "LessEqualGreater", "LessFullEqual", "LessGreater", "lessgtr", "LessLess", "lesssim", "LessSlantEqual", "LessTilde", "lfisht", "lfloor", "lfr", "Lfr", "lg", "lgE", "lHar", "lhard", "lharu", "lharul", "lhblk", "ljcy", "LJcy", "ll", "Ll", "llarr", "llcorner", "Lleftarrow", "llhard", "lltri", "lmidot", "Lmidot", "lmoust", "lmoustache", "lnap", "lnapprox", "lne", "lnE", "lneq", "lneqq", "lnsim", "loang", "loarr", "lobrk", "longleftarrow", "Longleftarrow", "LongLeftArrow", "longleftrightarrow", "Longleftrightarrow", "LongLeftRightArrow", "longmapsto", "longrightarrow", "Longrightarrow", "LongRightArrow", "looparrowleft", "looparrowright", "lopar", "lopf", "Lopf", "loplus", "lotimes", "lowast", "lowbar", "LowerLeftArrow", "LowerRightArrow", "loz", "lozenge", "lozf", "lpar", "lparlt", "lrarr", "lrcorner", "lrhar", "lrhard", "lrm", "lrtri", "lsaquo", "lscr", "Lscr", "lsh", "Lsh", "lsim", "lsime", "lsimg", "lsqb", "lsquo", "lsquor", "lstrok", "Lstrok", "lt", "Lt", "LT", "ltcc", "ltcir", "ltdot", "lthree", "ltimes", "ltlarr", "ltquest", "ltri", "ltrie", "ltrif", "ltrPar", "lurdshar", "luruhar", "lvertneqq", "lvnE", "macr", "male", "malt", "maltese", "map", "Map", "mapsto", "mapstodown", "mapstoleft", "mapstoup", "marker", "mcomma", "mcy", "Mcy", "mdash", "mDDot", "measuredangle", "MediumSpace", "Mellintrf", "mfr", "Mfr", "mho", "micro", "mid", "midast", "midcir", "middot", "minus", "minusb", "minusd", "minusdu", "MinusPlus", "mlcp", "mldr", "mnplus", "models", "mopf", "Mopf", "mp", "mscr", "Mscr", "mstpos", "mu", "Mu", "multimap", "mumap", "nabla", "nacute", "Nacute", "nang", "nap", "napE", "napid", "napos", "napprox", "natur", "natural", "naturals", "nbsp", "nbump", "nbumpe", "ncap", "ncaron", "Ncaron", "ncedil", "Ncedil", "ncong", "ncongdot", "ncup", "ncy", "Ncy", "ndash", "ne", "nearhk", "nearr", "neArr", "nearrow", "nedot", "NegativeMediumSpace", "NegativeThickSpace", "NegativeThinSpace", "NegativeVeryThinSpace", "nequiv", "nesear", "nesim", "NestedGreaterGreater", "NestedLessLess", "NewLine", "nexist", "nexists", "nfr", "Nfr", "nge", "ngE", "ngeq", "ngeqq", "ngeqslant", "nges", "nGg", "ngsim", "ngt", "nGt", "ngtr", "nGtv", "nharr", "nhArr", "nhpar", "ni", "nis", "nisd", "niv", "njcy", "NJcy", "nlarr", "nlArr", "nldr", "nle", "nlE", "nleftarrow", "nLeftarrow", "nleftrightarrow", "nLeftrightarrow", "nleq", "nleqq", "nleqslant", "nles", "nless", "nLl", "nlsim", "nlt", "nLt", "nltri", "nltrie", "nLtv", "nmid", "NoBreak", "NonBreakingSpace", "nopf", "Nopf", "not", "Not", "NotCongruent", "NotCupCap", "NotDoubleVerticalBar", "NotElement", "NotEqual", "NotEqualTilde", "NotExists", "NotGreater", "NotGreaterEqual", "NotGreaterFullEqual", "NotGreaterGreater", "NotGreaterLess", "NotGreaterSlantEqual", "NotGreaterTilde", "NotHumpDownHump", "NotHumpEqual", "notin", "notindot", "notinE", "notinva", "notinvb", "notinvc", "NotLeftTriangle", "NotLeftTriangleBar", "NotLeftTriangleEqual", "NotLess", "NotLessEqual", "NotLessGreater", "NotLessLess", "NotLessSlantEqual", "NotLessTilde", "NotNestedGreaterGreater", "NotNestedLessLess", "notni", "notniva", "notnivb", "notnivc", "NotPrecedes", "NotPrecedesEqual", "NotPrecedesSlantEqual", "NotReverseElement", "NotRightTriangle", "NotRightTriangleBar", "NotRightTriangleEqual", "NotSquareSubset", "NotSquareSubsetEqual", "NotSquareSuperset", "NotSquareSupersetEqual", "NotSubset", "NotSubsetEqual", "NotSucceeds", "NotSucceedsEqual", "NotSucceedsSlantEqual", "NotSucceedsTilde", "NotSuperset", "NotSupersetEqual", "NotTilde", "NotTildeEqual", "NotTildeFullEqual", "NotTildeTilde", "NotVerticalBar", "npar", "nparallel", "nparsl", "npart", "npolint", "npr", "nprcue", "npre", "nprec", "npreceq", "nrarr", "nrArr", "nrarrc", "nrarrw", "nrightarrow", "nRightarrow", "nrtri", "nrtrie", "nsc", "nsccue", "nsce", "nscr", "Nscr", "nshortmid", "nshortparallel", "nsim", "nsime", "nsimeq", "nsmid", "nspar", "nsqsube", "nsqsupe", "nsub", "nsube", "nsubE", "nsubset", "nsubseteq", "nsubseteqq", "nsucc", "nsucceq", "nsup", "nsupe", "nsupE", "nsupset", "nsupseteq", "nsupseteqq", "ntgl", "ntilde", "Ntilde", "ntlg", "ntriangleleft", "ntrianglelefteq", "ntriangleright", "ntrianglerighteq", "nu", "Nu", "num", "numero", "numsp", "nvap", "nvdash", "nvDash", "nVdash", "nVDash", "nvge", "nvgt", "nvHarr", "nvinfin", "nvlArr", "nvle", "nvlt", "nvltrie", "nvrArr", "nvrtrie", "nvsim", "nwarhk", "nwarr", "nwArr", "nwarrow", "nwnear", "oacute", "Oacute", "oast", "ocir", "ocirc", "Ocirc", "ocy", "Ocy", "odash", "odblac", "Odblac", "odiv", "odot", "odsold", "oelig", "OElig", "ofcir", "ofr", "Ofr", "ogon", "ograve", "Ograve", "ogt", "ohbar", "ohm", "oint", "olarr", "olcir", "olcross", "oline", "olt", "omacr", "Omacr", "omega", "Omega", "omicron", "Omicron", "omid", "ominus", "oopf", "Oopf", "opar", "OpenCurlyDoubleQuote", "OpenCurlyQuote", "operp", "oplus", "or", "Or", "orarr", "ord", "order", "orderof", "ordf", "ordm", "origof", "oror", "orslope", "orv", "oS", "oscr", "Oscr", "oslash", "Oslash", "osol", "otilde", "Otilde", "otimes", "Otimes", "otimesas", "ouml", "Ouml", "ovbar", "OverBar", "OverBrace", "OverBracket", "OverParenthesis", "par", "para", "parallel", "parsim", "parsl", "part", "PartialD", "pcy", "Pcy", "percnt", "period", "permil", "perp", "pertenk", "pfr", "Pfr", "phi", "Phi", "phiv", "phmmat", "phone", "pi", "Pi", "pitchfork", "piv", "planck", "planckh", "plankv", "plus", "plusacir", "plusb", "pluscir", "plusdo", "plusdu", "pluse", "PlusMinus", "plusmn", "plussim", "plustwo", "pm", "Poincareplane", "pointint", "popf", "Popf", "pound", "pr", "Pr", "prap", "prcue", "pre", "prE", "prec", "precapprox", "preccurlyeq", "Precedes", "PrecedesEqual", "PrecedesSlantEqual", "PrecedesTilde", "preceq", "precnapprox", "precneqq", "precnsim", "precsim", "prime", "Prime", "primes", "prnap", "prnE", "prnsim", "prod", "Product", "profalar", "profline", "profsurf", "prop", "Proportion", "Proportional", "propto", "prsim", "prurel", "pscr", "Pscr", "psi", "Psi", "puncsp", "qfr", "Qfr", "qint", "qopf", "Qopf", "qprime", "qscr", "Qscr", "quaternions", "quatint", "quest", "questeq", "quot", "QUOT", "rAarr", "race", "racute", "Racute", "radic", "raemptyv", "rang", "Rang", "rangd", "range", "rangle", "raquo", "rarr", "rArr", "Rarr", "rarrap", "rarrb", "rarrbfs", "rarrc", "rarrfs", "rarrhk", "rarrlp", "rarrpl", "rarrsim", "rarrtl", "Rarrtl", "rarrw", "ratail", "rAtail", "ratio", "rationals", "rbarr", "rBarr", "RBarr", "rbbrk", "rbrace", "rbrack", "rbrke", "rbrksld", "rbrkslu", "rcaron", "Rcaron", "rcedil", "Rcedil", "rceil", "rcub", "rcy", "Rcy", "rdca", "rdldhar", "rdquo", "rdquor", "rdsh", "Re", "real", "realine", "realpart", "reals", "rect", "reg", "REG", "ReverseElement", "ReverseEquilibrium", "ReverseUpEquilibrium", "rfisht", "rfloor", "rfr", "Rfr", "rHar", "rhard", "rharu", "rharul", "rho", "Rho", "rhov", "RightAngleBracket", "rightarrow", "Rightarrow", "RightArrow", "RightArrowBar", "RightArrowLeftArrow", "rightarrowtail", "RightCeiling", "RightDoubleBracket", "RightDownTeeVector", "RightDownVector", "RightDownVectorBar", "RightFloor", "rightharpoondown", "rightharpoonup", "rightleftarrows", "rightleftharpoons", "rightrightarrows", "rightsquigarrow", "RightTee", "RightTeeArrow", "RightTeeVector", "rightthreetimes", "RightTriangle", "RightTriangleBar", "RightTriangleEqual", "RightUpDownVector", "RightUpTeeVector", "RightUpVector", "RightUpVectorBar", "RightVector", "RightVectorBar", "ring", "risingdotseq", "rlarr", "rlhar", "rlm", "rmoust", "rmoustache", "rnmid", "roang", "roarr", "robrk", "ropar", "ropf", "Ropf", "roplus", "rotimes", "RoundImplies", "rpar", "rpargt", "rppolint", "rrarr", "Rrightarrow", "rsaquo", "rscr", "Rscr", "rsh", "Rsh", "rsqb", "rsquo", "rsquor", "rthree", "rtimes", "rtri", "rtrie", "rtrif", "rtriltri", "RuleDelayed", "ruluhar", "rx", "sacute", "Sacute", "sbquo", "sc", "Sc", "scap", "scaron", "Scaron", "sccue", "sce", "scE", "scedil", "Scedil", "scirc", "Scirc", "scnap", "scnE", "scnsim", "scpolint", "scsim", "scy", "Scy", "sdot", "sdotb", "sdote", "searhk", "searr", "seArr", "searrow", "sect", "semi", "seswar", "setminus", "setmn", "sext", "sfr", "Sfr", "sfrown", "sharp", "shchcy", "SHCHcy", "shcy", "SHcy", "ShortDownArrow", "ShortLeftArrow", "shortmid", "shortparallel", "ShortRightArrow", "ShortUpArrow", "shy", "sigma", "Sigma", "sigmaf", "sigmav", "sim", "simdot", "sime", "simeq", "simg", "simgE", "siml", "simlE", "simne", "simplus", "simrarr", "slarr", "SmallCircle", "smallsetminus", "smashp", "smeparsl", "smid", "smile", "smt", "smte", "smtes", "softcy", "SOFTcy", "sol", "solb", "solbar", "sopf", "Sopf", "spades", "spadesuit", "spar", "sqcap", "sqcaps", "sqcup", "sqcups", "Sqrt", "sqsub", "sqsube", "sqsubset", "sqsubseteq", "sqsup", "sqsupe", "sqsupset", "sqsupseteq", "squ", "square", "Square", "SquareIntersection", "SquareSubset", "SquareSubsetEqual", "SquareSuperset", "SquareSupersetEqual", "SquareUnion", "squarf", "squf", "srarr", "sscr", "Sscr", "ssetmn", "ssmile", "sstarf", "star", "Star", "starf", "straightepsilon", "straightphi", "strns", "sub", "Sub", "subdot", "sube", "subE", "subedot", "submult", "subne", "subnE", "subplus", "subrarr", "subset", "Subset", "subseteq", "subseteqq", "SubsetEqual", "subsetneq", "subsetneqq", "subsim", "subsub", "subsup", "succ", "succapprox", "succcurlyeq", "Succeeds", "SucceedsEqual", "SucceedsSlantEqual", "SucceedsTilde", "succeq", "succnapprox", "succneqq", "succnsim", "succsim", "SuchThat", "sum", "Sum", "sung", "sup", "Sup", "sup1", "sup2", "sup3", "supdot", "supdsub", "supe", "supE", "supedot", "Superset", "SupersetEqual", "suphsol", "suphsub", "suplarr", "supmult", "supne", "supnE", "supplus", "supset", "Supset", "supseteq", "supseteqq", "supsetneq", "supsetneqq", "supsim", "supsub", "supsup", "swarhk", "swarr", "swArr", "swarrow", "swnwar", "szlig", "Tab", "target", "tau", "Tau", "tbrk", "tcaron", "Tcaron", "tcedil", "Tcedil", "tcy", "Tcy", "tdot", "telrec", "tfr", "Tfr", "there4", "therefore", "Therefore", "theta", "Theta", "thetasym", "thetav", "thickapprox", "thicksim", "ThickSpace", "thinsp", "ThinSpace", "thkap", "thksim", "thorn", "THORN", "tilde", "Tilde", "TildeEqual", "TildeFullEqual", "TildeTilde", "times", "timesb", "timesbar", "timesd", "tint", "toea", "top", "topbot", "topcir", "topf", "Topf", "topfork", "tosa", "tprime", "trade", "TRADE", "triangle", "triangledown", "triangleleft", "trianglelefteq", "triangleq", "triangleright", "trianglerighteq", "tridot", "trie", "triminus", "TripleDot", "triplus", "trisb", "tritime", "trpezium", "tscr", "Tscr", "tscy", "TScy", "tshcy", "TSHcy", "tstrok", "Tstrok", "twixt", "twoheadleftarrow", "twoheadrightarrow", "uacute", "Uacute", "uarr", "uArr", "Uarr", "Uarrocir", "ubrcy", "Ubrcy", "ubreve", "Ubreve", "ucirc", "Ucirc", "ucy", "Ucy", "udarr", "udblac", "Udblac", "udhar", "ufisht", "ufr", "Ufr", "ugrave", "Ugrave", "uHar", "uharl", "uharr", "uhblk", "ulcorn", "ulcorner", "ulcrop", "ultri", "umacr", "Umacr", "uml", "UnderBar", "UnderBrace", "UnderBracket", "UnderParenthesis", "Union", "UnionPlus", "uogon", "Uogon", "uopf", "Uopf", "uparrow", "Uparrow", "UpArrow", "UpArrowBar", "UpArrowDownArrow", "updownarrow", "Updownarrow", "UpDownArrow", "UpEquilibrium", "upharpoonleft", "upharpoonright", "uplus", "UpperLeftArrow", "UpperRightArrow", "upsi", "Upsi", "upsih", "upsilon", "Upsilon", "UpTee", "UpTeeArrow", "upuparrows", "urcorn", "urcorner", "urcrop", "uring", "Uring", "urtri", "uscr", "Uscr", "utdot", "utilde", "Utilde", "utri", "utrif", "uuarr", "uuml", "Uuml", "uwangle", "vangrt", "varepsilon", "varkappa", "varnothing", "varphi", "varpi", "varpropto", "varr", "vArr", "varrho", "varsigma", "varsubsetneq", "varsubsetneqq", "varsupsetneq", "varsupsetneqq", "vartheta", "vartriangleleft", "vartriangleright", "vBar", "Vbar", "vBarv", "vcy", "Vcy", "vdash", "vDash", "Vdash", "VDash", "Vdashl", "vee", "Vee", "veebar", "veeeq", "vellip", "verbar", "Verbar", "vert", "Vert", "VerticalBar", "VerticalLine", "VerticalSeparator", "VerticalTilde", "VeryThinSpace", "vfr", "Vfr", "vltri", "vnsub", "vnsup", "vopf", "Vopf", "vprop", "vrtri", "vscr", "Vscr", "vsubne", "vsubnE", "vsupne", "vsupnE", "Vvdash", "vzigzag", "wcirc", "Wcirc", "wedbar", "wedge", "Wedge", "wedgeq", "weierp", "wfr", "Wfr", "wopf", "Wopf", "wp", "wr", "wreath", "wscr", "Wscr", "xcap", "xcirc", "xcup", "xdtri", "xfr", "Xfr", "xharr", "xhArr", "xi", "Xi", "xlarr", "xlArr", "xmap", "xnis", "xodot", "xopf", "Xopf", "xoplus", "xotime", "xrarr", "xrArr", "xscr", "Xscr", "xsqcup", "xuplus", "xutri", "xvee", "xwedge", "yacute", "Yacute", "yacy", "YAcy", "ycirc", "Ycirc", "ycy", "Ycy", "yen", "yfr", "Yfr", "yicy", "YIcy", "yopf", "Yopf", "yscr", "Yscr", "yucy", "YUcy", "yuml", "Yuml", "zacute", "Zacute", "zcaron", "Zcaron", "zcy", "Zcy", "zdot", "Zdot", "zeetrf", "ZeroWidthSpace", "zeta", "Zeta", "zfr", "Zfr", "zhcy", "ZHcy", "zigrarr", "zopf", "Zopf", "zscr", "Zscr", "zwj", "zwnj", "decodeMapLegacy", "decodeMapNumeric", "invalidReferenceCodePoints", "stringFromCharCode", "String", "fromCharCode", "hasOwnProperty", "has", "object", "propertyName", "call", "merge", "options", "defaults", "key", "result", "codePointToSymbol", "codePoint", "strict", "output", "parseError", "array", "value", "index", "length", "hexEscape", "toString", "toUpperCase", "decEscape", "message", "Error", "encode", "string", "test", "encodeEverything", "useNamedReferences", "allowUnsafeSymbols", "escapeCodePoint", "decimal", "escapeBmpSymbol", "symbol", "charCodeAt", "replace", "$0", "high", "low", "decode", "html", "$1", "$2", "$3", "$4", "$5", "$6", "$7", "$8", "semicolon", "decDigits", "hexDigits", "reference", "next", "isAttributeValue", "parseInt", "he", "version", "escape", "unescape", "nodeType", "this", "makeLengthClass", "export$", "e", "t", "r", "constructor", "_value", "_unit", "unit", "unitsSp", "get", "n", "g", "generator", "prototype", "zero", "round", "error", "cmp", "l", "add", "Length", "mul", "s", "abs", "Math", "norm", "sqrt", "min", "Array", "from", "arguments", "reduce", "a", "b", "max", "Vector", "_x", "x", "_y", "y", "v", "shift_start", "i", "o", "u", "msq", "imsq", "dir_x", "dir_y", "sx", "sy", "shift_end", "ex", "ey", "ligatures", "diacritics", "symbols", "latexParser_pegjs", "peg$SyntaxError", "expected", "found", "location", "name", "captureStackTrace", "child", "parent", "ctor", "buildMessage", "DESCRIBE_EXPECTATION_FNS", "literal", "literalEscape", "text", "class", "escapedParts", "parts", "classEscape", "inverted", "any", "end", "other", "description", "hex", "ch", "j", "descriptions", "type", "sort", "slice", "join", "SyntaxError", "parse", "input", "peg$result", "peg$FAILED", "peg$startRuleFunctions", "latex", "peg$parselatex", "peg$startRuleFunction", "peg$c0", "peg$c1", "peg$c2", "peg$c3", "peg$c4", "macro", "documentClass", "peg$c5", "peg$c6", "peg$literalExpectation", "peg$c7", "startBalanced", "enterGroup", "peg$c8", "pars", "exitGroup", "isBalanced", "endBalanced", "createDocument", "logUndefinedRefs", "peg$c9", "bb", "txt", "be", "break", "p", "create", "peg$c10", "linebreak", "peg$c11", "peg$c12", "createText", "sp", "peg$c13", "peg$otherExpectation", "peg$c14", "peg$c15", "m", "peg$c16", "peg$c17", "peg$c18", "peg$c19", "peg$c20", "peg$c21", "peg$c22", "peg$c23", "peg$c24", "peg$c25", "id", "isPreamble", "peg$c26", "isVmode", "peg$c27", "isHmode", "peg$c28", "isHVmode", "peg$c29", "peg$c30", "hasMacro", "beginArgs", "peg$c31", "args", "parsedArgs", "endArgs", "createFragment", "peg$c32", "peg$c33", "peg$c34", "peg$c35", "peg$c36", "peg$classExpectation", "peg$c37", "peg$c38", "peg$c39", "peg$c40", "peg$c41", "peg$c42", "k", "peg$c43", "trim", "peg$c44", "peg$c45", "nextArg", "peg$c46", "preExecMacro", "peg$c47", "peg$c48", "argError", "peg$c49", "addParsedArg", "peg$c50", "peg$c51", "peg$c52", "peg$c53", "h", "peg$c54", "peg$c55", "peg$c56", "peg$c57", "peg$c58", "peg$c59", "peg$c60", "peg$c61", "peg$c62", "peg$c63", "peg$c64", "peg$c65", "peg$c66", "peg$c67", "peg$c68", "peg$c69", "peg$c70", "peg$c71", "peg$c72", "peg$c73", "peg$c74", "peg$c75", "peg$c76", "peg$c77", "peg$c78", "peg$c79", "peg$c80", "peg$c81", "peg$c82", "peg$c83", "peg$c84", "peg$c85", "peg$c86", "peg$c87", "c", "peg$c88", "peg$c89", "peg$c90", "peg$c91", "peg$c92", "peg$c93", "peg$c94", "peg$c95", "peg$c96", "peg$c97", "peg$c98", "peg$c99", "peg$c100", "peg$c101", "peg$c102", "peg$c103", "peg$c104", "peg$c105", "peg$c106", "selectArgsBranch", "peg$c107", "peg$c108", "peg$c109", "peg$c110", "peg$c111", "peg$c112", "peg$c113", "peg$c114", "peg$c115", "peg$c116", "peg$c117", "kv", "peg$c118", "kv_list", "filter", "peg$c119", "peg$c120", "v_list", "peg$c121", "peg$c122", "peg$c123", "peg$c124", "peg$c125", "peg$c126", "peg$c127", "peg$c128", "peg$c129", "peg$c130", "peg$c131", "peg$c132", "peg$c133", "peg$c134", "peg$c135", "peg$c136", "peg$c137", "peg$c138", "peg$c139", "peg$c140", "peg$c141", "peg$c142", "peg$c143", "peg$c144", "peg$c145", "peg$c146", "peg$c148", "f", "peg$c149", "peg$c150", "peg$c151", "peg$c152", "peg$c153", "peg$c154", "peg$c155", "peg$c156", "peg$c157", "peg$c158", "peg$c159", "peg$c160", "peg$c161", "peg$c162", "peg$c163", "peg$c164", "url", "peg$c165", "peg$c166", "unshift", "peg$c167", "peg$c168", "peg$c169", "peg$c170", "peg$c171", "peg$c172", "peg$c173", "peg$c174", "peg$c175", "peg$c176", "expr", "peg$c177", "counter", "peg$c178", "peg$c179", "peg$c180", "peg$c181", "peg$c182", "peg$c183", "peg$c184", "peg$c185", "head", "tail", "trunc", "peg$c186", "peg$c187", "ml", "peg$c188", "cssp", "peg$c189", "csl", "peg$c190", "peg$c191", "peg$c192", "peg$c193", "peg$c194", "peg$c195", "peg$c196", "peg$c197", "peg$c198", "peg$c199", "peg$c200", "peg$c201", "peg$c202", "peg$c203", "peg$c204", "peg$c205", "peg$c206", "peg$c207", "peg$c208", "peg$c209", "peg$c210", "peg$c211", "peg$c212", "peg$c213", "peg$c214", "peg$c215", "peg$c216", "peg$c217", "peg$c218", "peg$c219", "peg$c220", "peg$c221", "peg$c222", "peg$c223", "peg$c224", "peg$c225", "peg$c226", "peg$c227", "peg$c228", "peg$c229", "peg$c230", "peg$c231", "peg$c232", "peg$c233", "peg$c234", "peg$c235", "peg$c236", "peg$c239", "core", "cm", "cml", "list", "forEach", "push", "peg$c240", "fl", "peg$c241", "cs", "peg$c242", "sl", "speclist", "peg$c243", "_c", "_s", "isArray", "concat", "peg$c244", "peg$c245", "peg$c246", "peg$c247", "peg$c248", "peg$c249", "peg$c250", "peg$c251", "peg$c252", "peg$c253", "peg$c254", "reps", "peg$c255", "peg$c256", "peg$c257", "peg$c258", "peg$c259", "peg$c260", "content", "peg$c261", "peg$c262", "peg$c263", "createVSpaceInline", "peg$c264", "createVSpace", "peg$c265", "peg$c266", "peg$c267", "peg$c268", "peg$c269", "peg$c270", "peg$c271", "peg$c272", "peg$c273", "createVSpaceSkipInline", "peg$c274", "createVSpaceSkip", "peg$c275", "peg$c276", "peg$c277", "peg$c278", "visp", "verb", "createVerbatim", "peg$c279", "peg$c280", "begin", "peg$c281", "peg$c282", "peg$c283", "peg$c284", "peg$c285", "node", "peg$c286", "sb", "end_id", "peg$c287", "se", "pf", "appendChild", "peg$c288", "peg$c289", "peg$c290", "peg$c291", "peg$c292", "peg$c293", "og", "peg$c294", "label", "peg$c295", "peg$c296", "itemCounter", "roman", "itemId", "nextId", "stepCounter", "refCounter", "peg$c297", "peg$c298", "peg$c299", "peg$c300", "peg$c301", "peg$c302", "peg$c303", "peg$c304", "peg$c305", "parseMath", "peg$c306", "peg$c307", "peg$c308", "peg$c309", "peg$c310", "peg$c311", "peg$c312", "peg$c313", "peg$c314", "peg$c315", "peg$c316", "peg$c317", "peg$c318", "peg$c319", "peg$c320", "peg$c321", "peg$c322", "peg$c323", "peg$c324", "peg$c325", "peg$c326", "peg$c327", "peg$c328", "peg$c329", "peg$c330", "peg$c331", "peg$c332", "peg$c333", "peg$c334", "peg$c335", "peg$c336", "peg$c337", "peg$c338", "peg$c339", "peg$c340", "peg$c341", "peg$c342", "peg$c343", "peg$c344", "peg$c345", "peg$c346", "peg$c347", "peg$c348", "peg$c349", "peg$c350", "peg$c351", "peg$c352", "peg$c353", "peg$c354", "peg$c355", "peg$c356", "peg$c357", "peg$c358", "peg$c359", "brsp", "peg$c360", "peg$c361", "peg$c362", "peg$c363", "peg$c364", "peg$c365", "peg$c366", "peg$c367", "peg$c368", "peg$c369", "createBreakSpace", "peg$c370", "peg$c371", "peg$c372", "peg$c373", "peg$c374", "peg$c375", "peg$c376", "peg$c377", "character", "peg$c378", "peg$c379", "peg$c380", "peg$c381", "peg$c382", "peg$c383", "peg$c384", "peg$c385", "peg$c386", "peg$c387", "peg$c388", "peg$c389", "q", "textquote", "peg$c390", "peg$c391", "peg$c392", "peg$c393", "peg$c394", "peg$c395", "peg$c396", "peg$c397", "peg$c398", "peg$c399", "peg$c400", "peg$c401", "peg$c402", "peg$c403", "peg$c404", "peg$c405", "peg$c406", "peg$c407", "peg$c408", "peg$c409", "peg$c410", "peg$c411", "peg$c412", "peg$c413", "peg$c414", "peg$c415", "peg$c416", "peg$c417", "peg$c418", "peg$c419", "peg$c420", "peg$c421", "peg$c422", "peg$c423", "peg$c424", "ligature", "peg$c425", "peg$c426", "peg$c427", "peg$c428", "controlSymbol", "peg$c429", "peg$c430", "hasSymbol", "peg$c431", "peg$c432", "peg$c433", "d", "hasDiacritic", "peg$c434", "diacritic", "peg$c435", "peg$c436", "peg$c437", "peg$c438", "peg$c439", "peg$c440", "peg$c441", "peg$c442", "peg$c443", "peg$c444", "peg$c445", "peg$c446", "peg$c447", "peg$c448", "peg$c449", "peg$c450", "peg$c451", "peg$c452", "peg$c453", "peg$c454", "peg$c455", "peg$c456", "peg$c457", "peg$c458", "peg$c459", "peg$c460", "peg$c461", "peg$c462", "peg$c463", "peg$c464", "peg$c465", "parseFloat", "peg$c466", "peg$c467", "peg$c468", "hasCounter", "peg$c469", "peg$c470", "theLength", "peg$c471", "peg$c472", "peg$c473", "peg$c474", "console", "log", "peg$c475", "peg$c476", "peg$c477", "peg$c478", "textContent", "peg$currPos", "peg$savedPos", "peg$posDetailsCache", "line", "column", "peg$maxFailPos", "peg$maxFailExpected", "peg$silentFails", "startRule", "peg$computeLocation", "ignoreCase", "peg$computePosDetails", "pos", "details", "startPos", "endPos", "startPosDetails", "endPosDetails", "start", "offset", "peg$fail", "s0", "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "peg$parsewith_preamble", "peg$parseskip_all_space", "peg$parseescape", "peg$parseis_hvmode", "peg$parseis_preamble", "peg$parsemacro", "peg$parsebegin", "peg$parseskip_space", "peg$parsebegin_group", "substr", "peg$parseend_group", "peg$parsebegin_doc", "peg$parsedocument", "peg$parseend_doc", "charAt", "peg$parseEOF", "peg$parseend", "peg$parseparagraph", "peg$parsevmode_macro", "peg$parsenoindent", "peg$parsebreak", "peg$parsetext", "peg$parseparagraph_with_linebreak", "peg$parseline", "peg$parselinebreak", "peg$parseligature", "peg$parseprimitive", "peg$parsecomment", "peg$parseunskip_macro", "peg$parsehv_macro", "peg$parseidentifier", "peg$parseis_hmode", "peg$parseis_hmode_env", "peg$parsebegin_env", "peg$parsemacro_args", "peg$parsespace", "peg$parseend_env", "peg$parseh_environment", "substring", "peg$parsechar", "peg$parsesmbskip_hmode", "peg$parselength_group", "peg$parsevspace_hmode", "peg$parsevalue", "peg$parsethe", "s9", "s10", "s11", "peg$parsenl", "peg$parseverb", "peg$parseonly_preamble", "peg$parseis_vmode", "peg$parseunknown_macro", "peg$parsehmode_macro", "peg$parsemath_shift", "peg$parsemath_primitive", "peg$parseinline_math", "peg$parseleft_br", "peg$parseright_br", "peg$parsedisplay_math", "peg$parsemath", "peg$parsehyphen", "peg$parsedigit", "peg$parsepunctuation", "peg$parsequotes", "peg$parsenbsp", "peg$parsesp", "peg$parsectrl_space", "peg$parsediacritic", "peg$parsectrl_sym", "peg$parsesymbol", "peg$parseinteger", "peg$parsehex16", "peg$parsehex8", "peg$parsecharsym", "peg$parseutf8_char", "peg$parsearg_group", "peg$parselogging", "peg$parseis_vmode_env", "peg$parseenvironment", "peg$parsevspace_vmode", "peg$parsesmbskip_vmode", "peg$parsekey", "peg$parsekey_val", "peg$parsenextArgStar", "peg$parsearg_hgroup", "peg$parsehorizontal", "peg$parseopt_group", "peg$parseid_group", "peg$parseide_group", "peg$parseid_optgroup", "peg$parsekey_group", "peg$parsekey_optgroup", "peg$parsekeyval_optgroup", "peg$parsecsv_group", "peg$parseexpr_group", "peg$parseexpr_optgroup", "peg$parselength_optgroup", "peg$parsemacro_group", "peg$parseurl_group", "peg$parsecolor_group", "peg$parsecolor_modellist_group", "peg$parsecolor_modellist_optgroup", "peg$parsecolor_setspec_group", "peg$parsecolor_speclist_group", "peg$parsecoord_group", "peg$parsecoord_optgroup", "peg$parsevector", "peg$parsecolumns", "peg$parseitems", "peg$parseenumitems", "peg$parsebegin_optgroup", "peg$parseend_optgroup", "peg$parselength_unit", "peg$parselength", "peg$parsefloat", "peg$parseplus", "peg$parseminus", "peg$parsenum_expr", "peg$parsecoordinate", "peg$parseurl_char", "peg$parsehex", "peg$parseurl_pct_encoded", "peg$parsenum_value", "peg$parsereal", "peg$parsenum_factor", "peg$parsenum_term", "s12", "peg$parsecore_model", "peg$parseint", "peg$parsec_expr", "peg$parsec_ext_expr", "peg$parsec_name", "peg$parsefunc_expr", "peg$parsecolor", "peg$parsemodel_list", "peg$parsecolor_spec_list", "peg$parsecolor_set_spec", "peg$parsec_prefix", "peg$parsec_mix_expr", "peg$parsec_postfix", "peg$parsefn", "peg$parsecolor_model", "peg$parseint_model", "peg$parsedec_model", "peg$parsepseudo_model", "peg$parsecolor_spec", "peg$parsecolumn_separator", "peg$parsecolumn", "peg$parseitem", "peg$parseend_comment", "peg$parsealignment_tab", "peg$parsesuperscript", "peg$parsesubscript", "peg$parsepar", "peg$parseendinput", "peg$parsecomment_env", "peg$parsemacro_parameter", "peg$parseignore", "peg$parseoct", "require$$0", "setErrorFn", "Base", "newCounter", "setLength", "this$", "tmp", "NaN", "endsWith", "pt345", "inch", "textwidth", "oddsidemargin", "margins", "marginparwidth", "x$", "startsection", "toc", "ttl", "Roman", "arabic", "setTitle", "title", "author", "date", "that", "maketitle", "setCounter", "_title", "_author", "_date", "_thanks", "Article", "superclass", "css", "section", "_toc", "setFontSize", "setFontWeight", "quotation", "endquotation", "Alph", "Report", "addToReset", "chapter", "Book", "y$", "Color", "builtinDocumentclasses", "article", "book", "report", "XColor", "opt", "Object", "keys", "colors", "hd", "tl", "spec", "colorspec", "color", "set", "Echo", "gobbleO", "echoO", "echoOGO", "o1", "o2", "echoGOG", "g1", "g2", "Gensymb", "Graphicx", "createImage", "kvl", "file", "builtinPackages", "xcolor", "echo", "gensymb", "graphics", "graphicx", "hyperref", "Hyperref", "link", "latexsym", "Latexsym", "multicol", "Multicol", "multicols", "cols", "stix", "Stix", "KaTeX", "__defineSymbol", "textcomp", "Textcomp", "textgreek", "Textgreek", "_freeGlobal", "freeSelf", "self", "_root", "Function", "_Symbol", "Symbol", "objectProto", "nativeObjectToString", "symToStringTag", "toStringTag", "_getRawTag", "isOwn", "tag", "unmasked", "getRawTag", "require$$1", "objectToString", "_baseGetTag", "isObject_1", "baseGetTag", "isObject", "uid", "isFunction_1", "coreJsData", "maskSrcKey", "exec", "IE_PROTO", "_isMasked", "func", "funcToString", "isFunction", "isMasked", "require$$2", "toSource", "reIsHostCtor", "funcProto", "reIsNative", "RegExp", "baseIsNative", "getValue", "getNative", "_defineProperty", "defineProperty", "_baseAssignValue", "configurable", "enumerable", "writable", "eq_1", "baseAssignValue", "eq", "_assignValue", "objValue", "assignValue", "_copyObject", "source", "props", "customizer", "isNew", "newValue", "identity_1", "apply", "thisArg", "nativeMax", "_overRest", "transform", "otherArgs", "constant", "_baseSetToString", "nativeNow", "Date", "now", "setToString", "count", "lastCalled", "stamp", "remaining", "identity", "overRest", "isLength_1", "isLength", "isArrayLike_1", "reIsUint", "_isIndex", "isArrayLike", "isIndex", "require$$3", "baseRest", "isIterateeCall", "_createAssigner", "assigner", "sources", "guard", "_isPrototype", "Ctor", "_baseTimes", "iteratee", "isObjectLike_1", "isObjectLike", "baseIsArguments", "propertyIsEnumerable", "isArguments_1", "isArray_1", "stubFalse_1", "stubFalse", "Buffer", "isBuffer", "typedArrayTags", "_baseIsTypedArray", "_baseUnary", "freeProcess", "process", "nodeUtil", "types", "require", "binding", "baseIsTypedArray", "baseUnary", "nodeIsTypedArray", "isTypedArray", "baseTimes", "isArguments", "require$$4", "_arrayLikeKeys", "inherited", "isArr", "isArg", "isBuff", "isType", "skipIndexes", "_overArg", "arg", "nativeKeys", "isPrototype", "arrayLikeKeys", "baseKeys", "copyObject", "createAssigner", "nativeKeysIn", "baseKeysIn", "isProto", "keysIn", "w", "S", "LaTeX", "CustomMacros", "assignIn", "assign", "ref$", "newLength", "providedPackages", "tex", "inline", "setAttribute", "toLocaleDateString", "weekday", "year", "month", "day", "marginpar", "setFontFamily", "addAttributes", "setFontShape", "z$", "z1$", "z2$", "z3$", "z4$", "z5$", "alph", "theenumii", "theenumi", "theenumiii", "normalfont", "bfseries", "z6$", "setAlignment", "z7$", "startlist", "endlist", "titlepage", "z9$", "quote", "verse", "unorderedList", "items", "makelabel", "itemlabel", "item", "listitem", "orderedList", "descriptionList", "dt", "term", "createPicture", "size", "createHSpace", "setLabel", "ref", "z10$", "makebox", "vec", "width", "_box", "framebox", "hasAttribute", "addAttribute", "classes", "box", "innerPos", "style", "height", "z11$", "wrapper", "obj", "strut", "rlap", "res", "dv", "cloneNode", "v1", "pxpct", "v2", "N", "_path", "v3", "linethickness", "svg", "path", "draw", "SVG", "addTo", "stroke", "fill", "pw", "px", "lenSection", "dasharray", "bbox", "viewbox", "flip", "circle", "cx", "cy", "_line", "_vector", "vs", "ve", "_slopeLengthToCoords", "hl", "hw", "hhl", "maxrad", "rad", "oval", "radius", "move", "includes", "_intersect", "clip", "clipWith", "r1", "r2", "z12$", "Class", "documentclass", "Export", "getOwnPropertyNames", "opts", "pkg", "Package", "fn$", "z14$", "z15$", "Macros", "Generator", "documentTitle", "_options", "_macros", "_stack", "_groups", "_continue", "_labels", "_refs", "_counters", "_resets", "_marginpars", "reset", "_uid", "_curArgs", "attrs", "align", "currentlabel", "document", "createTextNode", "lengths", "factor", "pow", "precision", "marco", "parsed", "optArgs", "branches", "nextChar", "in$", "shift", "pop", "env_id", "copyAttrs", "alignment", "fontFamily", "family", "fontWeight", "weight", "shape", "fontShape", "fontSize", "setTextDecoration", "textDecoration", "decoration", "_inlineAttributes", "cur", "_activeAttributeValue", "level", "attr", "sec", "chaphead", "hasLength", "clearCounter", "arrayFrom$", "_roman", "fnsymbol", "warn", "firstChild", "removeChild", "done", "marginPar", "marginRef", "methods", "names", "registerMethods", "_name", "addMethodNames", "getMethodsFor", "_names", "il", "radians", "PI", "camelCase", "toLowerCase", "capitalize", "proportionalSize", "element", "getOrigin", "origin", "ox", "originX", "oy", "originY", "condX", "condY", "xmlns", "xlink", "globals", "elements", "ns", "createElementNS", "makeInstance", "isHTML", "adopter", "querySelector", "createElement", "innerHTML", "nodeOrNew", "ownerDocument", "defaultView", "Node", "adopt", "instance", "nodeName", "Fragment", "className", "register", "asRoot", "did", "eid", "assignNewId", "children", "extend", "modules", "wrapWithAttrCheck", "fn", "siblings", "position", "prev", "forward", "remove", "backward", "front", "back", "before", "after", "insertBefore", "insertAfter", "numberAndUnit", "rgb", "transforms", "whitespace", "isHex", "isRgb", "isBlank", "isNumber", "isImage", "delimiter", "isPathLetter", "componentHex", "component", "integer", "is", "space", "hueToRgb", "split", "hasClass", "indexOf", "addClass", "removeClass", "toggleClass", "val", "ret", "cssText", "cased", "show", "hide", "visible", "data", "attributes", "JSON", "stringify", "remember", "memory", "forget", "_memory", "inputs", "init", "static", "mode", "random", "sin", "grey", "cmyk", "_a", "_b", "hsl", "isGrey", "_d", "values", "params", "z", "noWhitespace", "hexParse", "components", "lab", "xyz", "lch", "atan2", "dToR", "cos", "yL", "xL", "zL", "ct", "mx", "nm", "rU", "gU", "bU", "bd", "toArray", "toHex", "_clamped", "toRgb", "rV", "gV", "bV", "r255", "g255", "b255", "rL", "gL", "bL", "xU", "yU", "zU", "Point", "clone", "base", "transformO", "Matrix", "isMatrixLike", "closeEnough", "threshold", "flipBoth", "flipX", "flipY", "skewX", "skew", "isFinite", "skewY", "scaleX", "scale", "scaleY", "shear", "rotate", "around", "positionX", "py", "positionY", "translate", "tx", "translateX", "ty", "translateY", "relative", "relativeX", "ry", "relativeY", "matrix", "aroundO", "dx", "dy", "translateO", "lmultiplyO", "decompose", "determinant", "ccw", "thetaRad", "st", "lam", "axis", "flipO", "scaleO", "fromArray", "matrixify", "inverse", "inverseO", "det", "na", "nb", "nc", "nd", "nf", "lmultiply", "matrixMultiply", "multiply", "multiplyO", "rotateO", "shearO", "lx", "skewO", "tan", "ly", "formatTransforms", "transformer", "valueOf", "parser", "nodes", "parentNode", "body", "documentElement", "isNulledBox", "Box", "addOffset", "pageXOffset", "pageYOffset", "left", "x2", "y2", "isNulled", "xMin", "Infinity", "xMax", "yMin", "yMax", "getBox", "getBBoxFn", "retry", "contains", "zoom", "point", "clientWidth", "clientHeight", "zoomX", "zoomY", "zoomAmount", "Number", "MAX_SAFE_INTEGER", "List", "arr", "super", "each", "fnOrMethodName", "reserved", "baseFind", "query", "querySelectorAll", "listenerId", "windowEvents", "getEvents", "getEventHolder", "events", "getEventTarget", "on", "listener", "bind", "bag", "_svgjsListenerId", "event", "ev", "addEventListener", "off", "namespace", "removeEventListener", "EventTarget", "dispatch", "Event", "CustomEvent", "detail", "cancelable", "dispatchEvent", "defaultPrevented", "fire", "noop", "timeline", "opacity", "SVGArray", "toSet", "Set", "SVGNumber", "convert", "number", "isNaN", "match", "toJSON", "hooks", "Dom", "removeNamespace", "SVGElement", "childNodes", "put", "clear", "hasChildNodes", "lastChild", "deep", "writeDataToDom", "first", "htmlOrFn", "outerHTML", "xml", "last", "matches", "selector", "matcher", "matchesSelector", "msMatchesSelector", "mozMatchesSelector", "webkitMatchesSelector", "oMatchesSelector", "putIn", "removeElement", "replaceChild", "svgOrFn", "outerSVG", "words", "wrap", "xmlOrFn", "outerXML", "current", "_this", "well", "fragment", "createDocumentFragment", "len", "firstElementChild", "nodeValue", "curr", "removeAttribute", "getAttribute", "_val", "hook", "isColor", "leading", "setAttributeNS", "rebuild", "find", "findOne", "dom", "setData", "center", "defs", "dmove", "parents", "until", "isSelector", "getBBox", "rbox", "getBoundingClientRect", "screenCTM", "inside", "ctm", "getCTM", "isRoot", "getScreenCTM", "sugar", "prefix", "extension", "mat", "direction", "_element", "getTotalLength", "pointAt", "getPointAtLength", "font", "untransform", "str", "reverse", "toParent", "pCtm", "toRoot", "decomposed", "Container", "flatten", "ungroup", "Defs", "Shape", "Ellipse", "circled", "ellipse", "fx", "fy", "x1", "y1", "to", "Gradient", "targets", "update", "gradiented", "gradient", "Pattern", "pattern", "patternUnits", "Image", "load", "callback", "img", "src", "PointArray", "maxX", "maxY", "minX", "minY", "points", "toLine", "MorphArray", "Line", "plot", "pointed", "Marker", "orient", "makeSetterGetter", "easing", "bezier", "steps", "stepPosition", "jumps", "beforeFlag", "step", "floor", "jumping", "Stepper", "Ease", "ease", "Controller", "stepper", "recalculate", "duration", "_duration", "overshoot", "_overshoot", "os", "wn", "velocity", "acceleration", "newPosition", "windup", "integral", "_windup", "P", "I", "D", "segmentParameters", "M", "L", "H", "V", "C", "Q", "T", "A", "Z", "pathHandlers", "p0", "mlhvqtcsaz", "jl", "segmentComplete", "segment", "startNewSegment", "token", "inNumber", "finalizeNumber", "pathLetter", "lastCommand", "small", "isSmall", "inSegment", "pointSeen", "hasExponent", "finalizeSegment", "absolute", "command", "segments", "isArcFlag", "isArc", "isExponential", "lastToken", "PathArray", "toAbsolute", "getClassForType", "NonMorphable", "morphableTypes", "ObjectBag", "Morphable", "_stepper", "_from", "_to", "_type", "_context", "_morphObj", "at", "morph", "_set", "toConsumable", "TransformBag", "sortByKey", "splice", "defaultObject", "toDelete", "objOrArr", "entries", "Type", "Path", "_array", "Polygon", "polygon", "poly", "Polyline", "polyline", "Rect", "Queue", "_first", "_last", "Animator", "nextDraw", "frames", "timeouts", "immediates", "timer", "performance", "frame", "run", "requestAnimationFrame", "_draw", "timeout", "delay", "time", "immediate", "cancelFrame", "clearTimeout", "cancelImmediate", "nextTimeout", "lastTimeout", "nextFrame", "lastFrame", "nextImmediate", "makeSchedule", "runnerInfo", "runner", "defaultSource", "Timeline", "timeSource", "_timeSource", "_startTime", "_speed", "_persist", "_nextFrame", "_paused", "_runners", "_runnerIds", "_lastRunnerId", "_time", "_lastSourceTime", "_lastStepTime", "_step", "_stepFn", "_stepImmediate", "active", "finish", "getEndTimeOfTimeline", "pause", "getEndTime", "lastRunnerInfo", "getLastRunnerInfo", "lastDuration", "endTimes", "getRunnerInfoById", "persist", "dtOrForever", "play", "updateTime", "yes", "currentSpeed", "speed", "positive", "schedule", "when", "absoluteStartTime", "endTime", "unschedule", "info", "seek", "stop", "immediateStep", "dtSource", "dtTime", "runnersLeft", "dtToStart", "_timeline", "Runner", "_queue", "_isDeclarative", "_history", "enabled", "_lastTime", "_reseted", "transformId", "_haveReversed", "_reverse", "_loopsDone", "_swing", "_wait", "_times", "_frameId", "swing", "wait", "addTransform", "animate", "sanitise", "loop", "clearTransform", "clearTransformsFromQueue", "isTransform", "during", "queue", "_prepareRunner", "loops", "loopDuration", "loopsDone", "partial", "swinging", "backwards", "uncliped", "swingForward", "progress", "initFn", "runFn", "retargetFn", "initialiser", "retarget", "initialised", "finished", "running", "_lastPosition", "justStarted", "justFinished", "declarative", "converged", "_initialise", "_run", "needsIt", "_rememberMorpher", "method", "morpher", "caller", "positionOrDt", "allfinished", "_tryRetarget", "extra", "FakeRunner", "mergeWith", "getRunnerTransform", "mergeTransforms", "netTransform", "_transformationRunners", "runners", "RunnerArray", "ids", "clearBefore", "deleteCnt", "edit", "newRunner", "getByID", "lastRunner", "by", "_clearTransformRunnersBefore", "currentRunner", "_currentTransform", "_addRunner", "styleAttr", "nameOrAttrs", "newToAttrs", "newKeys", "differences", "addedFromAttrs", "oldFromAttrs", "oldToAttrs", "newLevel", "newPoint", "affine", "isMatrix", "currentAngle", "startTransform", "rTarget", "rCurrent", "possibilities", "distances", "shortest", "affineParameters", "newTransforms", "_queueNumber", "_queueNumberDelta", "newTo", "_queueObject", "Svg", "nested", "ax", "ay", "build", "_build", "getComputedTextLength", "Text", "_rebuild", "blankLineOffset", "getComputedStyle", "getPropertyValue", "newLined", "firstLine", "newLine", "textable", "plain", "Tspan", "tspan", "Circle", "ClipPath", "unclip", "clipper", "ForeignObject", "foreignObject", "G", "containerGeometry", "group", "unlink", "linker", "linkTo", "Mask", "unmask", "mask", "masker", "maskWith", "Stop", "addText", "rule", "Style", "fontface", "TextPath", "track", "pathArray", "textPath", "importNodes", "Use", "use", "context", "SourceLocation", "lexer", "second", "loc", "Token", "noexpand", "treatAsRelax", "endToken", "ParseError", "underlined", "__proto__", "uppercase", "ESCAPE_LOOKUP", "ESCAPE_REGEX", "getBaseElem", "utils", "elem", "deflt", "setting", "defaultIfUndefined", "hyphenate", "isCharacterBox", "baseElem", "protocolFromUrl", "protocol", "Settings", "displayMode", "leqno", "fleqn", "throwOnError", "errorColor", "macros", "minRuleThickness", "colorIsTextColor", "trust", "maxSize", "maxExpand", "globalGroup", "reportNonstrict", "errorCode", "errorMsg", "useStrictBehavior", "isTrusted", "Boolean", "cramped", "styles", "fracNum", "fracDen", "cramp", "isTight", "Style$1", "DISPLAY", "TEXT", "SCRIPT", "SCRIPTSCRIPT", "scriptData", "blocks", "allBlocks", "supportedCodepoint", "codepoint", "hLinePad", "doubleleftarrow", "doublerightarrow", "leftbrace", "leftbraceunder", "leftgroup", "leftgroupunder", "leftharpoon", "leftharpoonplus", "leftharpoondownplus", "lefthook", "leftlinesegment", "leftmapsto", "leftToFrom", "longequal", "midbrace", "midbraceunder", "oiintSize1", "oiintSize2", "oiiintSize1", "oiiintSize2", "rightbrace", "rightbraceunder", "rightgroup", "rightgroupunder", "rightharpoon", "rightharpoonplus", "rightharpoondownplus", "righthook", "rightlinesegment", "rightToFrom", "tilde1", "tilde2", "tilde3", "tilde4", "widehat1", "widehat2", "widehat3", "widehat4", "widecheck1", "widecheck2", "widecheck3", "widecheck4", "baraboveleftarrow", "rightarrowabovebar", "baraboveshortleftharpoon", "rightharpoonaboveshortbar", "shortbaraboveleftharpoon", "shortrightharpoonabovebar", "DocumentFragment", "depth", "maxFontSize", "toNode", "frag", "toMarkup", "markup", "toText", "createClass", "cls", "initNode", "getColor", "tagName", "Span", "attribute", "Anchor", "href", "Img", "alt", "iCombinations", "SymbolNode", "italic", "script", "_i", "span", "marginRight", "needsSpan", "escaped", "SvgNode", "PathNode", "pathName", "alternate", "LineNode", "assertSymbolDomNode", "fontMetricsData", "sigmasAndXis", "slant", "stretch", "shrink", "xHeight", "quad", "extraSpace", "num1", "num2", "num3", "denom1", "denom2", "sub1", "sub2", "supDrop", "subDrop", "delim1", "delim2", "axisHeight", "defaultRuleThickness", "bigOpSpacing1", "bigOpSpacing2", "bigOpSpacing3", "bigOpSpacing4", "bigOpSpacing5", "sqrtRuleThickness", "ptPerEm", "doubleRuleSep", "arrayRuleWidth", "fboxsep", "fboxrule", "extraCharacterMap", "getCharacterMetrics", "metrics", "fontMetricsBySizeIndex", "ATOMS", "bin", "close", "inner", "open", "punct", "rel", "NON_ATOMS", "mathord", "spacing", "textord", "math", "defineSymbol", "acceptUnicodeChar", "text$1", "main", "ams", "accent", "op", "mathTextSymbols", "textSymbols", "_ch", "letters", "_i2", "_ch2", "wideChar", "_i3", "_ch3", "_i4", "_ch4", "extraLatin", "_i5", "_ch5", "wideLatinLetterData", "wideNumeralData", "sizeStyleMap", "sizeMultipliers", "sizeAtStyle", "Options", "textSize", "phantom", "sizeMultiplier", "_fontMetrics", "BASESIZE", "havingStyle", "havingCrampedStyle", "havingSize", "havingBaseStyle", "wantSize", "havingBaseSizing", "withColor", "withPhantom", "withFont", "withTextFontFamily", "withTextFontWeight", "withTextFontShape", "sizingClasses", "oldOptions", "baseSizingClasses", "fontMetrics", "sizeIndex", "cssEmPerMu", "ptPerUnit", "pt", "mm", "bp", "pc", "cc", "relativeUnit", "em", "validUnit", "calculateSize", "sizeValue", "unitOptions", "lookupSymbol", "fontName", "makeSymbol", "symbolNode", "lookup", "canCombine", "_style", "sizeElementFromChildren", "makeSpan", "makeSvgSpan", "makeFragment", "retrieveTextFontName", "baseFontName", "fontMap", "mathbf", "variant", "mathrm", "textit", "mathit", "mathnormal", "mathbb", "mathcal", "mathfrak", "mathscr", "mathsf", "mathtt", "svgData", "buildCommon", "mathsym", "makeLineSpan", "thickness", "borderBottomWidth", "makeAnchor", "anchor", "wrapFragment", "makeVList", "positionType", "oldChildren", "_depth", "currPos", "diff", "positionData", "pstrutSize", "pstrut", "realChildren", "minPos", "maxPos", "_child", "_elem", "wrapperClasses", "wrapperStyle", "childWrap", "marginLeft", "rows", "vlist", "emptySpan", "depthStrut", "topStrut", "vtable", "makeOrd", "isFont", "fontOrFamily", "wideFontName", "wideFontClass", "fontClasses", "fontData", "fontClass", "_fontName", "_fontName3", "_fontName2", "makeGlue", "measurement", "staticSvg", "svgNode", "viewBox", "preserveAspectRatio", "tryCombineChars", "chars", "thinspace", "mediumspace", "thickspace", "spacings", "mord", "mop", "mbin", "mrel", "minner", "mopen", "mclose", "mpunct", "tightSpacings", "_functions", "_htmlGroupBuilders", "_mathmlGroupBuilders", "defineFunction", "_ref", "handler", "htmlBuilder", "mathmlBuilder", "numArgs", "argTypes", "allowedInArgument", "allowedInText", "allowedInMath", "numOptionalArgs", "infix", "primitive", "defineFunctionBuilders", "_ref2", "normalizeArgument", "ordargument", "makeSpan$1", "binLeftCanceller", "binRightCanceller", "styleMap", "display", "scriptscript", "DomEnum", "buildExpression", "expression", "isRealGroup", "surrounding", "groups", "buildGroup", "glueOptions", "dummyPrev", "dummyNext", "traverseNonSpaceNodes", "prevType", "getTypeOfDomTree", "partialGroup", "checkPartialGroup", "nonspace", "getOutermostNode", "side", "makeNullDelimiter", "moreClasses", "baseOptions", "groupNode", "multiplier", "buildHTMLUnbreakable", "verticalAlign", "buildHTML", "tree", "eqnNum", "tagChild", "nobreak", "htmlNode", "newDocumentFragment", "MathNode", "TextNode", "mathMLTree", "SpaceNode", "makeText", "makeRow", "getVariant", "buildExpression$1", "isOrdgroup", "buildGroup$1", "lastGroup", "_group", "buildExpressionRow", "buildMathML", "texExpression", "isDisplayMode", "forMathmlOnly", "annotation", "semantics", "wrapperClass", "optionsFromSettings", "settings", "displayWrap", "stretchyCodePoint", "widehat", "widecheck", "widetilde", "overleftarrow", "underleftarrow", "xleftarrow", "overrightarrow", "underrightarrow", "xrightarrow", "underbrace", "overbrace", "overgroup", "undergroup", "overleftrightarrow", "underleftrightarrow", "xleftrightarrow", "Overrightarrow", "xRightarrow", "overleftharpoon", "xleftharpoonup", "overrightharpoon", "xrightharpoonup", "xLeftarrow", "xLeftrightarrow", "xhookleftarrow", "xhookrightarrow", "xmapsto", "xrightharpoondown", "xleftharpoondown", "xrightleftharpoons", "xleftrightharpoons", "xtwoheadleftarrow", "xtwoheadrightarrow", "xlongequal", "xtofrom", "xrightleftarrows", "xrightequilibrium", "xleftequilibrium", "katexImagesData", "overlinesegment", "underlinesegment", "stretchy", "topPad", "bottomPad", "totalHeight", "borderColor", "lines", "minWidth", "viewBoxWidth", "viewBoxHeight", "_height", "numChars", "imgIndex", "widthClasses", "aligns", "spans", "paths", "_minWidth", "_viewBoxHeight", "_height2", "numSvgChildren", "_svgNode", "_span", "buildSvgSpan_", "assertNodeType", "assertSymbolNodeType", "typedNode", "checkSymbolNodeType", "grp", "supSubGroup", "isShifty", "baseChar", "accentBody", "clearance", "isStretchy", "accentFull", "accentWrap", "accentNode", "NON_STRETCHY_ACCENT_REGEX", "funcName", "innerGroup", "kern", "paddedNode", "below", "lowerGroup", "newOptions", "upperGroup", "arrowPrefix", "arrowBody", "arrowShift", "upperShift", "lowerShift", "arrowNode", "upperNode", "lowerNode", "_lowerNode", "cdArrowFunctionName", "isStartOfArrow", "cdArrow", "arrowChar", "labels", "callFunction", "bareArrow", "arrowGroup", "code", "htmlBuilder$1", "mathmlBuilder$1", "breakOnTokenText", "gullet", "parseExpression", "marginTop", "globalMap", "checkControlSequence", "tok", "letCommand", "tokens", "unexpandable", "isExpandable", "consumeSpaces", "fetch", "parseFunction", "popToken", "insert", "delimiters", "future", "consumeArg", "expandTokens", "_ref3", "_ref4", "middle", "pushToken", "getMetrics", "styleWrap", "delim", "toStyle", "delimSizeMultiplier", "centerSpan", "makeLargeDelim", "makeGlyphSpan", "sizeClass", "makeInner", "toFixed", "verts", "doubleVerts", "makeStackedDelim", "heightTotal", "repeat", "topMetrics", "topHeightTotal", "repeatMetrics", "repeatHeightTotal", "bottomMetrics", "bottomHeightTotal", "middleHeightTotal", "middleFactor", "middleMetrics", "minHeight", "realHeightTotal", "ceil", "stack", "innerHeight", "_innerHeight", "emPad", "sqrtSvg", "sqrtName", "extraViniculum", "pathNode", "stackLargeDelimiters", "stackAlwaysDelimiters", "stackNeverDelimiters", "sizeToMaxHeight", "stackNeverDelimiterSequence", "stackAlwaysDelimiterSequence", "stackLargeDelimiterSequence", "delimTypeToFont", "traverseSequence", "sequence", "heightDepth", "makeCustomSizedDelim", "delimType", "advanceWidth", "spanHeight", "texHeight", "ruleWidth", "delimiterExtend", "maxDistFromAxis", "delimiterSizes", "mclass", "checkDelimiter", "symDelim", "assertParsed", "leftrightDepth", "expect", "right", "rightColor", "leftDelim", "rightDelim", "innerDepth", "hadMiddle", "isMiddle", "colorOptions", "leftNode", "rightNode", "middleDelim", "textNode", "middleNode", "htmlBuilder$2", "imgShift", "isSingleChar", "lineWeight", "angleHeight", "paddingLeft", "ruleThickness", "borderStyle", "borderWidth", "borderTopWidth", "borderRightWidth", "backgroundColor", "mathmlBuilder$2", "thk", "_ref5", "_environments", "defineEnvironment", "getHLines", "hlineInfo", "nxt", "consume", "validateAmsEnvironmentContext", "envName", "parseArray", "hskipBeforeAndAfter", "addJot", "arraystretch", "colSeparationType", "addEqnNum", "singleRow", "emptySingleRow", "maxNumCols", "beginGroup", "expandMacroAsText", "row", "rowGaps", "hLinesBeforeRow", "cell", "endGroup", "nextToken", "parseSizeGroup", "dCellStyle", "htmlBuilder$3", "nr", "hlines", "arraycolsep", "baselineskip", "jot", "arrayskip", "arstrutHeight", "arstrutDepth", "setHLinePos", "hlinesInGap", "isDashed", "inrow", "outrow", "elt", "rowGap", "colSep", "colDescrNum", "colDescriptions", "eqnNumSpans", "rw", "eqnTag", "colDescr", "firstSeparator", "separator", "lineType", "borderRightStyle", "margin", "sepwidth", "pregap", "col", "_shift", "postgap", "dashes", "vListElems", "hline", "lineShift", "eqnNumCol", "alignMap", "mathmlBuilder$3", "tbl", "glue", "table", "menclose", "columnLines", "prevTypeWasAlign", "iStart", "iEnd", "_cols", "rowLines", "alignedHandler", "numMaths", "separationType", "numCols", "emptyGroup", "arg0", "isAligned", "styling", "curMaths", "nde", "ca", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "colAlign", "payload", "parsedRows", "endChar", "rowNodes", "labelNum", "inLabel", "wrappedArrow", "environments", "nameGroup", "env", "_args", "parseArguments", "endNameToken", "makeSpan$2", "htmlBuilder$4", "mathmlBuilder$4", "lspace", "rspace", "binrelClass", "atom", "baseArg", "shiftedArg", "baseOp", "limits", "alwaysHandleSupSub", "parentIsSupSub", "suppressBaseShift", "htmlBuilder$5", "mathmlBuilder$5", "fontAliases", "adjustStyle", "originalStyle", "htmlBuilder$6", "nstyle", "dstyle", "numerm", "numer", "continued", "hStrut", "dStrut", "ruleSpacing", "numShift", "denomShift", "frac", "delimSize", "denomm", "denom", "hasBarLine", "barSize", "midShift", "candidateClearance", "mathmlBuilder$6", "isDisplay", "withDelims", "leftOp", "rightOp", "replaceWith", "stylArray", "delimFromValue", "delimString", "barNode", "styl", "textOrd", "_ref6", "htmlBuilder$7", "braceBody", "isOver", "vSpan", "formatUnsupportedCmd", "trustContext", "keyVal", "mathml", "sizeData", "totalheight", "lastIndexOf", "mathFunction", "muUnit", "dimension", "fix", "outerMode", "switchMode", "chooseMathStyle", "assembleSupSub", "supGroup", "subGroup", "baseShift", "finalGroup", "subIsSingleCharacter", "_bottom", "spacer", "noSuccessor", "htmlBuilder$8", "hasLimits", "large", "stash", "mathmlBuilder$8", "operator", "singleCharBigOps", "fName", "singleCharIntegrals", "builtinMacros", "defineMacro", "expandOnce", "consumeArgs", "digitToNumber", "B", "E", "F", "digit", "newcommand", "existsOK", "nonexistsOK", "exists", "isDefined", "argText", "expandNextToken", "functions", "dotsByToken", "thedots", "expandAfterFuture", "spaceAfterDots", "latexRaiseA", "htmlBuilder$9", "childText", "sizingGroup", "isAllString", "word", "identifier", "semisimple", "amount", "sizeFuncs", "smashHeight", "smashDepth", "tbArg", "letter", "smashedNode", "lineClearance", "minDelimiterHeight", "delimDepth", "rootm", "toShift", "rootVList", "rootVListWrap", "styleMap$1", "newStyle", "builderDelegate", "supm", "subm", "minSupShift", "valueBase", "valueSup", "valueSub", "supShift", "subShift", "_newOptions", "isOiint", "maxWidth", "vlistElem", "_vlistElem", "isBrace", "_base2", "_base", "defaultVariant", "mi", "mn", "mtext", "cssSpace", "regularSpace", "pad", "padNode", "textFontFamilies", "textFontWeights", "textFontShapes", "optionsWithFont", "makeVerb", "spaceRegexString", "controlWordWhitespaceRegexString", "combiningDiacriticalMarkString", "combiningDiacriticalMarksEndRegex", "tokenRegexString", "Lexer", "tokenRegex", "catcodes", "setCatcode", "char", "lex", "lastIndex", "nlIndex", "Namespace", "builtins", "globalMacros", "undefStack", "undefs", "undef", "implicitCommands", "MacroExpander", "expansionCount", "feed", "newMode", "pushTokens", "scanArgument", "isOptional", "delims", "isDelimited", "expandableOnly", "topToken", "expansion", "_getExpansion", "expanded", "expandMacro", "oldStackLength", "definition", "catcode", "stripped", "bodyLexer", "unicodeAccents", "unicodeSymbols", "Parser", "breakOnInfix", "endOfExpression", "parseAtom", "formLigatures", "handleInfixNodes", "overIndex", "numerNode", "denomNode", "numerBody", "denomBody", "handleSupSubscript", "symbolToken", "parseGroup", "textordArray", "superscript", "subscript", "funcData", "totalArgs", "argType", "parseGroupOfType", "optional", "parseColorGroup", "parseUrlGroup", "parseArgumentGroup", "parseStringGroup", "modeName", "argToken", "parseRegexGroup", "regex", "firstToken", "groupEnd", "parseSymbol", "nucleus", "parseTree", "toParse", "TypeError", "render", "baseNode", "renderToDomTree", "compatMode", "renderError", "katexNode", "mathMLNode", "_htmlNode", "katex", "renderToString", "__parse", "__renderToDomTree", "__renderToHTMLTree", "__setFontMetrics", "__defineMacro", "__domTree", "Hypher", "language", "exceptions", "createTrie", "leftMin", "rightMin", "TrieNode", "patternObject", "patterns", "_points", "hyphenateText", "minLength", "characters", "originalCharacters", "wordLength", "nodePoints", "nodePointsLength", "characterPoints", "lowerCaseWord", "leftmin", "rightmin", "_arrayPush", "spreadableSymbol", "isConcatSpreadable", "arrayPush", "isFlattenable", "_baseFlatten", "baseFlatten", "predicate", "isStrict", "flattenDeep_1", "compact_1", "resIndex", "HtmlGenerator", "pictureCanvas", "picture", "abstract", "languagePatterns", "hEn", "_h", "blockRegex", "isBlockLevel", "subsection", "subsubsection", "paragraph", "subparagraph", "verbatim", "_dom", "htmlDocument", "doc", "implementation", "createHTMLDocument", "charset", "baseURL", "stylesAndScripts", "domFragment", "createStyleSheet", "createScript", "URL", "applyLengthsAndGeometryToDom", "setProperty", "twp", "mlwp", "mrwp", "mpwp", "appendChildren", "fs", "compact", "flattenDeep", "canvas", "pic", "skip", "LaTeXJSComponent", "HTMLElement", "shadow", "attachShadow", "onContentReady", "observer", "MutationObserver", "mutationList", "disconnect", "observe", "childList", "async", "import", "default", "page", "host", "pDoc", "links", "cmu", "linkEl", "connectedCallback"]
}
